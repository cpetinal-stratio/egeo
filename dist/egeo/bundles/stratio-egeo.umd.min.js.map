{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@stratio/egeo/lib/st-alerts/st-alerts.model.ts","ng://@stratio/egeo/lib/st-alerts/st-alerts.service.ts","ng://@stratio/egeo/lib/st-modal/st-modal.model.ts","ng://@stratio/egeo/lib/utils/window-service.ts","ng://@stratio/egeo/lib/st-modal/st-modal.component.ts","ng://@stratio/egeo/lib/st-modal/st-modal.service.ts","ng://@stratio/egeo/lib/st-pagination/st-pagination.service.ts","ng://@stratio/egeo/lib/utils/egeo-resolver/egeo-resolve.service.ts","ng://@stratio/egeo/lib/utils/unique-dispatcher.ts","ng://@stratio/egeo/lib/pipes/search-filter/search-filter.pipe.ts","ng://@stratio/egeo/lib/pipes/st-object-to-array/st-object-to-array.pipe.ts","ng://@stratio/egeo/lib/pipes/pipes.module.ts","ng://@stratio/egeo/lib/st-alerts/st-alerts.component.ts","ng://@stratio/egeo/lib/st-alerts/alert-box/st-alert-box.component.ts","ng://@stratio/egeo/lib/st-alerts/alert-box/st-alert-box.module.ts","ng://@stratio/egeo/lib/st-alerts/st-alerts.module.ts","ng://@stratio/egeo/lib/st-pop/st-pop.model.ts","ng://@stratio/egeo/lib/st-bubble/st-bubble.component.ts","ng://@stratio/egeo/lib/st-pop/st-pop.component.ts","ng://@stratio/egeo/lib/st-pop/st-pop.module.ts","ng://@stratio/egeo/lib/st-bubble/st-bubble.module.ts","ng://@stratio/egeo/lib/st-breadcrumbs/st-breadcrumbs.interface.ts","ng://@stratio/egeo/lib/st-breadcrumbs/st-breadcrumbs.component.ts","ng://@stratio/egeo/lib/st-breadcrumbs/st-breadcrumbs-item/st-breadcrumbs-item.component.ts","ng://@stratio/egeo/lib/st-breadcrumbs/st-breadcrumbs.module.ts","ng://@stratio/egeo/lib/st-checkbox/st-checkbox.component.ts","ng://@stratio/egeo/lib/st-tooltip/st-tooltip.component.ts","ng://@stratio/egeo/lib/st-label/st-label.component.ts","ng://@stratio/egeo/lib/st-tooltip/st-tooltip.module.ts","ng://@stratio/egeo/lib/st-label/st-label.module.ts","ng://@stratio/egeo/lib/st-checkbox/st-checkbox.module.ts","ng://@stratio/egeo/lib/st-docs/st-docs.service.ts","ng://@stratio/egeo/lib/st-docs/st-docs.component.ts","ng://@stratio/egeo/lib/st-horizontal-tabs/st-horizontal-tabs.model.ts","ng://@stratio/egeo/lib/utils/egeo-utils.ts","ng://@stratio/egeo/lib/decorators/require-decorators.ts","ng://@stratio/egeo/lib/st-horizontal-tabs/st-horizontal-tabs.component.ts","ng://@stratio/egeo/lib/st-horizontal-tabs/st-horizontal-tabs.module.ts","ng://@stratio/egeo/lib/st-docs/st-prism/st-prism.component.ts","ng://@stratio/egeo/lib/st-docs/st-prism/st-prism.module.ts","ng://@stratio/egeo/lib/st-docs/st-docs.module.ts","ng://@stratio/egeo/lib/st-draggable-card/st-draggable-card.component.ts","ng://@stratio/egeo/lib/st-draggable-card/st-draggable-card.module.ts","ng://@stratio/egeo/lib/st-dropdown-menu/st-dropdown-menu.interface.ts","ng://@stratio/egeo/lib/st-dropdown-menu/st-dropdown-menu.component.ts","ng://@stratio/egeo/lib/st-spinner/st-spinner.component.ts","ng://@stratio/egeo/lib/st-spinner/st-spinner.module.ts","ng://@stratio/egeo/lib/st-dropdown-menu/st-dropdown-menu-item/st-dropdown-menu-item.component.ts","ng://@stratio/egeo/lib/st-dropdown-menu/st-dropdown-menu-item/st-dropdown-menu-item.module.ts","ng://@stratio/egeo/lib/st-dropdown-menu/st-dropdown-menu.module.ts","ng://@stratio/egeo/lib/st-file-button/st-file-button.component.ts","ng://@stratio/egeo/lib/st-file-button/st-file-button.module.ts","ng://@stratio/egeo/lib/st-footer/st-footer.component.ts","ng://@stratio/egeo/lib/st-footer/st-footer.module.ts","ng://@stratio/egeo/lib/directives/form/st-min-validator/st-min-validator.ts","ng://@stratio/egeo/lib/directives/form/st-max-validator/st-max-validator.ts","ng://@stratio/egeo/lib/directives/form/form-directives.module.ts","ng://@stratio/egeo/lib/st-form/st-form-field/st-form-field.interface.ts","ng://@stratio/egeo/lib/st-form/st-form.component.ts","ng://@stratio/egeo/lib/st-input/st-input.component.ts","ng://@stratio/egeo/lib/directives/st-click-outside/st-click-outside.directive.ts","ng://@stratio/egeo/lib/directives/st-click-outside/st-click-outside.module.ts","ng://@stratio/egeo/lib/st-input/st-input.module.ts","ng://@stratio/egeo/lib/st-form/st-form-field/st-form-field.component.ts","ng://@stratio/egeo/lib/st-select/st-check-validations.ts","ng://@stratio/egeo/lib/st-select/st-select.ts","ng://@stratio/egeo/lib/st-select/st-select.module.ts","ng://@stratio/egeo/lib/st-switch/st-switch.component.ts","ng://@stratio/egeo/lib/st-switch/st-switch.module.ts","ng://@stratio/egeo/lib/st-textarea/st-textarea.component.ts","ng://@stratio/egeo/lib/st-textarea/st-textarea.module.ts","ng://@stratio/egeo/lib/st-form/st-form-field/st-form-field.module.ts","ng://@stratio/egeo/lib/st-form/st-form.module.ts","ng://@stratio/egeo/lib/st-form-list/st-form-list.component.ts","ng://@stratio/egeo/lib/st-form-list/st-form-list.module.ts","ng://@stratio/egeo/lib/st-fullscreen-layout/st-fullscreen-layout.ts","ng://@stratio/egeo/lib/st-fullscreen-layout/st-fullscreen-layout.module.ts","ng://@stratio/egeo/lib/st-header/st-header.component.ts","ng://@stratio/egeo/lib/st-header/st-header.model.ts","ng://@stratio/egeo/lib/st-header/st-header.utils.ts","ng://@stratio/egeo/lib/st-header/menu-option/menu-option.ts","ng://@stratio/egeo/lib/st-header/menu/menu.ts","ng://@stratio/egeo/lib/st-header/st-header.module.ts","ng://@stratio/egeo/lib/st-info-box/st-info-box.component.ts","ng://@stratio/egeo/lib/st-info-box/st-info-box.module.ts","ng://@stratio/egeo/lib/st-item-list/item-list-item/item-list-item.component.ts","ng://@stratio/egeo/lib/st-item-list/item-list-scroll/item-list-scroll.component.ts","ng://@stratio/egeo/lib/st-item-list/st-item-list.component.ts","ng://@stratio/egeo/lib/utils/event-window-manager.ts","ng://@stratio/egeo/lib/st-search/st-search.model.ts","ng://@stratio/egeo/lib/st-search/st-search.component.ts","ng://@stratio/egeo/lib/st-search/st-search.module.ts","ng://@stratio/egeo/lib/st-item-list/st-item-list.module.ts","ng://@stratio/egeo/lib/st-launcher/st-launcher.model.ts","ng://@stratio/egeo/lib/st-launcher/st-launcher-item/st-launcher-item.component.ts","ng://@stratio/egeo/lib/st-launcher/st-launcher.component.ts","ng://@stratio/egeo/lib/st-launcher/st-launcher.module.ts","ng://@stratio/egeo/lib/st-modal/st-modal-buttons/st-modal-buttons.ts","ng://@stratio/egeo/lib/st-modal/st-modal.module.ts","ng://@stratio/egeo/lib/st-modal2/st-modal2.component.ts","ng://@stratio/egeo/lib/st-modal2/st-modal2.module.ts","ng://@stratio/egeo/lib/st-page-title/st-page-title.component.ts","ng://@stratio/egeo/lib/directives/st-input-adjustable/st-input-adjustable.ts","ng://@stratio/egeo/lib/st-page-title/st-page-title.module.ts","ng://@stratio/egeo/lib/st-pagination/st-pagination.component.ts","ng://@stratio/egeo/lib/st-pagination/st-pagination.pipe.ts","ng://@stratio/egeo/lib/st-pagination/st-pagination.module.ts","ng://@stratio/egeo/lib/st-pop-over/st-pop-over.component.ts","ng://@stratio/egeo/lib/st-pop-over/st-pop-over.module.ts","ng://@stratio/egeo/lib/st-progress-bar/st-progress-bar.ts","ng://@stratio/egeo/lib/st-progress-bar/st-progress-bar.module.ts","ng://@stratio/egeo/lib/st-radio-menu/st-radio-menu.component.ts","ng://@stratio/egeo/lib/st-radio/st-radio.change.ts","ng://@stratio/egeo/lib/st-radio/st-radio.component.ts","ng://@stratio/egeo/lib/st-radio/st-radio.module.ts","ng://@stratio/egeo/lib/st-radio-menu/st-radio-menu.module.ts","ng://@stratio/egeo/lib/st-sidebar/st-sidebar-visual-mode.ts","ng://@stratio/egeo/lib/st-sidebar/st-sidebar.component.ts","ng://@stratio/egeo/lib/st-sidebar/st-sidebar-item-list/st-sidebar-item-list.component.ts","ng://@stratio/egeo/lib/st-sidebar/st-sidebar.module.ts","ng://@stratio/egeo/lib/st-table/shared/st-table-cell/st-table-cell.component.ts","ng://@stratio/egeo/lib/st-table/shared/st-table-row/st-table-row.component.ts","ng://@stratio/egeo/lib/st-table/st-table.interface.ts","ng://@stratio/egeo/lib/st-table/shared/st-popover-filter/st-popover-filter.component.ts","ng://@stratio/egeo/lib/st-table/shared/order.ts","ng://@stratio/egeo/lib/st-table/st-table.component.ts","ng://@stratio/egeo/lib/st-table/st-table.module.ts","ng://@stratio/egeo/lib/st-tag-input/st-tag-input.component.ts","ng://@stratio/egeo/lib/st-tag-input/st-tag-input.module.ts","ng://@stratio/egeo/lib/st-toggle-buttons/st-toggle-buttons.component.ts","ng://@stratio/egeo/lib/st-toggle-buttons/st-toggle-buttons.module.ts","ng://@stratio/egeo/lib/st-two-list-selection/list-item/list-item.component.ts","ng://@stratio/egeo/lib/st-two-list-selection/list-selection/list-selection.component.ts","ng://@stratio/egeo/lib/st-two-list-selection/list-scroll/list-scroll.component.ts","ng://@stratio/egeo/lib/st-two-list-selection/st-two-list-selection.ts","ng://@stratio/egeo/lib/st-two-list-selection/st-two-list-selection.component.ts","ng://@stratio/egeo/lib/st-two-list-selection/st-two-list-selection.view.component.ts","ng://@stratio/egeo/lib/st-two-list-selection/st-two-list-selection.module.ts","ng://@stratio/egeo/lib/st-vertical-tabs/st-vertical-tabs.component.ts","ng://@stratio/egeo/lib/st-vertical-tabs/st-vertical-tabs.module.ts","ng://@stratio/egeo/lib/st-widget/st-widget.component.ts","ng://@stratio/egeo/lib/st-widget/st-widget.module.ts","ng://@stratio/egeo/lib/st-foreground-notifications/st-foreground-notifications.model.ts","ng://@stratio/egeo/lib/st-foreground-notifications/st-foreground-notifications.ts","ng://@stratio/egeo/lib/st-foreground-notifications/st-foreground-notifications.module.ts","ng://@stratio/egeo/lib/st-zero-page/st-zero-page.component.ts","ng://@stratio/egeo/lib/st-zero-page/st-zero-page.module.ts","ng://@stratio/egeo/lib/st-color-picker/st-color-picker.component.ts","ng://@stratio/egeo/lib/st-color-picker/st-color-picker.module.ts","ng://@stratio/egeo/lib/st-dynamic-table/utils/st-dynamic-table.utils.ts","ng://@stratio/egeo/lib/st-dynamic-table/st-dynamic-table.component.ts","ng://@stratio/egeo/lib/st-dynamic-table/st-dynamic-table.module.ts","ng://@stratio/egeo/lib/st-vertical-icon-tabs/st-vertical-icon-tabs.component.ts","ng://@stratio/egeo/lib/st-vertical-icon-tabs/st-vertical-icon-tabs.module.ts","ng://@stratio/egeo/lib/barrels.ts","ng://@stratio/egeo/lib/egeo.module.ts","ng://@stratio/egeo/lib/utils/st-regex.ts","ng://@stratio/egeo/lib/st-bubble-on-ellipsis/st-bubble-on-ellipsis.component.ts","ng://@stratio/egeo/lib/st-bubble-on-ellipsis/st-bubble-on-ellipsis.module.ts","ng://@stratio/egeo/lib/st-filter-selector/st-filter-selector.component.ts","ng://@stratio/egeo/lib/st-filter-selector/st-filter-selector.module.ts","ng://@stratio/egeo/lib/st-menu/st-menu.model.ts","ng://@stratio/egeo/lib/st-menu/st-menu.component.ts","ng://@stratio/egeo/lib/st-menu/st-menu-options/st-menu-options.component.ts","ng://@stratio/egeo/lib/st-menu/st-menu.module.ts","ng://@stratio/egeo/lib/st-tag/st-tag.model.ts","ng://@stratio/egeo/lib/st-tag/st-tag.component.ts","ng://@stratio/egeo/lib/st-tag/st-tag.module.ts","ng://@stratio/egeo/lib/utils/demo-generator/demo-generator.interface.ts","ng://@stratio/egeo/lib/utils/demo-generator/demo-generator.ts","ng://@stratio/egeo/lib/utils/demo-generator/demo-generator.routing.ts","ng://@stratio/egeo/lib/utils/demo-generator/demo-generator.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","STALERT_SEVERITY","SUCCESS","WARNING","ERROR","INFO","StAlertLink","StAlert","id","title","message","severity","timeout","extendedTimeout","link","_readed","_opacity","_opacityState","Subject","_removeEvent","asObservable","notify","setVisible","pauseNotify","clearAnimation","stopLife","continueNotify","startLife","cancel","increase","_this","_changeVisibilityInterval","window","setInterval","modifyVisibility","notifyForRemove","complete","clearInterval","clearTimeout","_lifeTimeout","setTimeout","StAlertsService","_alertsList","_nextId","_alertsStream","BehaviorSubject","notifyAlert","undefined","alert","removeAlertEvent","subscribe","alertToRemove","onNotifyRemove","insertAlert","pos","findIndex","internalAlert","splice","Injectable","StModalResponse","YES","NO","CLOSE","StModalBasicType","DELETE","CONFIRM","StModalButton","StModalConfig","StWindowRefService","StModalComponent","cfr","windowRef","click","EventEmitter","defaultMaxWidth","defaultMinWidth","modalConfig","iconStatus","fullscreen","modalTitle","buttons","html","messageTitle","maxWidth","minWidth","max-width","min-width","width","getModalActualWidth","empty","showCloseBtn","onClose","emit","response","close","ngAfterViewInit","emptyModal","targetEmpty","targetContent","component","loadBody","nativeWindow","document","body","classList","add","ngOnDestroy","componentRef","destroy","remove","screenWidth","screen","clear","compFactory","resolveComponentFactory","createComponent","bindModalInputs","keys","inputs","forEach","instance","outputs","changeDetectorRef","detectChanges","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ComponentFactoryResolver","Input","Output","ViewChild","read","ViewContainerRef","static","StModalService","_cfr","_containerRef","dynamicModal","container","show","config","errors","canCreateModal","Error","join","notifyButtonInteraction","createModal","createConfig","showBasicModal","type","okButton","cancelButton","icon","label","classes","responseValue","closeOnClick","unshift","stModalFactory","bindVars","bind","buttonResponse","defaultConfig","checkedConfig","checkButtons","map","button","StPaginationService","newPage","items","currentPage","perPage","initItem","_.takeRight","lastItem","slice","EgeoResolveService","getKeys","object","searchedValue","searchInDeep","setKeys","resolved","element","_set","path","translate","translateService","toTranslate","extractTranslationKeys","get","pipe","translation","remapObjectWithTranslations","Observable","observer","translateArrayOfKeys","remapArrayWithTranslations","translations","originalArray","resolverKeys","newObj","_cloneDeep","_keys","_forEach","resolvKey","getTranslationFromTranslatedKey","resolverKey","translationElementKey","toResolve","list","_values","_omit","result","_has","objKey","getPath","actualPath","obj","isArray","toString","SelectOneDispatcher","listeners","name","_b","tslib_1.__values","_c","listener","listen","StFilterList","transform","field","search","checkParams","filter","contains","isDefined","isString","toUpperCase","Pipe","StObjectToArrayPipe","PipesModule","NgModule","imports","CommonModule","declarations","exports","StAlertsComponent","alertService","showInConsole","qaTag","StAlertBoxComponent","_cd","clickLink","opacity","ngOnInit","changeOpacity","notifyConsole","severityColorValue","getSeverityColor","iconValue","getIcon","closeAlert","goTo","markForCheck","console","warn","log","ChangeDetectorRef","StAlertBoxModule","StAlertsModule","StPopPlacement","TOP","TOP_START","TOP_END","BOTTOM","BOTTOM_START","BOTTOM_END","StPopOffset","x","y","StBubbleComponent","hidden","offset","showArrow","animation","openToLeft","small","placement","StPopComponent","_el","_hidden","calculatePosition","ngOnChanges","changes","updateWidth","getContentElement","nativeElement","querySelector","buttonParentEl","contentEl","buttonEl","firstElementChild","coords","getCoords","style","position","z","direction","getBoundingClientRect","clientRect","height","Math","ceil","ElementRef","HostListener","StPopModule","providers","StBubbleModule","StBreadCrumbItem","StBreadCrumbMode","DEFAULT","TITLE","StBreadCrumbsComponent","options","elementsToShow","mode","select","indexArray","_initPos","calculateStart","currElsToShow","currentValue","currOptions","onSelect","index","toEmit","getId","getLabel","hasIcon","Boolean","_range","StBreadcrumbItemComponent","_qaTag","replace","StBreadcrumbsModule","CHECKBOX_CONTROL_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","StCheckboxComponent","multi","_changeDetectorRef","change","_checked","_controlValueAccessorChangeFn","onTouched","checked","handleClick","readonly","disabled","handleChange","$event","stopPropagation","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","StTooltipComponent","_onClick","_title","setAttribute","removeAttribute","_checkTooltipState","removeEventListener","onClick","showOnClick","classTooltipOn","addEventListener","classTooltip","event","HostBinding","StLabelComponent","_super","classStLabel","tslib_1.__extends","StTooltipModule","StLabelModule","StCheckboxModule","StDocsService","http","getFile","route","location","pathname","responseType","catchError","of","HttpClient","StDocsComponent","cd","docsService","text","active","subscription","htmlFile","zip","tsFile","componentFile","htmlCode","tsCode","componentCode","data","demoTsCode","componentTsCode","disableTabOption","unsubscribe","onChangeOption","file","demoCode","filterOption","StHorizontalTabStatus","warning","EgeoUtils","validateInputs","scope","input","toDash","$1","toLowerCase","substring","err","EGEO_METADATA","StRequired","condition","meta","getOwnMetadata","required","requireCondition","defineMetadata","StEgeo","params","_onInit","_i","checkDeprecated","checkRequired","deprecated","initialValue","reduce","prev","curr","checkConditionMetadata","StHorizontalTabsComponent","changedOption","activeOption","activateOption","isActive","option","getTabStatus","tab","status","tslib_1.__decorate","StHorizontalTabsModule","StPrismComponent","async","callback","ngAfterViewChecked","highlightAll","highlightElement","Prism","encapsulation","ViewEncapsulation","None","StPrismModule","StDocsModule","HttpClientModule","StDraggableCardComponent","onDragStart","onDragEnd","draggable","_dragging","dragStartHandle","card","dataTransfer","effectAllowed","dropEffect","dragEndHandle","StDraggableCardModule","ARROW_KEY_CODE","StDropDownMenuGroup","StDropDownMenuItemSchema","StDropDownMenuGroupSchema","StDropDownVisualMode","OPTION_LIST","MENU_LIST","StDropdownMenuComponent","el","renderer","emptyListMessage","selectedItem","itemsBeforeScroll","moveSelected","styleSelected","isLoading","visualMode","keyBoardMove","scrollAtBottom","itemMouseEnter","itemMouseLeave","widthMenu","_itemHeight","_focusedOptionPos","_focusListenerFn","arrowKeyListener","getAttribute","componentId","isDropDownGroup","st-dropdown-menu","menu-list","displayAsMenuList","getItemId","getItemValueMerged","itemListElement","parent_1","listOfElements","getElementsByClassName","item","scrollTop","offsetTop","onChange","onHandleScroll","scrollHeight","clientHeight","onMouseEnter","onMouseLeave","buttonElement","children","getSelectedItemPosition","_items_1","nextFocus","selectedItemPosition","code","preventDefault","querySelectorAll","focus","Renderer2","StSpinnerComponent","theme","classesValue","getClasses","StSpinnerModule","StDropdownMenuItemComponent","sanitizer","onChangeItem","onToggleExtraButtonBubble","visibleExtraButtonBubble","hasItem","selected","bypassSecurityTrustHtml","extraIcon","DomSanitizer","StDropdownMenuItemModule","StDropdownMenuModule","StFileButtonComponent","buttonClass","accepted","_accepted","split","eventData","files","areFilesValid","srcElement","indexOf","pop","StFileButtonModule","StFooterComponent","router","links","goToLink","url","open","navigate","Router","StFooterModule","RouterModule","StMinValidator","_createValidator","_onChange","validate","min","_validator","registerOnValidatorChange","Validators","Number","Directive","NG_VALIDATORS","host","[attr.min]","StMaxValidator","max","[attr.max]","SHARED_FORM_DIRECTIVES","StFormDirectiveModule","FORM_UI_COMPONENT","StFormComponent","nestingLevel","disabledSectionMessage","sectionDescriptionLevel","showTooltips","valueChange","showCollapsedSectionFields","innerValue","_value","_parentFieldSubscription","_schema","schema","dependencies","_parentFields","forceValidations","form","markAsPristine","control","controls","parentField","this_1","valueChanges","childrenFields","j","_","propertyName","setErrors","isRequired","isCollapsedSection","ui","iShowMoreSection","isAParentField","getOptionalButtonLabel","parentName","onChangeOptionalFieldsVisibility","getFieldClasses","parent-field","isASwitchSection","isTheFirstField","fieldHasToBeCreated","createField","getParentField","isInADisabledSection","fulfillDependencyVisibility","isRelatedField","properties","relatedTo","onChangeProperty","property","disable","enable","sectionEnabler","isAnAccordion","onClickTitle","onClickLink","fieldKey","fulfill","propertySchema","visible","class","StInputComponent","placeholder","fieldType","isFocused","autocompleteList","charsToShowAutocompleteList","blur","displayResetButtonValue","errorMessage","showErrorValue","expandedMenu","sub","statusChanges","checkErrors","internalControl","FormControl","internalInputModel","valueChangeSub","getTypedValue","showAutocompleteMenu","showError","displayResetButton","vc","first","setValue","enabled","pristine","default","dirty","resetToDefault","onListSelect","onClickOutside","onFocus","onFocusOut","emitEvent","getErrorMessage","generic","minLength","maxLength","pattern","isNaN","ViewChildren","StClickOutside","elementRef","clickOutside","onDocumentClick","targetElement","StClickOutsideModule","StInputModule","FormsModule","ReactiveFormsModule","StFormFieldComponent","showTooltip","_defaultErrorMessages","selectOptions","getSelectOptions","readOnly","templateModel","validator","enum","_loadErrorMessages","exclusiveMinimum","minimum","getInputStep","exclusiveMaximum","maximum","examples","description","hasType","hasDependencies","enumValues","uiOptions","find","_option","onBlur","errorMessages","StFormFieldComponent_1","StCheckValidationsDirective","notifyErrorsIfExists","valid","NgControl","StSelectComponent","_selectElement","_injector","tooltip","enabledSearcher","placeholderSearch","expand","searchInput","inputFormControl","_inputHTMLElement","_isDisabled","_options","notifyError","findByProperty","removeAllSelected","selectId","touched","onSearch","onSearchClick","newValue","inputElement","directive","onButtonClick","toggleButton","onButtonKeyPress","clearSearchInput","createResetButton","onScrollAtBottom","propName","propValue","isStDropdownItemList","isStDropdownGroupList","_flatten","group","Injector","StSelectModule","StSwitchComponent","_disabled","registeredOnChange","StSwitchComponent_1","StSwitchModule","StTextareaComponent","wrap","internalTextareaModel","StTextareaModule","StFormFieldModule","StFormModule","StFormListComponent","buttonLabel","formArray","FormArray","updateForm","addItem","generateItemFormGroup","model","removeItem","removeAt","formGroup","FormGroup","addControl","rowFormGroup","rowPosition","StFormListModule","StFullscreenLayoutComponent","showCloseButton","overflow","StFullscreenLayoutModule","StHeaderComponent","_router","_windowServiceRef","menu","navigateByDefault","selectMenu","showMenuNames","_headerSize","headerFixPart","userMenuElementWidth","checkMenuLabelVisibility","onResize","onSelectMenu","external","openInNewPage","userMenuContainer","windowSize","innerWidth","canShowMenuNames","StHeaderSubMenuOption","StHeaderMenuItem","StDropDownMenuItem","StHeaderMenuOptionSchema","StHeaderSubMenuOptionSchema","StHeaderUtils","isRouteActive","StHeaderMenuOptionComponent","_actualPath","_subscription","events","_onRouterEvent","hasSubmenu","subMenus","qaId","_getQaId","submenuList","_getSubmenuList","onMenuClick","changeOption","selection","NavigationEnd","urlAfterRedirects","StHeaderMenuComponent","StHeaderModule","StInfoBoxComponent","styleValue","getStyles","min-height","max-height","StInfoBoxModule","ItemListItemComponent","align","selectItem","itemSelected","emitOnSelect","stopImmediatePropagation","ItemListScrollComponent","scrollItems","StItemListComponent","hasSearch","searchPlaceholder","EventWindowManager","_renderer","openElement","closeElement","globalListener","forceClose","onForceClose","_eventElementRef","StSearchEventOrigin","INPUT","LIST","FILTER","ENTER","StSearchEvent","StSearchComponent","_render","debounce","liveSearch","withAutocomplete","showIcon","emptyAutocompleteListMessage","selectFilter","searchBox","subscriptionSearch","subscriptionSearchClearButton","lastEmittedText","val","showClear","checkDisabled","manageSubscription","filterOptions","checkDebounceChange","checkValueChange","checkDisableChange","checkAutoCompleteMenuChange","onChangeFilter","emitValue","launchSearch","force","origin","canSearch","showAutoCompleteMenu","onKeyPress","keyCode","which","clearInput","isEqualPrevious","newSearch","checkMins","trim","debounceTime","StSearchModule","StItemListModule","VirtualScrollerModule","StLauncherItem","StLauncherGroup","StLauncherItemSchema","StLauncherGroupSchema","StLauncherItemComponent","toggle","view","expanded","limit","StLauncherComponent","viewMore","_items","firstChange","_isEqual","onToggleGroup","groupItem","onSelectItem","onViewMore","StLauncherModule","StModalButtonsComponent","buttonConfig","hasButtonsValue","hasButtons","getButtonClass","getButtonId","getButtonLabelWithoutSpaces","clickButton","StModalModule","withComponents","components","ngModule","ANALYZE_FOR_ENTRY_COMPONENTS","useValue","entryComponents","StModal2Component","onEnter","ESCAPE_KEYCODE","ENTER_KEYCODE","onKeydownHandler","closeOnEscape","StModal2Module","PAGETITLE_CONTROL_ACCESSOR","StPageTitleComponent","leftButton","editable","edit","hasPreTitleValue","hasPreTitle","onClickedButton","preTitle","onEdit","onClickEdit","StInputAdjustable","ngModel","createHiddenTitle","hiddenTitle","innerText","parentNode","clientWidth","createElement","appendChild","className","visibility","textTransform","whiteSpace","NgModel","StPageTitleModule","StPaginationComponent","_paginationElement","perPageOptions","showFrom","iconClasses","previous","changePerPage","disableNextButton","disablePrevButton","_currentPage","_perPage","updatePages","onChangePerPage","_total","total","generateItems","pagination","paginationId","addPageOption","nextPage","prevPage","firstItem","StPaginationPipe","service","pure","StPaginationModule","StPopOverComponent","showSettingBtn","clickConfig","defaultOffset","StPopOverModule","StProgressBarComponent","StProgressBarModule","StRadioMenuComponent","checkedOption","[class]","RadioChange","MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","StRadioGroupComponent","_uniqueIdCounter","_radios","_selected","_name","updatedSelectRadioFromValue","checkSelectRadio","updateRadioName","emitChangeEvent","source","touch","radio","isAlreadySelected","role","ContentChildren","StRadioComponent","idUnique","radioGroup","_radioDispatcher","newCheckedState","onInputBlur","onInputClick","toggleRadio","groupValueChanged","[class.sth-radio-checked]","[attr.id]","Optional","StRadioModule","StRadioMenuModule","StSidebarVisualMode","normal","complex","StSidebarComponent","searchMode","searchData","StSidebarItemListComponent","deep","displayAsComplexModeValue","_active","_isActive","_updateStatus","displayAsComplexMode","getItemClasses","activeChild","hasActiveChild","_closeRestOfItems","found","_hasActiveChildInChildren","itemId","StSidebarModule","StTableCellComponent","StTableRowComponent","standUpSelected","rootClass","showHoverMenu","hoverMenu","removeChild","onShowHoverMenu","onHideHoverMenu","StTableFilterIconClasses","StTableIconClasses","sort","asc","StPopoverFilterComponent","_elementRef","offsetX","offsetLeft","offsetWidth","getConfigField","_get","getFilteredIcon","filtered","indexFilter","filters","filterConfig","onFilter","ORDER_TYPE","ASC","DESC","orderBy","StTableComponent","header","sortable","filterable","selectableAll","changeOrder","selectAll","clickFilter","selectFilters","tableClasses","orderTypes","visibleFilter","_fixedHeader","_stickyHoverMenu","_hasHoverMenu","_customClasses","_selectedAll","statusFilter","fields","fill","getHeaderItemClass","isSortedByFieldAndDirection","isSortable","isSortedByField","currentOrder","isFilterable","templateContentFilter","onClickPopover","onHidePopover","onChangeOrder","_currentOrder","changeOrderDirection","Order","onSelectAll","onSelectedFilters","selectedFilters","conf","newDirection","orderType","StTableModule","StTagInputComponent","allowFreeText","forbiddenValues","regularExpression","innerInputContent","isPristine","_focus","_newElementInput","isForbidden","isDuplicated","matchedPattern","_regularExp","test","newElementInput","RegExp","checkAutocompleteMenuChange","data_1","data_1_1","parsedValue","_getParsedTag","onInputText","onInputFocusIn","_forceResetAutoCompleteList","onInputFocusOut","addCurrentTag","onInputKeyDown","isValidInput","addTag","previousElementSibling","onTagKeyDown","deleteTag","nextElementSibling","onTagFocusIn","onTagFocusOut","onTagClick","dispatchEvent","Event","tag","parseFloat","parseInt","event_1","bubbles","StTagInputModule","StToggleButtonsComponent","tabs","parsedTabs","_a","props","getOwnPropertySymbols","propertyIsEnumerable","__rest","trimLabel","selectedTab","StToggleButtonsModule","ListItemComponent","selectItemNonEditable","selectExtraLabel","hoverRow","menuVisualMode","getModeStyle","emitOnClickNonEditable","mouseHoverRow","mouseLeftRow","onCloseActionMenu","showActionList","CustomEvent","cancelable","detail","onEllipsisClick","ListSelectionComponent","important","hasAllList","orderOptions","scrollBottom","ListScrollComponent","elemRef","timer","atBottom","delay","ms","firstEl","showLoading","onScroll","_.throttle","StTwoListSelection","copyAllElement","copySelectedElements","allSearch","hasCheckboxAllList","hasCheckboxSelectedList","numItemsSelectedAll","numItemsSelectedSelected","searchBy","searchOverAll","searchOverSelected","selectedSearch","onSelectAllElement","itemAll","applySelectAll","canSelect","_.cloneDeep","getNumItemsSelected","onSelectSelectedElement","onSearchOverAll","onSearchOverSelected","onMoveToSelected","ids","getIdsToMove","moveIdsFromAllToSelected","originalAll","originalSelected","emitter","onMoveToAll","removeIdsFromSelected","onMoveAllToSelected","elem","onMoveAllToAll","init","all","changeEmitter","sorted","sortLists","generateWorkLists","checkChanges","allList","selectedList","twoList","elemSearched","allSelected","filteredBySearch","changeSelectedItemList","accumulator","copyLists","orderListBy","prevState","without","_.differenceBy","searchAndSelect","actualIndex","_.includes","_.xorBy","_.clone","by","_.sortBy","StTwoListSelectionComponent","hasAllListAll","hasAllListSelected","moveAllToSelectedButton","moveAllToAllButton","moveToSelectedButton","moveToAllButton","orderAllOptions","orderSelectedOptions","sortBy","changeOrderAll","changeOrderSelected","scrollBottomAll","selectedElementsChange","selectExtraLabelAll","selectExtraLabelSelected","allElements","selectedElements","StTwoListSelectionViewComponent","moveAllToAll","moveAllToSelected","moveToAll","moveToSelected","selectAllElement","selectSelectedElement","refreshButtons","allElementsListTitle","allElementsListSubtitle","allElementsSearchPlaceholder","fetchingDataText","menuOptionList","orderPlaceholder","selectedElementsListTitle","selectedElementsListSubtitle","selectedElementsSearchPlaceholder","checkMoveToSelected","existDisabledElements","checkMoveToSelectedValue","checkMoveToAll","checkMoveToAllValue","StTwoListSelectionModule","StVerticalTabsComponent","activeOptionIndex","arrowMovement","arrowMargin","changeActive","activeFirstOption","optionName","StVerticalTabsModule","StWidgetComponent","loading","overwriteLoadingData","displaySettingsButton","_draggable","updateDragging","StWidgetModule","StatusNotification","_showMore","_completeText","showMore","completeText","StForegroundNotificationsComponent","notifications","clickLinkTemplate","visibleChange","currentNotification","showLinkMore","_visible","listStatusNotifications","autoCloseTime","fillStatusNotifications","htmlElement","addStyleLinks","checkOneLine","values","nameEventEmitter","getIndexCurrentNotification","nameEvents","onClickLinkHtmlTemplate","setStyle","currentIndex","offsetHeight","addClass","removeStyleNotification","checkStatus","statusValue","getStatus","statusIconValue","getStatusIcon","statusNotificationsValue","getStatusNotifications","decrementPage","incrementPage","removeClass","showTextComplete","[class.visible]","StForegroundNotificationsModule","StZeroPageComponent","StZeroPageModule","StColorPickerComponent","color","onSelectColor","isSelected","StColorPickerModule","StDynamicTableUtils","getHeaderFieldsFromJsonSchema","jsonSchema","uiDefinitions","_propertyKey","_property","uiDefinition","getHeaderFiltersFromJsonSchema","reference","$ref","fk","group_field","templateRef","sortedByDefault","_getTypes","propertyDefinition","String","StDynamicTableComponent","selectable","fixedHeader","stickyHoverMenu","hoverButton","updateFields","selectRow","clickCell","clickFk","_fkSeparator","_templateContentFilter","_templateRef","_jsonSchema","_manageFieldsUpdate","_uiDefinitions","onFilterClick","selectedFilter","order","row","onLeaveRow","onClickFk","getCellContent","groupLabel","_groupKey","getCellClasses","clickable","getCellStyles","styles","onSelectRow","checkboxEvent","onClickCellLabel","fieldId","StDynamicTableModule","StVerticalIconTabsComponent","StVerticalIconTabsModule","DECLARATIONS","EgeoModule","forRoot","StRegEx","EMAIL","StBubbleOnEllipsisComponent","lines","_openToLeft","onShowBubble","bubbleTrigger","onHideBubble","[class.multi-line]","[style.-webkit-line-clamp]","StBubbleOnEllipsisModule","StFilterSelectorComponent","openFilter","menuAlignedToRight","changeFilterVisibility","closeFilter","sectionMenuVisualMode","menuPlacement","filterList","onClickFilter","onChangeFilterVisibility","onCloseFilter","onItemMouseEnter","onItemMouseLeave","StFilterSelectorModule","StMenuPosition","StMenuComponent","searchLabel","animate","selectedOption","searchChange","showMenu","searchFormControl","_formControlSubscription","activateMenu","hideMenu","selectedMenuOption","StMenuOptionsComponent","level","initialized","_scrollSubject","_SCROLL_SPEED","_SCROLL_SPEED_MILLIS","dynamicHeight","_checkScrollButtons","_scrollSubscription","cancelAnimationFrame","_scrollAnimationHandler","openedItem","menuPosition","maxHeightChild","innerHeight","top","childListElement","trackByFn","scrollTo","reverse","startScrollAnimationTime","Date","getTime","startScrollAnimationPosition","requestAnimationFrame","_scrollAnimation","stopScroll","removeSearch","onSelectOption","current","scrollList","scrollTopEnabled","scrollBottomEnabled","StMenuModule","StTagItem","StTagComponent","onRemove","onChangeBubbleVisibility","showBubble","StTagModule","DemoGeneratorProviders","StDemoGenerator","loadDemo","bindDemoInputsAndOutputs","routes","routing","forChild","StDemoGeneratorModule","success","critical"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Observable ,  Observer ,  Subject } from 'rxjs';\n\n// tslint:disable:max-classes-per-file\nexport enum STALERT_SEVERITY { SUCCESS, WARNING, ERROR, INFO }\n\nexport class StAlertLink {\n   public title: string;\n   public link: string;\n}\n\nexport class StAlert {\n   private _changeVisibilityInterval: number;\n   private _lifeTimeout: number;\n   private _readed: boolean = false;\n   private _opacity: number = 0;\n   private _opacityState: Subject<number> = new Subject<number>();\n   private _removeEvent: Subject<StAlert> = new Subject<StAlert>();\n\n   constructor(\n      public id: number,\n      public title: string,\n      public message: string,\n      public severity: STALERT_SEVERITY,\n      public timeout: number,\n      public extendedTimeout: number,\n      public link: StAlertLink\n   ) { }\n\n   get opacity(): Observable<number> {\n      return this._opacityState.asObservable();\n   }\n\n   get removeAlertEvent(): Observable<StAlert> {\n      return this._removeEvent.asObservable();\n   }\n\n   notify(): void {\n      this.setVisible(true);\n   }\n\n   pauseNotify(): void {\n      this._opacity = 1;\n      this._readed = true;\n      this.clearAnimation();\n      this.stopLife();\n      this._opacityState.next(this._opacity);\n   }\n\n   continueNotify(): void {\n      this.startLife();\n   }\n\n   cancel(): void {\n      this.setVisible(false);\n   }\n\n\n   private setVisible(increase: boolean): void {\n      this.clearAnimation();\n      this._changeVisibilityInterval = window.setInterval(() => this.modifyVisibility(increase), 50);\n   }\n\n   private modifyVisibility(increase: boolean): void {\n      this._opacity += increase ? 0.1 : -0.1;\n      if (this._opacity >= 1 || this._opacity <= 0) {\n         this.clearAnimation();\n         if (increase) {\n            this.startLife();\n         } else {\n            this.notifyForRemove();\n         }\n      }\n      this._opacityState.next(this._opacity);\n   }\n\n   private notifyForRemove(): void {\n      this._opacityState.complete();\n      this._removeEvent.next(this);\n      this._removeEvent.complete();\n   }\n\n   private clearAnimation(): void {\n      window.clearInterval(this._changeVisibilityInterval);\n   }\n\n   private stopLife(): void {\n      window.clearTimeout(this._lifeTimeout);\n   }\n\n   private startLife(): void {\n      let timeout: number = this._readed ? this.extendedTimeout : this.timeout;\n      this._lifeTimeout = window.setTimeout(() => this.setVisible(false), timeout);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { StAlert, STALERT_SEVERITY, StAlertLink } from './st-alerts.model';\n\n@Injectable()\nexport class StAlertsService {\n   private _alertsList: StAlert[] = [];\n   private _nextId: number = 0;\n\n   private _alertsStream: BehaviorSubject<StAlert[]> = new BehaviorSubject<StAlert[]>([]);\n\n   get alertList(): Observable<StAlert[]> {\n      return this._alertsStream.asObservable();\n   }\n\n   public notifyAlert(title: string, message: string, severity: STALERT_SEVERITY, link?: StAlertLink, timeout?: number, extendedTimeout?: number): void {\n      timeout = timeout !== undefined ? timeout : 5000;\n      extendedTimeout = extendedTimeout !== undefined ? extendedTimeout : 4000;\n      let alert: StAlert = new StAlert(this._nextId, title, message, severity, timeout, extendedTimeout, link);\n      alert.removeAlertEvent.subscribe(alertToRemove => this.onNotifyRemove(alertToRemove));\n      this.insertAlert(alert);\n      this._nextId++;\n   }\n\n   private insertAlert(alert: StAlert): void {\n      this._alertsList.push(alert);\n      this._alertsStream.next(this._alertsList);\n   }\n\n   private onNotifyRemove(alert: StAlert): void {\n      let pos: number = this._alertsList.findIndex(internalAlert => internalAlert.id === alert.id);\n      this._alertsList.splice(pos, 1);\n      this._alertsStream.next(this._alertsList);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ComponentRef } from '@angular/core';\n\nimport { StModalComponent } from './st-modal.component';\n\nexport enum StModalResponse { YES, NO, CLOSE }\nexport enum StModalBasicType { DELETE, CONFIRM, INFO, WARNING }\n\nexport class StModalButton {\n   response?: Function;\n   responseValue?: StModalResponse;\n   leftIcon?: string;\n   rightIcon?: string;\n   classes?: string;\n   closeOnClick?: boolean;\n   label: string;\n}\n\nexport class StModalConfig {\n   fullscreen?: boolean;\n   modalTitle?: string;\n   messageTitle?: string;\n   message?: string;\n   html?: string;\n   inputs?: Object;\n   outputs?: Object;\n   buttons?: StModalButton[];\n   maxWidth?: number;\n   minWidth?: number;\n   empty?: boolean;\n   showCloseBtn?: boolean;\n   iconStatus?: string;\n}\n\nexport class StModalButtonResponse {\n   response: StModalResponse;\n   close: boolean;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable } from '@angular/core';\n\nfunction getWindow(): any {\n   return window;\n}\n\n@Injectable()\nexport class StWindowRefService {\n   get nativeWindow(): Window {\n      return getWindow();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   ComponentFactoryResolver,\n   ComponentRef,\n   EventEmitter,\n   Input,\n   OnDestroy,\n   AfterViewInit,\n   Output,\n   ViewChild,\n   ViewContainerRef\n} from '@angular/core';\n\nimport { StModalButton, StModalButtonResponse, StModalConfig, StModalResponse } from './st-modal.model';\nimport { StWindowRefService } from '../utils/window-service';\n\n@Component({\n   selector: 'st-modal',\n   templateUrl: './st-modal.component.html',\n   styleUrls: ['./st-modal.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StModalComponent implements OnDestroy, AfterViewInit {\n   @Input() modalConfig: StModalConfig;\n   @Input() component: any;\n   @Output() click: EventEmitter<StModalButtonResponse> = new EventEmitter<StModalButtonResponse>();\n   @ViewChild('stModalBody', { read: ViewContainerRef, static: false }) targetContent: ViewContainerRef;\n   @ViewChild('stModalBodyEmpty', { read: ViewContainerRef, static: false }) targetEmpty: ViewContainerRef;\n\n   readonly defaultMaxWidth: number = 600;\n   readonly defaultMinWidth: number = 400;\n\n   target: ViewContainerRef;\n\n   private componentRef: ComponentRef<any>;\n\n   constructor(\n      private cfr: ComponentFactoryResolver,\n      private windowRef: StWindowRefService\n   ) { }\n\n   get hasIcon(): string {\n      return this.modalConfig.iconStatus;\n   }\n\n   get isFullscreen(): boolean {\n      return this.modalConfig.fullscreen;\n   }\n\n   get title(): string {\n      return this.modalConfig.modalTitle;\n   }\n\n   get buttons(): StModalButton[] {\n      return this.modalConfig.buttons || [];\n   }\n\n   get isMessageModal(): boolean {\n      return this.modalConfig.message && this.modalConfig.message.length > 0;\n   }\n\n   get isComplexMessageModal(): boolean {\n      return this.modalConfig.html && this.modalConfig.html.length > 0;\n   }\n\n   get html(): string {\n      return this.modalConfig.html;\n   }\n\n   get message(): string {\n      return this.modalConfig.message;\n   }\n\n   get messageTitle(): string {\n      return this.modalConfig.messageTitle;\n   }\n\n   get modalStyles(): Object {\n      const maxWidth = this.modalConfig.maxWidth || this.defaultMaxWidth;\n      const minWidth = this.modalConfig.minWidth || this.defaultMinWidth;\n      const width = this.getModalActualWidth(maxWidth, minWidth);\n      return { 'max-width': `${maxWidth}px`, 'min-width': `${minWidth}px`, 'width': `${width}px` };\n   }\n\n   get emptyModal(): boolean {\n      return this.modalConfig && this.modalConfig.empty;\n   }\n\n   get showCloseBtn(): boolean {\n      return this.modalConfig.showCloseBtn;\n   }\n\n   onClose(): void {\n      this.click.emit({\n         response: StModalResponse.CLOSE,\n         close: true\n      });\n   }\n\n   /** DYNAMIC MODAL BODY COMPONENT LOAD */\n   ngAfterViewInit(): void {\n      this.target = this.emptyModal ? this.targetEmpty : this.targetContent;\n      if (this.component && !(this.modalConfig.html || this.modalConfig.message)) {\n         this.loadBody();\n      }\n      this.windowRef.nativeWindow.document.body.classList.add('st-modal-overlay');\n   }\n\n   ngOnDestroy(): void {\n      if (this.componentRef) {\n         this.componentRef.destroy();\n      }\n      this.windowRef.nativeWindow.document.body.classList.remove('st-modal-overlay');\n   }\n\n   private getModalActualWidth(maxWidth: number, minWidth?: number): number {\n      const screenWidth: number = this.windowRef.nativeWindow.screen.width;\n      return screenWidth > maxWidth ? maxWidth : (screenWidth < minWidth ? minWidth : screenWidth);\n   }\n\n   private loadBody(): void {\n      if (!this.componentRef) {\n         this.target.clear();\n         const compFactory = this.cfr.resolveComponentFactory(this.component);\n         this.componentRef = this.target.createComponent(compFactory);\n         this.bindModalInputs();\n      }\n   }\n\n   private bindModalInputs(): void {\n      Object.keys(this.modalConfig.inputs).forEach((key: string) => {\n         this.componentRef.instance[key] = (this.modalConfig.inputs as any)[key];\n      });\n      Object.keys(this.modalConfig.outputs).forEach((key: string) => {\n         this.componentRef.instance[key].subscribe((this.modalConfig.outputs as any)[key]);\n      });\n      this.componentRef.changeDetectorRef.detectChanges();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ComponentFactory,\n   ComponentFactoryResolver,\n   ComponentRef,\n   Injectable,\n   Type,\n   ViewContainerRef\n} from '@angular/core';\nimport { Observable ,  Subject } from 'rxjs';\n\n/* local dependencies */\nimport { StModalComponent } from './st-modal.component';\nimport {\n   StModalButton,\n   StModalConfig,\n   StModalResponse,\n   StModalButtonResponse,\n   StModalBasicType\n} from './st-modal.model';\n\n@Injectable()\nexport class StModalService {\n\n   private _containerRef: ViewContainerRef = undefined;\n   private dynamicModal: ComponentRef<StModalComponent> = undefined;\n   private notifyButtonInteraction: Subject<StModalResponse>;\n\n   constructor(private _cfr: ComponentFactoryResolver) { }\n\n   /* External API */\n   set container(container: ViewContainerRef) {\n      this._containerRef = container;\n   }\n\n   // - Public methods\n   show(config: StModalConfig, component?: Type<any>): Observable<StModalResponse> {\n      let errors: string[] = this.canCreateModal(config, component);\n      if (errors && errors.length > 0) {\n         throw new Error(errors.join(' '));\n      }\n      this.notifyButtonInteraction = new Subject<StModalResponse>();\n      this.createModal(this.createConfig(config), component);\n      return this.notifyButtonInteraction.asObservable();\n   }\n\n   showBasicModal(\n      type: StModalBasicType,\n      modalTitle: string,\n      messageTitle: string,\n      message: string,\n      okButton: string,\n      cancelButton: string = '',\n      maxWidth: number = 600,\n      minWidth: number = 400,\n      icon: string = ''\n   ): Observable<StModalResponse> {\n      let iconStatus: string;\n\n      const buttons: StModalButton[] = [{\n         label: okButton,\n         classes: (type === StModalBasicType.DELETE) ? 'button-critical' : 'button-primary',\n         responseValue: StModalResponse.YES,\n         closeOnClick: true\n      }];\n\n      if (type !== StModalBasicType.INFO) {\n         buttons.unshift({\n            label: cancelButton,\n            classes: (type === StModalBasicType.DELETE) ? 'button-borderless' : 'button-secondary',\n            responseValue: StModalResponse.NO,\n            closeOnClick: true\n         });\n      }\n\n      switch (type) {\n         case StModalBasicType.DELETE:\n            iconStatus = 'icon-circle-cross';\n            break;\n         case StModalBasicType.WARNING:\n            iconStatus = 'icon-alert';\n            break;\n         default:\n            iconStatus = icon;\n            break;\n      }\n\n      return this.show({\n         fullscreen: false,\n         message,\n         messageTitle,\n         modalTitle,\n         buttons,\n         maxWidth,\n         minWidth,\n         iconStatus\n      });\n   }\n\n   close(): void {\n      this.destroy();\n   }\n\n   /* INTERNAL METHODS FOR WORK WITH MODALS */\n   private createModal(modalConfig: StModalConfig, component?: Type<any>): void {\n      let stModalFactory: ComponentFactory<StModalComponent> = this._cfr.resolveComponentFactory(StModalComponent);\n      if (stModalFactory) {\n         this._containerRef.clear();\n         this.dynamicModal = this._containerRef.createComponent<StModalComponent>(stModalFactory);\n         this.bindVars(modalConfig, component);\n      }\n   }\n\n   private destroy(): void {\n      if (this.dynamicModal) {\n         this.dynamicModal.destroy();\n         this.dynamicModal = undefined;\n         this.notifyButtonInteraction.next(StModalResponse.CLOSE);\n         this.notifyButtonInteraction.complete();\n      }\n   }\n\n   private bindVars(modalConfig: StModalConfig, component: Type<any>): void {\n      this.dynamicModal.instance.component = component;\n\n      this.dynamicModal.instance.click.subscribe(this.notify.bind(this));\n      this.dynamicModal.instance.modalConfig = modalConfig;\n\n      this.dynamicModal.changeDetectorRef.detectChanges();\n   }\n\n   private notify(buttonResponse: StModalButtonResponse): void {\n      this.notifyButtonInteraction.next(buttonResponse.response);\n      if (buttonResponse.close) {\n         this.close();\n      }\n   }\n\n   private canCreateModal(config: StModalConfig, component?: Type<any>): string[] {\n      let errors: string[] = [];\n      if (!this._containerRef) {\n         errors.push(`[ERROR]: StModalService => Cant find container, are you sure you declarate in MAIN APP component in html and typescript?`);\n      }\n      if (this.dynamicModal !== undefined) {\n         errors.push(`[ERROR]: StModalService => Can't create modal beacause already exists one. Are you sure that you call close method?)`);\n      }\n      if (!component && !config.message && !config.html) {\n         errors.push(`[ERROR]: StModalService => Can't find message, html or component to show in modal`);\n      }\n      return errors;\n   }\n\n   private createConfig(config: StModalConfig): StModalConfig {\n      const defaultConfig: StModalConfig = {\n         fullscreen: false,\n         inputs: {},\n         outputs: {},\n         modalTitle: 'Default title',\n         messageTitle: 'Default subtitle',\n         buttons: [],\n         message: undefined,\n         html: undefined,\n         maxWidth: undefined,\n         minWidth: undefined,\n         empty: false\n      };\n      const checkedConfig: StModalConfig = Object.assign({}, defaultConfig, config);\n      checkedConfig.buttons = this.checkButtons(checkedConfig.buttons);\n      return checkedConfig;\n   }\n\n   private checkButtons(buttons: StModalButton[]): StModalButton[] {\n      return buttons.map(button => Object.assign({}, { label: 'Button', closeOnClick: false }, button));\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class StPaginationService {\n\n   private initItem: number;\n   private lastItem: number;\n\n   constructor() {\n   }\n\n   newPage(items: any[], currentPage: number, perPage: number): any[] {\n      if (currentPage === 1) {\n         this.initItem = 0;\n      } else {\n         this.initItem = perPage * (currentPage - 1);\n      }\n\n      if (perPage >= items.length) {\n         return Object.assign([], items);\n      }\n\n      if (this.initItem >= items.length) {\n         this.initItem = items.length - (perPage + 1);\n         return Object.assign([], _.takeRight(items, perPage));\n      }\n\n      this.lastItem = (this.initItem + perPage);\n\n      return Object.assign([], items.slice(this.initItem, this.lastItem));\n   }\n}\n","\n\n/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable } from '@angular/core';\nimport {\n   has as _has,\n   set as _set,\n   get as _get,\n   cloneDeep as _cloneDeep,\n   forEach as _forEach,\n   keys as _keys,\n   values as _values,\n   omit as _omit\n} from 'lodash';\nimport { Observable, Observer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\nimport { EgeoResolverKeys, TranslateServiceType } from './egeo-resolve-model';\n\n@Injectable()\nexport class EgeoResolveService {\n\n   getKeys(object: any, key: string, searchedValue?: any): EgeoResolverKeys[] {\n      return this.searchInDeep(object, key, searchedValue);\n   }\n\n   setKeys(object: any, resolved: EgeoResolverKeys[]): void {\n      resolved.forEach((element) => _set(object, element.path, element.resolved));\n   }\n\n   translate(object: any, translateService: TranslateServiceType): Observable<any> {\n      let keys: EgeoResolverKeys[] = this.getKeys(object, 'translate'); // Get keys\n      // If not found translateable elements, return the same because if not, translate service broke on try to translate an empty array.\n      if (keys && keys.length > 0) {\n         let toTranslate: string[] = this.extractTranslationKeys(keys); // Extract keys for translate service\n         return translateService.get(toTranslate).pipe( // return object translation\n            map((translation) => this.remapObjectWithTranslations(translation, keys, object)));\n      } else {\n         return Observable.create((observer: Observer<any>) => {\n            observer.next(object);\n            observer.complete();\n         });\n      }\n   }\n\n   translateArrayOfKeys(keys: string[], translateService: TranslateServiceType): Observable<string[]> {\n      return translateService.get(keys).pipe(\n         map((translation) => this.remapArrayWithTranslations(translation, keys)));\n   }\n\n   private remapArrayWithTranslations(translations: { [key: string]: string }, originalArray: string[]): string[] {\n      return originalArray.map((key) => translations[key] ? translations[key] : key);\n   }\n\n   private remapObjectWithTranslations(translations: { [key: string]: string }, resolverKeys: EgeoResolverKeys[], object: any): any {\n      let newObj = _cloneDeep(object);\n      if (translations || _keys(translations).length > 0) {\n         _forEach(resolverKeys, (resolvKey) => {\n            _set(newObj, resolvKey.path, this.getTranslationFromTranslatedKey(translations, resolvKey));\n         });\n      }\n      return newObj;\n   }\n\n   private getTranslationFromTranslatedKey(translations: { [key: string]: string }, resolverKey: EgeoResolverKeys): string {\n      let translationElementKey = resolverKey && resolverKey.toResolve && resolverKey.toResolve.key ? resolverKey.toResolve.key : '';\n      return translations[translationElementKey] ? translations[translationElementKey] : translationElementKey;\n   }\n\n   private extractTranslationKeys(list: EgeoResolverKeys[]): string[] {\n      return list.map((element) => <string>_values(_omit(element.toResolve, 'translate'))[0]);\n   }\n\n   private searchInDeep(object: any, key: string, searchedValue: any, path: string = ''): EgeoResolverKeys[] {\n      let result: EgeoResolverKeys[] = [];\n      if (_has(object, key)) { // If we found key, return object.\n         if (searchedValue !== undefined) {\n            if (object[key] === searchedValue) {\n               result.push({ path, toResolve: object });\n            }\n         } else {\n            result.push({ path, toResolve: object });\n         }\n      }\n      let i = 0;\n      _forEach(object, (value, objKey) => { // Search in deep by all elements\n         if (typeof value === 'object') {\n            result = [...result, ...this.searchInDeep(value, key, searchedValue, this.getPath(path, object, i, objKey))];\n         }\n         i++;\n      });\n      return result;\n   }\n\n   // Build path for future replace\n   private getPath(actualPath: string, obj: any, pos: number, key: string): string {\n      if (this.isArray(obj)) {\n         actualPath = `${actualPath}[${pos}]`;\n      } else {\n         actualPath = actualPath === '' ? key : `${actualPath}.${key}`;\n      }\n      return actualPath;\n   }\n\n   private isArray(value: any): boolean {\n      return Object.prototype.toString.call(value) === '[object Array]';\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\n\nexport type SelectOneDispaptcherListener = (id: string, name: string) => void;\n\n@Injectable()\nexport class SelectOneDispatcher {\n   private listeners: SelectOneDispaptcherListener[] = [];\n\n   notify(id: string, name: string): void {\n      for (let listener of this.listeners) {\n         listener(id, name);\n      }\n   }\n\n   listen(listener: SelectOneDispaptcherListener): void {\n      this.listeners.push(listener);\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'stFilterList'\n})\nexport class StFilterList implements PipeTransform {\n   transform(list: any[], field: string, search: string): any[] {\n      this.checkParams(field);\n      if (!search) {\n         return list;\n      }\n      if (list && list.length > 0 && field) {\n         return list.filter((element) => this.contains(element, field, search));\n      } else {\n         return [];\n      }\n   }\n\n   private contains(element: any, field: string, search: string): boolean {\n      if (this.isDefined(element) && this.isString(field) && this.isString(search) && this.isString(element[field])) {\n         return element[field].toUpperCase().search(search.toUpperCase()) > -1;\n      }\n      return false;\n   }\n\n   private isDefined(value: any): boolean {\n      return value !== undefined && value !== null;\n   }\n\n   private isString(value: any): boolean {\n      return this.isDefined(value) && typeof value === 'string';\n   }\n\n   private checkParams(field: string): void {\n      if (!this.isString(field)) {\n         throw new Error('PIPE: stFilterList: \"field\" is a required and string parameter');\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ 'name': 'stObjectToArray' })\nexport class StObjectToArrayPipe implements PipeTransform {\n   transform (obj: any): {key: string, value: any}[] {\n      return obj ? Object.keys(obj).map(key => ({key, value: obj[key]})) : [];\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StFilterList } from './search-filter/search-filter.pipe';\nimport { StObjectToArrayPipe } from './st-object-to-array/st-object-to-array.pipe';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StFilterList, StObjectToArrayPipe],\n   exports: [StFilterList, StObjectToArrayPipe]\n})\nexport class PipesModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\nimport { StAlert } from './st-alerts.model';\nimport { StAlertsService } from './st-alerts.service';\n\n@Component({\n   selector: 'st-alerts',\n   templateUrl: './st-alerts.component.html',\n   styleUrls: ['./st-alerts.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * @description {Component} [Alerts]\n *\n * Alerts are made to let the user know errors or information about he is trying to do.\n *\n * @model\n *\n *  [Alert] {./st-alerts.model.ts#StAlert}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-alerts [showInConsole]=\"true\"></st-alerts>\n *\n * ```\n */\nexport class StAlertsComponent {\n   /** @Input {boolean} [showInConsole=false] Display logs in console */\n   @Input() showInConsole: boolean = false;\n   /** @Input {string} [qaTag=] Component qa tag */\n   @Input() qaTag: string = 'st-alert-manager';\n\n   constructor(\n      public alertService: StAlertsService\n   ) { }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   Component,\n   Input,\n   OnInit,\n   ChangeDetectorRef,\n   ChangeDetectionStrategy, Output, EventEmitter\n} from '@angular/core';\n\nimport { STALERT_SEVERITY, StAlert, StAlertLink } from '../st-alerts.model';\n\n@Component({\n   selector: 'st-alert-box',\n   templateUrl: './st-alert-box.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * @description {Component} [Alert Box]\n *\n * Alert box is made to let the user know errors or information about he is trying to do.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-alert-box [alert]=\"alert\" [showInConsole]=\"showInConsole\"></st-alert-box>\n *\n * ```\n */\nexport class StAlertBoxComponent implements OnInit {\n   /** @Input {StAlert} [alert=] Data of the alert */\n   @Input() alert: StAlert;\n   /** @Input {boolean} [showInConsole=false] Display logs in console */\n   @Input() showInConsole: boolean = false;\n   /** @Output {StAlertLink} [clickLink=] Event emitted when link is clicked */\n   @Output() clickLink: EventEmitter<StAlertLink> = new EventEmitter();\n   /** @Output {boolean} [close=] Event emitted when alert is closed */\n   @Output() close: EventEmitter<boolean> = new EventEmitter();\n\n   public iconValue: string;\n   public opacity: number = 0;\n   public severityColorValue: string;\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      this.alert.opacity.subscribe(opacity => this.changeOpacity(opacity));\n      this.alert.notify();\n      if (this.showInConsole) {\n         this.notifyConsole();\n      }\n      this.severityColorValue = this.getSeverityColor();\n      this.iconValue = this.getIcon();\n   }\n\n   closeAlert(): void {\n      this.alert.cancel();\n      this.close.emit(true);\n   }\n\n   getIcon(): string {\n      switch (this.alert.severity) {\n         case STALERT_SEVERITY.ERROR: return 'icon-circle-alert';\n         case STALERT_SEVERITY.WARNING: return 'icon-alert';\n         case STALERT_SEVERITY.SUCCESS: return 'icon-circle-check';\n         case STALERT_SEVERITY.INFO: return 'icon-info';\n         default: return '';\n      }\n   }\n\n   getSeverityColor(): string {\n      switch (this.alert.severity) {\n         case STALERT_SEVERITY.ERROR: return 'sth-alert-box-error';\n         case STALERT_SEVERITY.WARNING: return 'sth-alert-box-warning';\n         case STALERT_SEVERITY.SUCCESS: return 'sth-alert-box-success';\n         case STALERT_SEVERITY.INFO: return 'sth-alert-box-info';\n         default: return '';\n      }\n   }\n\n   goTo(): void {\n      this.clickLink.emit(this.alert.link);\n   }\n\n   changeOpacity(opacity: number): void {\n      this.opacity = opacity;\n      this._cd.markForCheck();\n   }\n\n   private notifyConsole(): void {\n      switch (this.alert.severity) {\n         case STALERT_SEVERITY.ERROR: console.error(`ERROR-${this.alert.title}: ${this.alert.message}`); break;\n         case STALERT_SEVERITY.WARNING: console.warn(`WARNING-${this.alert.title}: ${this.alert.message}`); break;\n         case STALERT_SEVERITY.SUCCESS: console.log(`SUCCESS-${this.alert.title}: ${this.alert.message}`); break;\n         default: console.error(`ERROR: severity not found for ${this.alert.title}: ${this.alert.message}`); break;\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StAlertBoxComponent } from './st-alert-box.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StAlertBoxComponent],\n   exports: [StAlertBoxComponent]\n})\nexport class StAlertBoxModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StAlertsComponent } from './st-alerts.component';\nimport { StAlertBoxModule } from './alert-box/st-alert-box.module';\n\n@NgModule({\n   imports: [CommonModule, StAlertBoxModule],\n   declarations: [StAlertsComponent],\n   exports: [StAlertsComponent]\n})\nexport class StAlertsModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nexport enum StPopPlacement { TOP, TOP_START, TOP_END, BOTTOM, BOTTOM_START, BOTTOM_END }\nexport class StPopOffset {\n   x?: number = 0;\n   y?: number = 0;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport { StPopOffset, StPopPlacement } from '../st-pop/st-pop.model';\n\n/**\n * @description {Component} [Bubble]\n *\n * This component displays a text inside a floating box\n *\n * @example\n *\n * {html}\n *\n * ```\n *    <st-bubble [qaTag]=\"qaTag\" [text]=\"text\" [hidden]=\"hidden\">\n *    </st-bubble>\n * ```\n */\n@Component({\n   selector: 'st-bubble',\n   styleUrls: ['./st-bubble.component.scss'],\n   templateUrl: './st-bubble.component.html'\n})\nexport class StBubbleComponent {\n\n   /** @Input {string} [text=] Text of the bubble */\n   @Input() text: string;\n   /** @input {boolean} [hidden=false] Show or hide the bubble */\n   @Input() hidden: boolean = false;\n   /** @Input {StPopOffset} [offset={x: 0 , y: 17}] For position with offset in x o y axis */\n   @Input() offset: StPopOffset = { x: 0, y: 17 };\n   /** @Input {boolean} [showArrow=true] when true, arrow icon is displayed    */\n   @Input() showArrow?: boolean = true;\n   /** @Input {boolean} [animation=true] when true, bubble is displayed with an animation  */\n   @Input() animation?: boolean = true;\n   /** @Input {boolean} [openToLeft=true] when true, bubble is displayed with the arrow to the right  */\n   @Input() openToLeft?: boolean = true;\n   /** @Input {boolean} [small=false] when true, bubble is displayed with theme small  */\n   @Input() small?: boolean = false;\n   /** @Input {string} [minWidth=] min width for bubble  */\n   @Input() minWidth?: string;\n   /** @Input {string} [maxWidth=] max width for bubble  */\n   @Input() maxWidth?: string;\n\n   public placement: StPopPlacement = StPopPlacement.BOTTOM;\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { StPopOffset, StPopPlacement } from './st-pop.model';\n\n// Internal type\ntype StCoords = { x: number, y: number, z: number };\n\n/**\n * @description {Component} [Pop]\n *\n * The pop is a component for manage floating elements like popups or dropdown-menu. This element need two element inside,\n * a button element that launch popper and a content element that whose position will be relativo to button element.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-pop [hidden]=\"false\" placement=\"bottom\">\n *    <div pop-button>Button</div>\n *    <div pop-content>Content</div>\n * </st-pop>\n * ```\n */\n@Component({\n   selector: 'st-pop',\n   styleUrls: ['./st-pop.component.scss'],\n   templateUrl: './st-pop.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StPopComponent implements AfterViewInit {\n\n   /** @Input {StPopPlacement} [placement=StPopPlacement.BOTOM_START] Define position of content relative to button */\n   @Input() placement: StPopPlacement = StPopPlacement.BOTTOM_START;\n\n   /** @Input {StPopOffset} [offset={x: 0 , y: 0}] For position with offset in x o y axis */\n   @Input() offset: StPopOffset = { x: 0, y: 0 };\n   /** @Input {boolean} [openToLeft=false] For calculating all positions from the right corner */\n   @Input() openToLeft: boolean = false;\n\n   private _hidden: boolean = true;\n\n   /** @Input {boleean} [hidden=true]  TRUE: show pop content, FALSE: hide pop content  */\n   @Input()\n   set hidden(value: boolean) {\n      setTimeout(() => {\n         if (!value) {\n            this.calculatePosition();\n         }\n         this._hidden = value;\n         this._cd.markForCheck();\n      });\n   }\n\n   get hidden(): boolean {\n      return this._hidden;\n   }\n\n   constructor(private _el: ElementRef, private _cd: ChangeDetectorRef) {\n   }\n\n   ngAfterViewInit(): void {\n      this.calculatePosition();\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      this.calculatePosition();\n   }\n\n   @HostListener('window:load')\n   updateWidth(): void {\n      this.calculatePosition();\n   }\n\n   private getContentElement(): HTMLElement {\n      return this._el.nativeElement.querySelector('[pop-content]');\n   }\n\n   private calculatePosition(): void {\n      const buttonParentEl: HTMLElement = this._el.nativeElement.querySelector('[pop-button]');\n      const contentEl: HTMLElement = this.getContentElement();\n      const buttonEl: Element | undefined = buttonParentEl && buttonParentEl.firstElementChild ?\n         buttonParentEl.firstElementChild : undefined;\n      if (buttonEl) {\n         const coords: StCoords = this.getCoords(buttonEl);\n\n         contentEl.style.position = 'absolute';\n         contentEl.style.transform = `translate3d(${coords.x}px, ${coords.y}px, ${coords.z}px)`;\n      }\n   }\n\n   private getCoords(buttonEl: Element): StCoords {\n      const coords: StCoords = { x: 0, y: 0, z: 0 };\n      const direction: number = this.openToLeft ? this.getContentElement().getBoundingClientRect().width : 0;\n      const clientRect: ClientRect = buttonEl.getBoundingClientRect();\n\n      switch (this.placement) {\n         case StPopPlacement.BOTTOM:\n            coords.x = clientRect.width / 2;\n            break;\n         case StPopPlacement.BOTTOM_END:\n            coords.x = clientRect.width;\n            break;\n         case StPopPlacement.TOP:\n            coords.y = clientRect.height * -1;\n            coords.x = clientRect.width / 2;\n            break;\n         case StPopPlacement.TOP_START:\n            coords.y = clientRect.height * -1;\n            break;\n         case StPopPlacement.TOP_END:\n            coords.y = clientRect.height * -1;\n            coords.x = clientRect.width;\n            break;\n         default:\n            break;\n      }\n\n      coords.x = Math.ceil(coords.x + this.offset.x - direction);\n      coords.y = Math.ceil(coords.y + this.offset.y);\n\n      return coords;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StPopComponent } from './st-pop.component';\nimport { StWindowRefService } from '../utils/window-service';\n\n@NgModule({\n   imports: [CommonModule],\n   exports: [StPopComponent],\n   declarations: [StPopComponent],\n   providers: [StWindowRefService]\n})\nexport class StPopModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StBubbleComponent } from './st-bubble.component';\nimport { StPopModule } from '../st-pop/st-pop.module';\n\n@NgModule({\n   imports: [CommonModule, StPopModule],\n   declarations: [StBubbleComponent],\n   exports: [StBubbleComponent]\n})\nexport class StBubbleModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport class StBreadCrumbItem {\n   id: string;\n   label?: string;\n   icon?: string;\n}\n\nexport enum StBreadCrumbMode { DEFAULT =  <any> 'default', TITLE =  <any> 'title'}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   EventEmitter,\n   Input,\n   OnChanges,\n   OnInit,\n   Output,\n   SimpleChanges\n} from '@angular/core';\nimport { range as _range } from 'lodash';\nimport { StBreadCrumbItem, StBreadCrumbMode } from './st-breadcrumbs.interface';\n\n/**\n * @description {Component} [Breadcrumbs]\n *\n * The breadcrumb is s a type of secondary navigation\n * element that shows a trail for allowing users to keep track of their location.\n *\n * @model\n *\n *   [Id, optional label and icon of an option] {./st-breadcrumbs.interface.ts#StBreadCrumbItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-breadcrumbs\n *    [options]=\"options\"\n *    (select)=\"onSelect($event)\"\n *    qaTag=\"breadcrumbs\">\n * </st-breadcrumbs>\n * ```\n *\n */\n@Component({\n   selector: 'st-breadcrumbs',\n   templateUrl: './st-breadcrumbs.component.html',\n   styleUrls: ['./st-breadcrumbs.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StBreadCrumbsComponent implements OnInit, OnChanges {\n   /** @Input {StBreadCrumbItem[]} [options=\\[\\]] List of navigation parts for show in breadcrumb */\n   @Input() options: StBreadCrumbItem[] = [];\n   /** @Input {number} [elementsToShow=5] Max number of elements to show. */\n   @Input() elementsToShow: number = 5;\n   /** @Input {StBreadCrumbMode} [mode=StBreadCrumbMode.DEFAULT] Visualization mode */\n   @Input() mode: StBreadCrumbMode = StBreadCrumbMode.DEFAULT;\n   /** @Input {string} [qaTag=''] Id value for qa test */\n   @Input() qaTag: string;\n\n   /** @Output {number} [select] Notify any item selection */\n   @Output() select: EventEmitter<number> = new EventEmitter<number>();\n\n   public indexArray: number[] = [];\n   private _initPos: number = 0;\n\n   public ngOnInit(): void {\n      this.calculateStart(this.options, this.elementsToShow);\n   }\n\n   public ngOnChanges(changes: SimpleChanges): void {\n      if (changes.options || changes.elementsToShow) {\n         const currElsToShow: number = changes.elementsToShow ? changes.elementsToShow.currentValue : this.elementsToShow;\n         const currOptions: StBreadCrumbItem[] = changes.options ? changes.options.currentValue : this.options;\n         this.calculateStart(currOptions, currElsToShow);\n      }\n   }\n\n   public onSelect(index: number): void {\n      const toEmit: number = index > -1 ? index : this._initPos - 1;\n      if (toEmit < (this.options.length - 1)) {\n         this.select.emit(toEmit);\n      }\n   }\n\n   public getId(index: number): string {\n      return this.options[index].id;\n   }\n\n   public getLabel(index: number): string {\n      return index > -1 ? this.options[index].label : '...';\n   }\n\n   public getIcon(index: number): string {\n      return index > -1 ? this.options[index].icon : '';\n   }\n\n   public hasIcon(index: number): boolean {\n      return index > -1 && Boolean(this.options[index].icon);\n   }\n\n   private calculateStart(options: StBreadCrumbItem[], elementsToShow: number): void {\n      if (options.length > elementsToShow) {\n         this._initPos = options.length - elementsToShow + 1; // use +1 because first element is fixed\n         this.indexArray = _range(this._initPos, this._initPos + elementsToShow - 1);\n         this.indexArray.unshift(-1); // Add dots fixed element\n         this.indexArray.unshift(0); // Add first fixed element\n      } else {\n         this._initPos = 0;\n         this.indexArray = _range(0, options.length);\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input } from '@angular/core';\n\n@Component({\n   selector: 'st-breadcrumbs-item',\n   templateUrl: './st-breadcrumbs-item.component.html',\n   styleUrls: ['./st-breadcrumbs-item.component.scss']\n})\nexport class StBreadcrumbItemComponent {\n   @Input()\n   get qaTag(): String {\n      return this._qaTag.replace(/ /g, '-');\n   }\n\n   set qaTag(qaTag: String) {\n      this._qaTag = qaTag;\n   }\n\n   @Input() active: Boolean;\n\n   private _qaTag: String;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StBreadCrumbsComponent } from './st-breadcrumbs.component';\nimport { StBreadcrumbItemComponent } from './st-breadcrumbs-item/st-breadcrumbs-item.component';\n\n@NgModule({\n   imports: [CommonModule],\n   exports: [StBreadCrumbsComponent, StBreadcrumbItemComponent],\n   declarations: [StBreadCrumbsComponent, StBreadcrumbItemComponent]\n})\nexport class StBreadcrumbsModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CHECKBOX_CONTROL_ACCESSOR: any = {\n   provide: NG_VALUE_ACCESSOR,\n   // tslint:disable-next-line:no-use-before-declare\n   useExisting: forwardRef(() => StCheckboxComponent),\n   multi: true\n};\n\n/**\n * @description {Component} [Checkbox]\n *\n * The checkbox component represents a custom input of the checkbox type.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-checkbox name=\"option\" value=\"1\">\n *    Option 1\n * </st-checkbox>\n * ```\n *\n */\n@Component({\n   selector: 'st-checkbox',\n   templateUrl: './st-checkbox.component.html',\n   providers: [CHECKBOX_CONTROL_ACCESSOR],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StCheckboxComponent implements ControlValueAccessor {\n   /** @Input {boolean} [checked='']  */\n   @Input() get checked(): boolean {\n      return this._checked;\n   }\n\n   set checked(checked: boolean) {\n      if (checked !== this.checked) {\n         this._checked = checked;\n         this._changeDetectorRef.markForCheck();\n      }\n   }\n   /** @Input {boolean} [name=''] This parameter shows the final name of the input */\n   @Input() name: string;\n   /** @Input {boolean} [qaTag=''] Id value for qa test */\n   @Input() qaTag: string;\n   /** @Input {boolean} [disabled=''] It allows to disable the input component of the checkbox */\n   @Input() disabled: boolean;\n   /** @Input {boolean} [required=''] It converts the component into a mandatory field in a form */\n   @Input() required: boolean;\n   /** @Input {boolean} [readonly=''] This parameter disables the checkbox and it can not be modified by the user */\n   @Input() readonly: boolean;\n   /** @Input {any} [value=''] The value of the checkbox */\n   @Input() value: any;\n   /** @Input {string} [contextualHelp=''] Information displayed at a tooltip */\n   @Input() contextualHelp: string;\n   /** @Output {{ checked: boolean, value: any }} [change=''] This is emitted when user clicks on the checkbox */\n   @Output() change: EventEmitter<{ checked: boolean, value: any }> = new EventEmitter<{ checked: boolean, value: any }>();\n\n   private _checked: boolean = false;\n\n   constructor(\n      private _changeDetectorRef: ChangeDetectorRef\n   ) {\n\n   }\n\n   _controlValueAccessorChangeFn: (value: any) => void = (value) => { };\n\n   onTouched: () => any = () => { };\n\n   get labelQaTag(): string {\n      return (this.qaTag || this.name) + '-label';\n   }\n\n   handleClick(): void {\n      if (!this.readonly) {\n         if (!this.disabled) {\n            this._checked = !this._checked;\n            this._controlValueAccessorChangeFn(this._checked);\n            this.change.emit({ checked: this.checked, value: this.value });\n         }\n      }\n   }\n\n   handleChange($event: Event): void {\n      $event.stopPropagation();\n   }\n\n   writeValue(value: any): void {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n   }\n\n   registerOnChange(fn: (value: any) => void): void {\n      this._controlValueAccessorChangeFn = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(isDisabled: boolean): void {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, ElementRef, HostBinding, HostListener, Input, OnChanges, OnInit, ChangeDetectorRef, OnDestroy, Renderer2 } from '@angular/core';\n\n@Component({\n   selector: '[st-tooltip]',\n   styleUrls: ['./st-tooltip.component.scss'],\n   templateUrl: './st-tooltip.component.html'\n})\nexport class StTooltipComponent implements OnChanges, OnDestroy, OnInit {\n\n   @HostBinding('class.st-tooltip') classTooltip: boolean;\n   @HostBinding('class.st-tooltip-on') classTooltipOn: boolean;\n\n   @Input() showOnClick: boolean;\n   private _title: string;\n   @Input('attr.title')\n   set title(value: string) {\n      this._title = value;\n      if (value) {\n         this._el.nativeElement.setAttribute('title', value);\n      } else {\n         this._el.nativeElement.removeAttribute('title');\n      }\n   }\n   get title(): string {\n      return this._title;\n   }\n\n   constructor(private _el: ElementRef,\n      private _cd: ChangeDetectorRef) {\n      this._onClick = this._onClick.bind(this);\n   }\n\n   ngOnInit(): void {\n      this.title = this._el.nativeElement.title;\n      this._checkTooltipState();\n   }\n\n   ngOnDestroy(): void {\n      document.removeEventListener('click', this._onClick);\n   }\n\n   ngOnChanges(): void {\n      if (this._el) {\n         this._checkTooltipState();\n      }\n   }\n\n   @HostListener('click') onClick(): void {\n      if (this.showOnClick && this.title) {\n         this.classTooltipOn = true;\n         document.addEventListener('click', this._onClick);\n      }\n   }\n\n   private _checkTooltipState(): void {\n      this.classTooltip = this.title && this.title.length && !this.showOnClick;\n      this.classTooltipOn =  false;\n   }\n\n   private _onClick(event: Event): void {\n      if (!this._el.nativeElement.contains(event.target)) {\n         this.classTooltipOn = false;\n         document.removeEventListener('click', this._onClick);\n         this._cd.markForCheck();\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Component, HostBinding, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { StTooltipComponent } from '../st-tooltip/st-tooltip.component';\n\n@Component({\n   selector: '[st-label]',\n   styleUrls: ['../st-tooltip/st-tooltip.component.scss'],\n   templateUrl: './st-label.component.html'\n})\n\nexport class StLabelComponent extends StTooltipComponent {\n   @HostBinding('class.st-label') classStLabel: boolean = true;\n\n   constructor(_el: ElementRef, _cd: ChangeDetectorRef) {\n      super(_el, _cd);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StTooltipComponent } from './st-tooltip.component';\n\n@NgModule({\n   declarations: [StTooltipComponent],\n   exports: [StTooltipComponent],\n   imports: [CommonModule]\n})\n\nexport class StTooltipModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StLabelComponent } from './st-label.component';\nimport { StTooltipModule } from '../st-tooltip/st-tooltip.module';\n\n@NgModule({\n   declarations: [StLabelComponent],\n   exports: [StLabelComponent],\n   imports: [\n      CommonModule,\n      StTooltipModule\n   ]\n})\n\nexport class StLabelModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StCheckboxComponent } from './st-checkbox.component';\nimport { StLabelModule } from '../st-label/st-label.module';\n\n@NgModule({\n   imports: [CommonModule, StLabelModule],\n   declarations: [StCheckboxComponent],\n   exports: [StCheckboxComponent]\n})\nexport class StCheckboxModule {\n}\n","/*\n * Copyright (c) 2017. Stratio Big Data Inc., Sucursal en EspaÃ±a. All rights reserved.\n *\n * This software is licensed under the Apache Licence 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of} from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class StDocsService {\n\n   constructor(private http: HttpClient) { }\n\n   getFile(route?: string): Observable<string> {\n      return this.http.get(`${location.pathname}assets/source-code/${route}`, {responseType: 'text'}).pipe(\n         map(response => (<any>response)),\n         catchError( () => {\n            return  of(null);\n         })\n      );\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { ChangeDetectorRef, Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { StDocsService } from './st-docs.service';\nimport { StHorizontalTab } from '../st-horizontal-tabs/st-horizontal-tabs.model';\nimport { zip } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n   selector: 'st-docs',\n   templateUrl: './st-docs.component.html',\n   styleUrls: ['./st-docs.component.scss']\n})\nexport class StDocsComponent implements OnInit, OnDestroy {\n\n   @Input() htmlFile?: string;\n   @Input() tsFile?: string;\n   @Input() componentFile?: string;\n\n   public htmlCode: string;\n   public demoTsCode: string;\n   public componentTsCode: string;\n\n   public options: StHorizontalTab[] = [\n      {id: 'demo', text: 'Overview'},\n      {id: 'html', text: 'Html'},\n      {id: 'implementation', text: 'Implementation'},\n      {id: 'component', text: 'Component'}\n   ];\n\n   public active: StHorizontalTab = this.options[0];\n\n   private subscription: Subscription;\n\n   constructor(private cd: ChangeDetectorRef, private docsService: StDocsService) {}\n\n   ngOnInit(): void {\n      this.subscription = this.getFile(this.htmlFile).pipe(zip(this.getFile(this.tsFile), this.getFile(this.componentFile), (htmlCode, tsCode, componentCode) =>\n      ({ htmlCode, tsCode, componentCode }))\n      ).subscribe((data) => {\n         this.htmlCode = (data && (<any>data).htmlCode) ? (<any>data).htmlCode : null ;\n         this.demoTsCode = (data && (<any>data).tsCode) ? (<any>data).tsCode : null ;\n         this.componentTsCode = (data && (<any>data).componentCode) ? (<any>data).componentCode : null ;\n         this.disableTabOption(this.htmlCode === null, this.demoTsCode === null, this.componentTsCode === null);\n         this.cd.markForCheck();\n      });\n   }\n\n   ngOnDestroy(): void {\n      this.subscription.unsubscribe();\n   }\n\n   onChangeOption(event: Event): void {\n      this.active = <any> event;\n   }\n\n   private getFile(file?: string): Observable<any> {\n      return this.docsService.getFile(file);\n   }\n\n   private disableTabOption(html: boolean, demoCode: boolean, componentCode: boolean): void {\n      if (html) {\n         this.options = this.filterOption(this.options, 'html');\n      }\n\n      if (demoCode) {\n         this.options = this.filterOption(this.options, 'implementation');\n      }\n\n      if (componentCode) {\n\n         this.options = this.filterOption(this.options, 'component');\n      }\n   }\n\n   private filterOption(options: StHorizontalTab[], name: string): StHorizontalTab[] {\n      return options.filter((element: any) => {\n         return element.id !== name;\n      });\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { TranslateableElement } from '../utils/egeo-resolver/egeo-resolve-model';\n\nexport enum StHorizontalTabStatus { warning = <any> 'warning', error = <any> 'error' }\n\nexport interface StHorizontalTab {\n   id: string;\n   text: string;\n   status?: StHorizontalTabStatus;\n}\n\nexport interface StHorizontalTabSchema {\n   id: string;\n   text: TranslateableElement;\n}\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nexport class EgeoUtils {\n\n   static isDefined(value: any): boolean {\n      return value !== undefined && value !== null;\n   }\n\n   static validateInputs(scope: any, inputs: string[], component: string): void {\n      inputs.forEach((input) => {\n         if (!this.isDefined(scope[input])) {\n            throw new Error(`${this.toDash(component)}: field ${input} is a required field`);\n         }\n      });\n   }\n\n   static toDash(value: string): string {\n      try {\n         return value.replace(/([A-Z])/g, ($1) => '-' + $1.toLowerCase()).substring(1);\n      } catch (err) {\n         return value;\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport * as ReflectMetadata from 'reflect-metadata';\n\nimport { EgeoUtils } from '../utils/egeo-utils';\n\nconst EGEO_METADATA = Symbol('EgeoLibraryMetadata');\n\nexport const enum METADATA_TYPE { PROPERTY }\n\nexport interface EgeoMetadata {\n   type: METADATA_TYPE;\n   required?: boolean;\n   requireCondition?: string;\n   deprecated?: boolean;\n   initialValue?: any;\n}\n\n// tslint:disable:only-arrow-functions\nexport function StRequired(condition?: string): any {\n   return function (target: any, name: string): any {\n      const meta: any = Reflect.getOwnMetadata(EGEO_METADATA, target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || { type: METADATA_TYPE.PROPERTY };\n      meta[name].required = true;\n      if (condition !== undefined) {\n         meta[name].requireCondition = condition;\n      }\n\n      Reflect.defineMetadata(EGEO_METADATA, meta, target.constructor);\n   };\n}\n\nexport function StDeprecated(initialValue?: any): any {\n   return function (target: any, name: string): any {\n      const meta: any = Reflect.getOwnMetadata(EGEO_METADATA, target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || { type: METADATA_TYPE.PROPERTY };\n      meta[name].deprecated = true;\n      if (initialValue !== undefined) {\n         meta[name].initialValue = initialValue;\n      }\n\n      Reflect.defineMetadata(EGEO_METADATA, meta, target.constructor);\n   };\n}\n\nexport function StEgeo(params?: ''): any {\n   return function (target: any): any {\n      let _onInit = target.prototype.ngOnInit;\n      if (_onInit !== undefined) {\n         target.prototype.ngOnInit = function (...args: any[]): void {\n            checkDeprecated(target, this);\n            checkRequired(target, this);\n            _onInit.apply(this, args);\n         };\n      } else {\n         target.prototype.ngOnInit = function (): void {\n            checkDeprecated(target, this);\n            checkRequired(target, this);\n         };\n      }\n   };\n}\n\nfunction checkDeprecated(target: any, scope: any): void {\n   const meta: any = Reflect.getOwnMetadata(EGEO_METADATA, target);\n   if (meta !== undefined) {\n      Object.keys(meta).forEach((key) => {\n         if (meta[key].deprecated) {\n            if (scope[key] !== undefined) {\n               console.warn(`${EgeoUtils.toDash(target.name)}: field ${key} is a deprecated field`);\n            } else if (meta[key].initialValue) {\n               scope[key] = meta[key].initialValue;\n            }\n         }\n      });\n   }\n}\n\nfunction checkRequired(target: any, scope: any): void {\n   const meta: any = Reflect.getOwnMetadata(EGEO_METADATA, target);\n   if (meta !== undefined) {\n      let inputs: string[] = getKeys(Object.keys(meta), meta, scope);\n      EgeoUtils.validateInputs(scope, inputs, target.name);\n   }\n}\n\nfunction getKeys(inputs: string[], metadata: { [key: string]: EgeoMetadata }, scope: any): string[] {\n   return inputs.reduce((prev, curr) => {\n      if (metadata[curr].requireCondition !== undefined) {\n         if (checkConditionMetadata(scope, metadata[curr].requireCondition)) {\n            prev.push(curr);\n         }\n      } else if (metadata[curr].required) {\n         prev.push(curr);\n      }\n      return prev;\n   }, []);\n}\n\nfunction checkConditionMetadata(scope: any, key: string): boolean {\n   if (typeof scope[key] === 'function') {\n      return scope[key].apply(scope);\n   } else {\n      return scope[key];\n   }\n}\n\n// tslint:enabled\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { findIndex } from 'lodash';\nimport { StHorizontalTab, StHorizontalTabStatus } from './st-horizontal-tabs.model';\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\n\n/**\n * @description {Component} [Horizontal tabs]\n *\n * The tabs are a navigation component that divides content into separate views hiding the ones that the user is not focused in.\n *\n * @model\n *\n *   [Id, text and optional status of a tab] {./st-horizontal-tabs.model.ts#StStHorizontalTab}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-horizontal-tabs [options]=\"options\" [qaTag]=\"qaTag\">\n * </st-horizontal-tabs>\n * ```\n *\n */\n@Component({\n   selector: 'st-horizontal-tabs',\n   templateUrl: './st-horizontal-tabs.component.html',\n   styleUrls: ['./st-horizontal-tabs.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\n@StEgeo()\nexport class StHorizontalTabsComponent implements OnInit {\n   /** @Input {StHorizontalTab} [activeOption=''] Current active option */\n   @Input() activeOption: StHorizontalTab;\n   /** @Input {StHorizontalTab[]} [^options=''] An array of StHorizontalTab objects (see below) that defines the links\n    * that will appear and that will be disabled\n    */\n   @StRequired() @Input() options: StHorizontalTab[];\n   /** @Input {string} [qaTag=''] Prefix used to generate the id values for qa tests */\n   @Input() qaTag: string;\n   /** @Output {StHorizontalTab} [changedOption=''] This event is emitted when active option has changed. It has the\n    * active option name as param\n    */\n   @Output() changedOption: EventEmitter<StHorizontalTab> = new EventEmitter<StHorizontalTab>();\n\n\n   ngOnInit(): void {\n      if (this.options && this.options.length > 0) {\n         this.activeOption = this.activeOption || this.options[0];\n         this.activateOption(this.activeOption);\n      }\n   }\n\n   isActive(option: StHorizontalTab): boolean {\n      return this.activeOption === option;\n   }\n\n   activateOption(option: StHorizontalTab): void {\n      this.activeOption = option;\n      this.changedOption.emit(option);\n   }\n\n   getTabStatus(tab: StHorizontalTab): string {\n      return tab.status ? StHorizontalTabStatus[tab.status] : '';\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StHorizontalTabsComponent } from './st-horizontal-tabs.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StHorizontalTabsComponent],\n   exports: [StHorizontalTabsComponent]\n})\nexport class StHorizontalTabsModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {\n   AfterViewChecked,\n   Component,\n   Input,\n   ViewEncapsulation\n } from '@angular/core';\n import 'prismjs';\n import 'prismjs/components/prism-typescript';\n\ndeclare var Prism;\n\n @Component({\n   encapsulation: ViewEncapsulation.None,\n   selector: 'st-prism-highlight',\n   template: `<pre class=\"language-{{language}}\" *ngIf=\"language\"><code class=\"language-{{language}}\"><ng-content></ng-content></code></pre>`\n })\n export class StPrismComponent implements AfterViewChecked {\n   @Input('language') language: string;\n\n   @Input('async') private async: boolean = false;\n   @Input('callback') private callback?: (element: Element) => void | undefined = undefined;\n\n   ngAfterViewChecked(): void {\n     this.highlightAll(this.async, this.callback);\n   }\n\n   /**\n    * Low-level function, only use if you know what youâre doing. It accepts a string of text as input and the\n    * language definitions to use, and returns a string with the HTML produced.\n    */\n   highlightElement(element: any, async: boolean, callback?: (element: Element) => void | undefined): void {\n     Prism.highlightElement(element, async, callback);\n   }\n\n   /**\n    * This is the most high-level function in Prismâs API. It fetches all the elements that have a .language-xxxx\n    * class and then calls Prism.highlightElement() on each one of them.\n    */\n   highlightAll(async: boolean, callback?: (element: Element) => void | undefined): void {\n     Prism.highlightAll(async, callback);\n   }\n }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StPrismComponent } from './st-prism.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [StPrismComponent],\n  exports: [StPrismComponent]\n})\nexport class StPrismModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StDocsComponent } from './st-docs.component';\nimport { StHorizontalTabsModule } from '../st-horizontal-tabs/st-horizontal-tabs.module';\nimport { StDocsService } from './st-docs.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {StPrismModule} from './st-prism/st-prism.module';\n\n@NgModule({\n   imports: [CommonModule, HttpClientModule, StPrismModule, StHorizontalTabsModule],\n   declarations: [StDocsComponent],\n   exports: [StDocsComponent],\n   providers: [StDocsService]\n})\nexport class StDocsModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   Component,\n   EventEmitter,\n   Input,\n   Output,\n   HostListener,\n   HostBinding,\n   ChangeDetectionStrategy, ElementRef, ViewChild\n} from '@angular/core';\n\n/**\n * @description {Component} [Draggable card]\n *\n * The draggable card component is a custom draggable item.\n *\n * @example\n *\n * {html}\n *\n * ```\n *\n *  <st-draggable-card class='card' id='1' (onDragStart)='drag($event)'>\n *      <p>Draggable card 1</p>\n *  </st-draggable-card>\n *\n *\n * ```\n *\n */\n@Component({\n   selector: 'st-draggable-card',\n   styleUrls: ['st-draggable-card.component.scss'],\n   templateUrl: 'st-draggable-card.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StDraggableCardComponent {\n   /** @Input {string} [id] Card id */\n   @Input('id') id: string;\n   /** @Output {any} [dragStart] Event emitted when user start dragging card */\n   @Output() onDragStart: EventEmitter<any> = new EventEmitter<any>();\n   /** @Output {any} [dragEnd] Event emitted when user drops dragging card */\n   @Output() onDragEnd: EventEmitter<any> = new EventEmitter<any>();\n\n   /** @Input {boolean} [draggable=true] Boolean to enable or disable dragging */\n   @HostBinding('draggable')\n   @Input() draggable: boolean = true;\n\n   @ViewChild('card', {static: false}) card: any;\n   private _dragging: boolean = false;\n\n   get dragging(): boolean {\n      return this._dragging;\n   }\n\n   @HostListener('dragstart', ['$event'])\n   public dragStartHandle(event: any): void {\n      this._dragging = true;\n      setTimeout(() => this.card.nativeElement.classList.add('shadow'));\n      event.dataTransfer.effectAllowed = 'all';\n      event.dataTransfer.dropEffect = 'move';\n      this.onDragStart.emit(event);\n      event.stopPropagation();\n   }\n\n   @HostListener('dragend', ['$event'])\n   public dragEndHandle(event: any): void {\n      this.card.nativeElement.classList.remove('shadow');\n      this._dragging = false;\n      event.stopPropagation();\n      this.onDragEnd.emit(event);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule }  from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StDraggableCardComponent } from './st-draggable-card.component';\n\n@NgModule({\n   imports: [ CommonModule ],\n   declarations: [ StDraggableCardComponent ],\n   exports: [ StDraggableCardComponent ]\n})\nexport class StDraggableCardModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { TranslateableElement } from '../utils/egeo-resolver/egeo-resolve-model';\n\nexport enum ARROW_KEY_CODE {ARROW_UP = 'Arrow Up', ARROW_DOWN = 'Arrow Down'}\nexport class StDropDownMenuItem {\n   label: string;\n   value: any;\n   icon?: string;\n   labelColor?: string;\n   iconColor?: string;\n   textInfo?: string;\n   selected?: boolean;\n   hasHtml?: boolean;\n   extraIcon?: string;\n   extraIconBubble?: string;\n   extraIconColor?: string;\n   disabled?: boolean;\n   topSeparator?: boolean;\n   bottomSeparator?: boolean;\n   [key: string]: any; // To do model more extensible if any other component needs to send more data\n}\n\nexport class StDropDownMenuGroup {\n   title?: string;\n   items: StDropDownMenuItem[];\n}\n\nexport class StDropDownMenuItemSchema {\n   label: TranslateableElement;\n   value: any;\n   icon?: string;\n   selected?: boolean;\n}\n\nexport class StDropDownMenuGroupSchema {\n   title?: TranslateableElement;\n   items: StDropDownMenuItemSchema[];\n}\n\nexport enum StDropDownVisualMode {\n   OPTION_LIST, MENU_LIST\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   AfterViewInit,\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   HostListener,\n   Input,\n   OnChanges,\n   OnDestroy,\n   OnInit,\n   Output,\n   Renderer2,\n   SimpleChanges,\n   ViewChild\n} from '@angular/core';\n\nimport { StPopOffset, StPopPlacement } from '../st-pop/st-pop.model';\nimport { ARROW_KEY_CODE, StDropDownMenuGroup, StDropDownMenuItem, StDropDownVisualMode } from './st-dropdown-menu.interface';\n\n/**\n * @description {Component} [Dropdown Menu]\n * This directive show a dropdown menu list in element that you attach\n *\n *\n * @model\n *\n *   [Menu items] {./st-dropdown-menu.interface.ts#StDropDownMenuItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-dropdown-menu [items]=\"list\" [active]=\"show\" (change)=\"onChange(event)\">\n *    <button class=\"button button-primary\" (click)=\"show = !show\">Show menu</button>\n * </st-dropdown-menu>\n * ```\n */\n@Component({\n   selector: 'st-dropdown-menu',\n   templateUrl: './st-dropdown-menu.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StDropdownMenuComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {\n\n   /** @Input {boolean} [active=false] Show or hide list */\n   @Input() active: boolean = false;\n   /** @Input {StDropDownMenuItem[] | StDropDownMenuGroup[]} [items=\\[\\]] List of items or groups of them to show in menu */\n   @Input() items: StDropDownMenuItem[] | StDropDownMenuGroup[] = [];\n   /* tslint:disable-next-line:max-line-length */\n   /** @Input {StPopPlacement} [placement=StPopPlacement.BOTTOM_START] Possible positions of menu with respect element to attach */\n   @Input() placement: StPopPlacement = StPopPlacement.BOTTOM_START;\n   /** @Input {string} [emptyListMessage=''] Message to show in case of empty list */\n   @Input() emptyListMessage: string = '';\n   /** @Input {StDropDownMenuItem | undefined} [selectedItem=undefined] Define selected item without passing as property */\n   @Input() selectedItem: StDropDownMenuItem = undefined;\n   /** @Input {StDropDownMenuItem | undefined} [itemsBeforeScroll=undefined] Define selected item without passing as property */\n   @Input() itemsBeforeScroll: number = 8;\n   /** @Input {boolean} [moveSelected=true] If true, move selected item to top in menu when open */\n   @Input() moveSelected: boolean = true;\n   /** @Input {boolean} [styleSelected=true] If true, apply class selected to selected item */\n   @Input() styleSelected: boolean = true;\n   /** @Input {boolean} [isLoading=true] If true, show loader at the end of the list */\n   @Input() isLoading: boolean = false;\n   /** @Input {StPopOffset} [offset={x: 0 , y: 0}] For position with offset in x o y axis */\n   @Input() offset: StPopOffset = { x: 0, y: 0 };\n   /** @Input {boolean} [openToLeft=false] For calculating all positions from the right corner */\n   @Input() openToLeft: boolean = false;\n   /** @Input {StDropdownVisualMode} [visualMode=StDropDownVisualMode.OPTION_LIST] It is needed to specify the styles applied to the list.\n    *  By default is displayed as a normal option list\n    */\n   @Input() visualMode: StDropDownVisualMode = StDropDownVisualMode.OPTION_LIST;\n   /** @Input {boolean} [keyBoardMove=false] It is needed to activate navigation through options using the keyboard\n    */\n   @Input() keyBoardMove: boolean = false;\n\n   /** @output {StDropDownMenuItem} [change] Event emitted when user select an item */\n   @Output() change: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n\n   /** @output {any} [scrollAtBottom] Event emitted when scroll reach the end of the list */\n   @Output() scrollAtBottom: EventEmitter<any> = new EventEmitter<any>();\n   /** @output {StDropDownMenuItem} [itemMouseEnter] Event emitted when mouse is over an item */\n   @Output() itemMouseEnter: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n   /** @output {StDropDownMenuItem} [itemMouseLeave] Event emitted when mouse leaves an item */\n   @Output() itemMouseLeave: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n\n   @ViewChild('buttonId', { static: false }) buttonElement: ElementRef;\n   @ViewChild('itemList', { static: false }) itemListElement: ElementRef;\n\n   widthMenu: string = '0px';\n\n   private _itemHeight: number = 42;\n   private _focusedOptionPos: number = -1;\n   private _focusListenerFn: () => void;\n\n   constructor(private el: ElementRef, private cd: ChangeDetectorRef, private renderer: Renderer2) {\n   }\n\n   ngOnInit(): void {\n      if (this.keyBoardMove) {\n         this._focusListenerFn = this.renderer.listen('document', 'keydown', this.arrowKeyListener.bind(this));\n      }\n   }\n\n   get componentId(): string | null {\n      const id = (this.el.nativeElement as HTMLElement).getAttribute('id');\n      return id !== undefined && id !== null ? id : null;\n   }\n\n   get menuId(): string | null {\n      return this.componentId !== null ? `${this.componentId}-menu` : null;\n   }\n\n   get isItemGroup(): boolean {\n      return this.isDropDownGroup(this.items);\n   }\n\n   get menuMaxHeight(): string {\n      return this.itemsBeforeScroll ? `${this._itemHeight * this.itemsBeforeScroll}px` : null;\n   }\n\n   get listClasses(): any {\n      return { 'st-dropdown-menu': true, 'active': this.active, 'menu-list': this.displayAsMenuList() };\n   }\n\n   getItemId(value: any | undefined): string | null {\n      return this.componentId !== null && value !== undefined ? `${this.componentId}-option-${this.getItemValueMerged(value)}` : null;\n   }\n\n   isDropDownGroup(value: StDropDownMenuItem[] | StDropDownMenuGroup[]): value is StDropDownMenuGroup[] {\n      return value && value.length > 0 && (<StDropDownMenuGroup>value[0]).title !== undefined;\n   }\n\n   ngAfterViewInit(): void {\n      this.updateWidth();\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if (changes && changes.active && changes.active.currentValue && this.selectedItem && this.moveSelected) {\n         // Only can do this functionality with timeout because we need to wait for angular to load new DOM\n         // with items before move scroll\n         setTimeout(() => {\n            if (this.itemListElement) {\n               const parent: HTMLElement = this.itemListElement.nativeElement;\n               const listOfElements: any = parent.getElementsByClassName('selected');\n               if (listOfElements && listOfElements.length > 0) {\n                  const target: HTMLElement = (listOfElements.item(0) as HTMLElement);\n                  parent.scrollTop = target.offsetTop - parent.offsetTop;\n               }\n            }\n         });\n      } else {\n         if (changes && changes.active && !changes.active.currentValue) {\n            this._focusedOptionPos = -1;\n         }\n      }\n   }\n\n   onChange(value: StDropDownMenuItem): void {\n      this.change.emit(value);\n   }\n\n   onHandleScroll(): void {\n      const element = this.itemListElement.nativeElement;\n      if (element.scrollHeight - element.scrollTop === element.clientHeight && !this.isLoading) {\n         this.scrollAtBottom.emit();\n      }\n   }\n\n   onMouseEnter(item: StDropDownMenuItem): void {\n      this.itemMouseEnter.emit(item);\n   }\n\n   onMouseLeave(item: StDropDownMenuItem): void {\n      this.itemMouseLeave.emit(item);\n   }\n\n   displayAsMenuList(): boolean {\n      return this.visualMode === StDropDownVisualMode.MENU_LIST;\n   }\n\n   @HostListener('window:resize')\n   @HostListener('window:load')\n   updateWidth(): void {\n      const button: HTMLElement = this.buttonElement.nativeElement;\n      setTimeout(() => {\n         if (button.children && button.children.length > 0) {\n            this.widthMenu = button.children[0].getBoundingClientRect().width + 'px';\n         } else {\n            this.widthMenu = button.getBoundingClientRect().width + 'px';\n         }\n         this.cd.markForCheck();\n      });\n\n   }\n\n   ngOnDestroy(): void {\n      if (this._focusListenerFn) {\n         this._focusListenerFn();\n      }\n   }\n\n\n   private getItemValueMerged(value: any): string {\n      return value.toString().replace(/\\s+/g, '_');\n   }\n\n   private getSelectedItemPosition(): number {\n      if (this.selectedItem && this.items) {\n         let _items: StDropDownMenuItem[] = [];\n         if (this.isDropDownGroup(this.items)) {\n            this.items.forEach((item: StDropDownMenuItem | StDropDownMenuGroup) => {\n               if ((<StDropDownMenuGroup> item).items) {\n                  _items.push(...(<StDropDownMenuGroup> item).items);\n               } else {\n                  _items.push((<StDropDownMenuItem> item));\n               }\n            });\n         } else {\n            _items = this.items;\n         }\n         return _items.findIndex(item => item.value === this.selectedItem.value);\n      } else {\n         return -1;\n      }\n   }\n\n   private arrowKeyListener(e: KeyboardEvent): void {\n      const selectedItemPosition = this.getSelectedItemPosition();\n      if (selectedItemPosition > -1) {\n         this._focusedOptionPos = selectedItemPosition;\n      }\n      let nextFocus: number;\n      if (e.code === ARROW_KEY_CODE.ARROW_DOWN || e.code === ARROW_KEY_CODE.ARROW_UP) {\n         event.preventDefault();\n         const options: HTMLLIElement[] = this.el.nativeElement.querySelectorAll('.st-dropdown-menu-item');\n         nextFocus = e.code === ARROW_KEY_CODE.ARROW_DOWN || this._focusedOptionPos === -1 ? 1 : -1;\n         this._focusedOptionPos = this._focusedOptionPos + nextFocus;\n         if (this._focusedOptionPos < 0) {\n            this._focusedOptionPos = options.length - 1;\n         } else if (this._focusedOptionPos > options.length - 1) {\n            this._focusedOptionPos = 0;\n         }\n         if (options[this._focusedOptionPos]) {\n            options[this._focusedOptionPos].focus();\n         }\n      }\n      this.cd.markForCheck();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\n/**\n * @description {Component} Spinner\n *\n * This component shows a spinner when something is being loaded\n *\n * @example\n *\n * {html}\n *\n * ```\n *    <st-spinner theme=\"secondary\">\n *    </st-spinner>\n * ```\n */\n@Component({\n   selector: 'st-spinner',\n   templateUrl: './st-spinner.component.html',\n   styleUrls: ['./st-spinner.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StSpinnerComponent implements OnInit {\n   /** @input {string} [theme='primary'] Name of the spinner theme. By default it is 'primary' */\n   @Input() theme: string = 'primary';\n\n   public classesValue: any;\n\n   constructor(private _cd: ChangeDetectorRef) {}\n\n   ngOnInit(): void {\n      this.classesValue = this.getClasses();\n      this._cd.markForCheck();\n   }\n\n   getClasses(): any {\n      const result: any = {path: true};\n      if (this.theme) {\n         const themeClass = 'path--' + this.theme;\n         result[themeClass] = true;\n      }\n      return result;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StSpinnerComponent } from './st-spinner.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StSpinnerComponent],\n   exports: [StSpinnerComponent]\n})\nexport class StSpinnerModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { StDropDownMenuItem } from '../st-dropdown-menu.interface';\n\n@Component({\n   selector: 'st-dropdown-menu-item',\n   templateUrl: './st-dropdown-menu-item.component.html'\n})\nexport class StDropdownMenuItemComponent {\n   @Input() index: number = 0;\n   @Input() item: StDropDownMenuItem = undefined;\n   @Input() selectedItem: StDropDownMenuItem = undefined;\n   @Input() styleSelected: boolean = true;\n\n   @Output() change: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n\n   visibleExtraButtonBubble: boolean;\n\n   constructor(private sanitizer: DomSanitizer) {\n\n   }\n\n   onChangeItem(): void {\n      if (!this.item.disabled) {\n         this.change.emit(this.item);\n      }\n   }\n\n   onToggleExtraButtonBubble(): void {\n      this.visibleExtraButtonBubble = !this.visibleExtraButtonBubble;\n   }\n\n   get isSelected(): boolean {\n      return (this.hasItem && this.item.selected && this.styleSelected) ||\n         (this.hasItem && this.selectedItem !== undefined && this.item.value === this.selectedItem.value && this.styleSelected);\n   }\n\n   get icon(): string {\n      return this.hasIcon ? this.item.icon : '';\n   }\n\n   get html(): SafeHtml {\n      return this.item && this.item.label ? this.sanitizer.bypassSecurityTrustHtml(this.item.label) : '';\n   }\n\n   get hasIcon(): boolean {\n      return this.hasItem && this.item.icon !== undefined && this.item.icon !== null;\n   }\n\n   get hasExtraIcon(): boolean {\n      return this.hasItem && this.item.extraIcon !== undefined && this.item.extraIcon !== null;\n   }\n\n   get hasItem(): boolean {\n      return this.item !== undefined && this.item !== null;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StBubbleModule } from './../../st-bubble/st-bubble.module';\nimport { StDropdownMenuItemComponent } from './st-dropdown-menu-item.component';\n\n\n@NgModule({\n   imports: [CommonModule, StBubbleModule],\n   declarations: [StDropdownMenuItemComponent],\n   exports: [StDropdownMenuItemComponent]\n})\nexport class StDropdownMenuItemModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StDropdownMenuComponent } from './st-dropdown-menu.component';\nimport { StPopModule } from '../st-pop/st-pop.module';\nimport { StSpinnerModule } from '../st-spinner/st-spinner.module';\nimport { StDropdownMenuItemModule } from './st-dropdown-menu-item/st-dropdown-menu-item.module';\n\n@NgModule({\n   imports: [CommonModule, StPopModule, StSpinnerModule, StDropdownMenuItemModule],\n   declarations: [StDropdownMenuComponent],\n   exports: [StDropdownMenuComponent]\n})\nexport class StDropdownMenuModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\n\n/**\n * @description {Component} [File button]\n *\n * The file button allows to upload a file with a specified extension.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-file-button text=\"IMPORT\" accepted='json'\n * (selected)=\"onUploadValidFile($event)\"\n * (error)=\"onUploadInvalidFile()\">\n * </st-file-button>\n * ```\n *\n */\n@Component({\n   selector: 'st-file-button',\n   styleUrls: ['st-file-button.component.scss'],\n   templateUrl: 'st-file-button.component.html'\n})\n\nexport class StFileButtonComponent implements OnInit {\n   /** @Input {string} [text=''] Displayed text */\n   @Input() text: string;\n   /** @Input {string} [buttonClass=''] Class for button */\n   @Input() buttonClass: string = 'button-primary';\n   /** @Input {string} [accepted=''] The allowed extensions */\n   @Input() accepted: string = '';\n   /** @Input {string} [id=''] Identifier for input */\n   @Input() id: string;\n   /** @Output {File} [selected=''] Event emitted when a file is selected */\n   @Output() selected: EventEmitter<any> = new EventEmitter();\n   /** @Output {Error} [error=''] Event emitted when an invalid file is selected */\n   @Output() error: EventEmitter<any> = new EventEmitter();\n\n   private _accepted: Array<string>;\n\n   ngOnInit(): void {\n      this._accepted = this.accepted.split(',');\n   }\n\n   onChange(eventData: any): void {\n      let files: File[] = eventData.target.files;\n      if (this.areFilesValid(files)) {\n         this.selected.emit(eventData.target.files);\n      } else {\n         this.error.emit();\n      }\n      eventData.srcElement.value = '';\n   }\n\n   private areFilesValid(files: File[]): boolean {\n      for (let i = 0; i < files.length; ++i) {\n         let file: File = files[i];\n         if (file.type && this._accepted.indexOf(file.type.split('/').pop()) === -1\n            || (!file.type && this._accepted.indexOf(file.name.split('.').pop()) === -1 )) {\n            return false;\n         }\n      }\n\n      return true;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule }  from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StFileButtonComponent } from './st-file-button.component';\n\n@NgModule({\n   imports: [ CommonModule ],\n   declarations: [ StFileButtonComponent ],\n   exports: [ StFileButtonComponent ]\n})\nexport class StFileButtonModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { StFooterLink } from './st-footer.model';\n\n@Component({\n  selector: 'st-footer',\n  templateUrl: './st-footer.component.html',\n  styleUrls: ['./st-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StFooterComponent {\n\n  @Input() rightsText: string;\n  @Input() links: StFooterLink[] = [];\n  @Input() qaTag: string;\n  @Input() image: string;\n  @Output() link: EventEmitter<StFooterLink> = new EventEmitter<StFooterLink>();\n\n  constructor(\n     private router: Router\n  ) { }\n\n  goToLink(link: StFooterLink): void {\n     if (link.url) {\n        window.open(link.url, '_blank');\n     }\n\n     if (link.router) {\n        this.router.navigate([link.router]);\n     }\n\n     this.link.emit(link);\n  }\n\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule }  from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { StFooterComponent }   from './st-footer.component';\n\n@NgModule({\n   imports: [ CommonModule, RouterModule ],\n   exports: [ StFooterComponent ],\n   declarations: [ StFooterComponent ],\n   providers: []\n})\nexport class StFooterModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Validator, ValidatorFn, AbstractControl, ValidationErrors, Validators, NG_VALIDATORS } from '@angular/forms';\nimport { OnChanges, SimpleChanges, Directive, Input, forwardRef } from '@angular/core';\n\n@Directive({\n   selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n   providers: [\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StMinValidator), multi: true }\n   ],   host: {'[attr.min]': 'min ? min : null'}\n})\nexport class StMinValidator implements Validator, OnChanges {\n   @Input() min: string;\n\n   private _validator: ValidatorFn;\n\n   private _onChange: () => void;\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if ('min' in changes) {\n         this._createValidator();\n         if (this._onChange) this._onChange();\n      }\n   }\n\n   validate(c: AbstractControl): ValidationErrors|null {\n      return this.min == null ? null : this._validator(c);\n   }\n\n   registerOnValidatorChange(fn: () => void): void {\n      this._onChange = fn;\n   }\n\n   private _createValidator(): void {\n      this._validator = Validators.min(Number(this.min));\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Validator, ValidatorFn, AbstractControl, ValidationErrors, Validators, NG_VALIDATORS } from '@angular/forms';\nimport { OnChanges, SimpleChanges, Directive, Input, forwardRef } from '@angular/core';\n\n@Directive({\n   selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n   providers: [\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StMaxValidator), multi: true }\n   ],\n   host: {'[attr.max]': 'max ? max : null'}\n})\nexport class StMaxValidator implements Validator, OnChanges {\n   @Input() max: string;\n\n   private _validator: ValidatorFn;\n   private _onChange: () => void;\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if ('max' in changes) {\n         this._createValidator();\n         if (this._onChange) this._onChange();\n      }\n   }\n\n   validate(c: AbstractControl): ValidationErrors|null {\n      return this.max == null ? null : this._validator(c);\n   }\n\n   registerOnValidatorChange(fn: () => void): void {\n      this._onChange = fn;\n   }\n\n   private _createValidator(): void {\n      this._validator = Validators.max(Number(this.max));\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { NgModule, Type } from '@angular/core';\n\nimport { StMinValidator } from  './st-min-validator/st-min-validator';\nimport { StMaxValidator } from  './st-max-validator/st-max-validator';\n\n\nexport const SHARED_FORM_DIRECTIVES: Type<any>[] = [\n   StMinValidator,\n   StMaxValidator\n];\n\n\n@NgModule({\n   declarations: SHARED_FORM_DIRECTIVES,\n   exports: SHARED_FORM_DIRECTIVES\n})\n\nexport class StFormDirectiveModule {\n}\n","export enum FORM_UI_COMPONENT {\n   SHOW_MORE = <any> 'show-more',\n   SWITCH = <any> 'switch',\n   ACCORDION = <any> 'accordion'\n}\n\nexport interface StFormFieldTranslations {\n   placeholder?: string;\n}\n\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   AfterViewChecked,\n   AfterViewInit,\n   ChangeDetectionStrategy,\n   Component,\n   EventEmitter,\n   forwardRef,\n   Input,\n   OnDestroy,\n   Output,\n   ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { JSONSchema4 } from 'json-schema';\nimport { StInputError } from '../st-input/st-input.error.model';\nimport { StFormSchema } from './st-form.model';\nimport { FORM_UI_COMPONENT, StFormFieldTranslations } from './st-form-field/st-form-field.interface';\n\n/**\n * @description {Component} [Dynamic form]\n *\n * The form component allows to generate forms dynamically using a JSON schema.\n *\n * @model\n *\n *   [Form Schema] {./st-form.model.ts#StFormSchema}\n *   [Form UI Definition] {./st-form.model.ts#StFormUIDefinition}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-form [schema]=\"jsonSchema\" [(ngModel)]=\"model\" #formModel=\"ngModel\">\n * </st-form>\n *\n * ```\n *\n */\n@Component({\n   selector: 'st-form',\n   templateUrl: './st-form.component.html',\n   styleUrls: ['./st-form.component.scss'],\n   host: { class: 'st-form' },\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StFormComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StFormComponent), multi: true }\n   ]\n})\n\nexport class StFormComponent implements AfterViewInit, AfterViewChecked, ControlValueAccessor, OnDestroy {\n   /** @Input {string} [parentName=] Name of the parent section. By default, it is undefined */\n   @Input() parentName: string;\n   /** @Input {string} [nestingLevel=0] This informs about the nesting level of the form. This input is only used for design purposes */\n   @Input() nestingLevel: number = 0;\n   /** @Input {boolean} [forceValidations=] Boolean to force the field validations */\n   @Input() forceValidations: boolean;\n   /** @Input {string} [disabledSectionMessage='for this instance is disabled.']\n    *  Message displayed when a section is disabled. This is always displayed after the section name\n    */\n   @Input() disabledSectionMessage: string = 'for this instance is disabled.';\n\n   /** @Input {number} [sectionDescriptionLevel=-1] Level of the section to which description is displayed.\n    * By default, section descriptions are not displayed.\n    */\n   @Input() sectionDescriptionLevel: number = -1;\n\n   /** @Input {number} [textFieldMaxWidth=] Maximum width of a field needed to paint a input or textarea */\n   @Input() textFieldMaxWidth: number;\n\n   /** @Input {StInputError} [errorMessages=] Field error translations */\n   @Input() errorMessages: StInputError;\n\n   /** @Input {boolean} [showTooltips=-1] Enable or disable displaying of tooltips\n    * By default, tooltips are displayed\n    */\n   @Input() showTooltips: boolean = true;\n\n   /** @Input {StFormFieldTranslations} [translations=] Field translations */\n   @Input() translations?: StFormFieldTranslations;\n\n   /** @Output {any} [valueChange=] Event emitted when value is changed. This emits the current form value */\n   @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\n   /** @Output {string} [clickLink=] Event emitted when link is clicked. It returns the field path */\n   @Output() clickLink: EventEmitter<string> = new EventEmitter<string>();\n\n   @ViewChild('form', { static: false }) form: NgForm;\n\n   public showCollapsedSectionFields: boolean = false;\n   public innerValue: any = {};\n   private _value: any = {};\n   private _parentFieldSubscription: Subscription[] = [];\n   private _parentFields: string[];\n   private _schema: StFormSchema;\n\n   /** @Input {StFormSchema [schema=] Form schema needed to generate the form */\n   @Input() get schema(): StFormSchema {\n      return this._schema;\n   }\n\n   set schema(schema: StFormSchema) {\n      this._schema = schema;\n      this._value = {};\n      if (this._schema.dependencies) {\n         this._parentFields = Object.keys(this._schema.dependencies);\n      }\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.forceValidations) {\n         this.form.form.markAsPristine();\n      }\n   }\n\n   ngAfterViewChecked(): void {\n      if (this._parentFields && this.form.control && this.form.control.controls) {\n         for (let i = 0; i < this._parentFields.length; ++i) {\n            let parentField: string = this._parentFields[i];\n            if (!this._parentFieldSubscription[i] && this.form.control.controls[parentField]) {\n\n               this._parentFieldSubscription[i] = this.form.control.controls[this._parentFields[i]].valueChanges.subscribe((value) => {\n                  if (!value) {\n                     let childrenFields: JSONSchema4 | string[] = this.schema.dependencies[parentField];\n                     for (let j = 0; j < childrenFields.length; ++j) {\n                        if (this.form.controls[childrenFields[j]]) {\n                           this._value[childrenFields[j]] = undefined;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n      }\n   }\n\n   // Function to call when the value changes.\n   onChange(_: any): void {\n   }\n\n   onTouched = () => {\n   }\n\n   validate(control: FormControl): any {\n      let errors: any = null;\n      if (this.form) {\n         Object.keys(this.form.controls).forEach((propertyName) => {\n            if (this.form.controls[propertyName] && this.form.controls[propertyName].errors) {\n               if (!errors) {\n                  errors = {};\n               }\n               errors[propertyName] = this.form.controls[propertyName].errors;\n            }\n         });\n\n         this.form.control.setErrors(errors);\n      }\n      return errors;\n   }\n\n   isRequired(propertyName: string): boolean {\n      return propertyName && this.schema.required && this.schema.required.indexOf(propertyName) !== -1;\n   }\n\n   isCollapsedSection(): boolean {\n      return this.schema.type === 'object' && this.schema.ui &&\n         (this.schema.ui.component === FORM_UI_COMPONENT.SHOW_MORE || this.schema.ui.component === FORM_UI_COMPONENT.ACCORDION);\n   }\n\n   iShowMoreSection(): boolean {\n      return this.schema.type === 'object' && this.schema.ui && this.schema.ui.component === FORM_UI_COMPONENT.SHOW_MORE;\n   }\n\n   isAParentField(propertyName: string): boolean {\n      return this.schema.dependencies && this.schema.dependencies[propertyName] && this.schema.dependencies[propertyName].length > 0;\n   }\n\n   getOptionalButtonLabel(): string {\n      let label: string = 'Additional options';\n\n      if (this.parentName || this.schema.title) {\n         label += ' of ';\n         label += this.parentName || this.schema.title;\n      }\n\n      return label;\n   }\n\n   onChangeOptionalFieldsVisibility(): void {\n      this.showCollapsedSectionFields = !this.showCollapsedSectionFields;\n   }\n\n   getFieldClasses(propertyName: string): any {\n      return {\n         'hidden': this.isCollapsedSection() && !this.showCollapsedSectionFields,\n         'parent-field': this.isAParentField(propertyName) || (this.isASwitchSection() && this.isTheFirstField(propertyName))\n      };\n   }\n\n   fieldHasToBeCreated(propertyName: string): boolean {\n      let createField: boolean = true;\n      let parentField: string = this.getParentField(propertyName);\n      if (((parentField && !this._value[parentField]) || (this.isInADisabledSection() && !this.isTheFirstField(propertyName)))\n         || !this.fulfillDependencyVisibility(propertyName)) {\n         createField = false;\n         this._value[propertyName] = undefined;\n      }\n      return createField;\n   }\n\n   isRelatedField(propertyName: string): boolean {\n      return this._schema.properties[propertyName].ui && this.schema.properties[propertyName].ui.relatedTo\n         && this.schema.properties[propertyName].ui.relatedTo.length > 0;\n   }\n\n   // When value is received from outside\n   writeValue(value: any): void {\n      if (value) {\n         this.onChange(value);\n         this.innerValue = value;\n      }\n   }\n\n   onChangeProperty(value: any, property: string): void {\n      this._value[property] = value;\n      this.valueChange.emit(this._value);\n      setTimeout(() => {\n         this.onChange(this._value);\n      });\n   }\n\n   // Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   // Registry the touch function to propagate internal touch events TODO: make this function.\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   // Allows Angular to disable the form.\n   setDisabledState(disable: boolean): void {\n      if (disable) {\n         this.form.control.disable();\n      } else {\n         this.form.control.enable();\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this._parentFieldSubscription) {\n         for (let i = 0; i < this._parentFieldSubscription.length; ++i) {\n            this._parentFieldSubscription[i].unsubscribe();\n         }\n      }\n   }\n\n   isInADisabledSection(): boolean {\n      if (this.isASwitchSection()) {\n         let sectionEnabler: string = Object.keys(this.schema.properties)[0];\n         return !(this.form && this.form.controls[sectionEnabler] && this.form.controls[sectionEnabler].value);\n      }\n      return false;\n   }\n\n   isASwitchSection(): boolean {\n      return this.schema.ui && this.schema.ui.component === FORM_UI_COMPONENT.SWITCH;\n   }\n\n   isAnAccordion(): boolean {\n      return this.schema.ui && this.schema.ui.component === FORM_UI_COMPONENT.ACCORDION;\n   }\n\n   onClickTitle(): void {\n      if (this.isAnAccordion()) {\n         this.onChangeOptionalFieldsVisibility();\n      }\n   }\n\n   isTheFirstField(propertyName: string): boolean {\n      return propertyName === Object.keys(this.schema.properties)[0];\n   }\n\n   onClickLink(fieldKey: string): void {\n      this.clickLink.emit(fieldKey);\n   }\n\n   private getParentField(propertyName: string): string {\n      let parentField: string = undefined;\n      if (this.schema.dependencies) {\n         Object.keys(this.schema.dependencies).forEach((key: string) => {\n            if (this.schema.dependencies[key].indexOf(propertyName) !== -1) {\n               parentField = key;\n            }\n         });\n      }\n      return parentField;\n   }\n\n   private fulfillDependencyVisibility(propertyName: string): boolean {\n      let fulfill: boolean = true;\n      let propertySchema: any = this.schema.properties[propertyName];\n      if (propertySchema.ui && propertySchema.ui.visible) {\n         const keys: string[] = Object.keys(propertySchema.ui.visible);\n         let i = 0;\n         while (fulfill && i < keys.length && propertySchema.ui.visible.hasOwnProperty(keys[i])) {\n            if (this._value[keys[i]] !== propertySchema.ui.visible[keys[i]]) {\n               fulfill = false;\n            }\n            ++i;\n         }\n      }\n      return fulfill;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   EventEmitter,\n   forwardRef,\n   HostBinding,\n   Input,\n   OnChanges,\n   OnDestroy,\n   OnInit,\n   Output,\n   ViewChildren\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { StInputError } from './st-input.error.model';\nimport { StDropDownMenuGroup, StDropDownMenuItem } from '..';\n\n/**\n * @description {Component} Input\n *\n * This component specifies an input field where the user can enter data.\n *\n * @model\n *\n *   [Error messages] {./st-input.error.model.ts#StInputError}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-input class=\"st-form-field\"\n *    type=\"text\"\n *    formControlName=\"name\"\n *    placeholder=\"Enter your name\"\n *    label=\"Field\"\n *    default=\"default name\"\n *    contextualHelp=\"This is a normal field\">\n * </st-input>\n * ```\n */\n\n@Component({\n   selector: 'st-input',\n   templateUrl: './st-input.component.html',\n   styleUrls: ['./st-input.component.scss'],\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StInputComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StInputComponent), multi: true }\n   ],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StInputComponent implements ControlValueAccessor, OnChanges, OnInit, OnDestroy {\n   /** @input {string} [placeholder=null] The text that appears as placeholder of the input. It is empty by default */\n   @Input() placeholder: string = '';\n   /** @input {string} [name=''] Input name */\n   @Input() name: string = '';\n   /** @input {string} [label=''] Label to show over the input. It is empty by default */\n   @Input() label: string = '';\n   /** @input {'text' | 'number' | 'password'} [fieldType='text'] Input type */\n   @Input() fieldType: 'text' | 'number' | 'password' = 'text';\n   /** @input {StInputError} [errors=] Customized error messages */\n   @Input() errors: StInputError;\n   /** @Input {string} [qaTag=''] Id value for qa test */\n   @Input() qaTag: string;\n   /** @Input {boolean} [forceValidations=false] If you specify it to 'true', the input checks the errors before being modified by user */\n   @Input() forceValidations: boolean = false;\n   /** @Input {string} [contextualHelp=''] It will be displayed when user clicks on the info button */\n   @Input() contextualHelp: string;\n   /** @Input {string} [maxLength=''] Define a max-length for input field */\n   @Input() maxLength: number;\n   /** @Input {string} [min=''] Define a minimum number for number inputs */\n   @Input() min: number;\n   /** @Input {string} [max=''] Define a maximum number for number inputs */\n   @Input() max: number;\n   /** @Input {boolean} [isFocused=false] If true, the input will be focused on view init. */\n   @Input() isFocused: boolean = false;\n   /** @Input {boolean} [readonly=''] This parameter disables the input and it can not be modified by the user */\n   @Input() readonly: boolean = false;\n   /** @Input {string} [step=''] It specifies the interval between legal numbers in the input field */\n   @Input() step: string;\n   /** @Input {string} [default=] Default value of input */\n   @Input() default: any;\n   /** @input {(StDropDownMenuItem | StDropDownMenuGroup)[]} [autocompleteList=Array()] List to be used for autocomplete feature. It is empty by default */\n   @Input() autocompleteList: (StDropDownMenuItem | StDropDownMenuGroup)[] = [];\n   /** @input {number} [charsToShowAutocompleteList=1] Number of characters before displaying autocomplete list. By default is 1 */\n   @Input() charsToShowAutocompleteList: number = 1;\n\n   /** @Input {any} [value=''] Value of the input */\n\n   @Input()\n   get value(): any {\n      return this._value;\n   }\n\n   set value(value: any) {\n      this._value = value;\n   }\n\n   /** @Output {} [blur] Notify when user leaves a field */\n   @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n   @ViewChildren('input') vc: any;\n\n   public disabled: boolean = false; // To check disable\n   public displayResetButtonValue: boolean = false;\n   public focus: boolean = false;\n   public internalControl: FormControl;\n   public errorMessage: string = undefined;\n   public showErrorValue: boolean = false;\n   public expandedMenu: boolean = false;\n\n   private sub: Subscription;\n   private _value: any;\n   private valueChangeSub: Subscription;\n   private internalInputModel: any;\n\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   onChange = (_: any) => {\n   }\n\n   onTouched = () => {\n   }\n\n   @HostBinding('class.st-input--autocomplete')\n   get showAutocompleteList(): boolean {\n      return this.expandedMenu && this.autocompleteList && this.autocompleteList.length > 0;\n   }\n\n   validate(control: FormControl): any {\n      if (this.sub) {\n         this.sub.unsubscribe();\n      }\n      this.sub = control.statusChanges.subscribe(() => this.checkErrors(control));\n   }\n\n   ngOnChanges(change: any): void {\n      if (this.forceValidations && this.internalControl) {\n         this.writeValue(this.internalControl.value);\n      }\n   }\n\n   ngOnInit(): void {\n      this.internalControl = new FormControl(this.internalInputModel);\n      this.valueChangeSub = this.internalControl.valueChanges.subscribe((value) => {\n         this.onChange(this.getTypedValue(value));\n         this.showAutocompleteMenu();\n         this.showErrorValue = this.showError();\n         this.displayResetButtonValue = this.displayResetButton();\n      });\n   }\n\n   ngAfterViewInit(): void {\n      if (this.isFocused) {\n         this.focus = true;\n         this.vc.first.nativeElement.focus();\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.valueChangeSub) {\n         this.valueChangeSub.unsubscribe();\n      }\n      if (this.sub) {\n         this.sub.unsubscribe();\n      }\n   }\n\n   // When value is received from outside\n   writeValue(value: any): void {\n      this.internalInputModel = value;\n      this._value = value;\n      this.internalControl.setValue(this.getTypedValue(value));\n   }\n\n   // Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   // Registry the touch function to propagate internal touch events TODO: make this function.\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(disable: boolean): void {\n      this.disabled = disable;\n      if (this.disabled && this.internalControl && this.internalControl.enabled) {\n         this.internalControl.disable();\n      } else if (!this.disabled && this.internalControl && this.internalControl.disabled) {\n         this.internalControl.enable();\n      }\n      this._cd.markForCheck();\n   }\n\n   showError(): boolean {\n      return this.errorMessage !== undefined && (!this.internalControl.pristine || this.forceValidations) && !this.focus && !this.disabled;\n   }\n\n   get labelQaTag(): string {\n      return (this.qaTag || this.name) + '-label';\n   }\n\n   displayResetButton(): boolean {\n      return this.default !== undefined && this.internalControl.dirty && this.internalControl.value !== this.default;\n   }\n\n   resetToDefault(): void {\n      this.writeValue(this.default);\n      this._cd.markForCheck();\n   }\n\n   /**  Autocomplete list actions */\n\n   onListSelect(data: StDropDownMenuItem): void {\n      if (data && data.value && data.value.length) {\n         this.writeValue(data.value);\n      } else {\n         this.writeValue('');\n      }\n      this.expandedMenu = false;\n      this._cd.markForCheck();\n   }\n\n   onClickOutside(event: Event): void {\n      if (this.expandedMenu) {\n         this.expandedMenu = false;\n      }\n   }\n\n   /** Style functions */\n   onFocus(event: Event): void {\n      this.focus = true;\n      this.showErrorValue = this.showError();\n      this.showAutocompleteMenu();\n   }\n\n   onFocusOut(event: Event, emitEvent: boolean): void {\n      this.focus = false;\n\n      if (emitEvent) {\n         this.blur.emit();\n      }\n      this.showErrorValue = this.showError();\n   }\n\n   // When status change call this function to check if have errors\n   private checkErrors(control: FormControl): void {\n      let errors: { [key: string]: any } = control.errors;\n      this.errorMessage = this.getErrorMessage(errors);\n      this._cd.markForCheck();\n   }\n\n   // Get error message in function of error list.\n   private getErrorMessage(errors: { [key: string]: any }): string {\n      if (!errors) {\n         return undefined;\n      }\n\n      if (!this.errors) {\n         return '';\n      }\n\n      if (errors.hasOwnProperty('required')) {\n         return this.errors.required || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('fieldType')) {\n         return this.errors.type || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('minlength')) {\n         return this.errors.minLength || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('maxlength')) {\n         return this.errors.maxLength || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('pattern')) {\n         return this.errors.pattern || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('min')) {\n         return this.errors.min || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('max')) {\n         return this.errors.max || this.errors.generic || '';\n      }\n      return '';\n   }\n\n   private getTypedValue(value: string): any {\n      switch (this.fieldType) {\n         case 'number':\n            if (!value || isNaN(Number(value))) {\n               return value;\n            } else {\n               return Number(value);\n            }\n         default:\n            return value;\n      }\n   }\n\n   private showAutocompleteMenu(): void {\n      this.expandedMenu = this.focus && this.internalControl && this.charsToShowAutocompleteList <= (this.internalControl.value || '').length;\n      this._cd.markForCheck();\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a. All rights reserved.\n *\n * This software â including all its source code â contains proprietary\n * information of Stratio Big Data Inc., Sucursal en EspaÃ±a and\n * may not be revealed, sold, transferred, modified, distributed or\n * otherwise made available, licensed or sublicensed to third parties;\n * nor reverse engineered, disassembled or decompiled, without express\n * written authorization from Stratio Big Data Inc., Sucursal en EspaÃ±a.\n */\nimport { Directive, EventEmitter, ElementRef, HostListener, Output } from '@angular/core';\n\n@Directive({ selector: '[clickOutside]' })\nexport class StClickOutside {\n  @Output() clickOutside: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  public onDocumentClick(event: MouseEvent): void {\n    const targetElement = event.target as HTMLElement;\n      if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {\n         this.clickOutside.emit(event);\n      }\n  }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { NgModule } from '@angular/core';\nimport { StClickOutside } from './st-click-outside.directive';\n\n@NgModule({\n   imports: [],\n   declarations: [StClickOutside],\n   exports: [StClickOutside]\n})\nexport class StClickOutsideModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StInputComponent } from './st-input.component';\nimport { StLabelModule } from '../st-label/st-label.module';\nimport { StFormDirectiveModule } from '../directives/form/form-directives.module';\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StClickOutsideModule } from '../directives/st-click-outside/st-click-outside.module';\nimport { StMinValidator } from '../directives/form/st-min-validator/st-min-validator';\nimport { StMaxValidator } from '../directives/form/st-max-validator/st-max-validator';\n\n@NgModule({\n   imports: [CommonModule, FormsModule, ReactiveFormsModule, StLabelModule, StFormDirectiveModule, StDropdownMenuModule, StClickOutsideModule],\n   declarations: [StInputComponent],\n   exports: [StInputComponent, StMinValidator, StMaxValidator]\n})\nexport class StInputModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, HostBinding, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel } from '@angular/forms';\nimport { StInputError } from '../../st-input/st-input.error.model';\nimport { StEgeo, StRequired } from '../../decorators/require-decorators';\nimport { StDropDownMenuItem } from '../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { JSONSchema4Type, JSONSchema4TypeName } from 'json-schema';\nimport { StFormSchema } from '../st-form.model';\nimport { StFormFieldTranslations } from './st-form-field.interface';\n\n@StEgeo()\n@Component({\n   selector: 'st-form-field',\n   templateUrl: './st-form-field.component.html',\n   styleUrls: ['./st-form-field.component.scss'],\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StFormFieldComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StFormFieldComponent), multi: true }\n   ],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   host: {\n      class: 'st-form-field'\n   }\n})\n\nexport class StFormFieldComponent implements ControlValueAccessor, OnInit {\n   @Input() required: boolean = false;\n   @Input() errorMessages: StInputError;\n   @Input() qaTag: string;\n   @Input() name: string;\n   @Input() value: any;\n   @Input() hasDependencies: boolean;\n   @Input() forceValidations: boolean;\n   @Input() showTooltip: boolean = true;\n   @Input() maxWidth: number; // number of characters from witch inputs will be displayed as textarea\n   @Input() translations?: StFormFieldTranslations;\n   @Output() clickLink: EventEmitter<string> = new EventEmitter<string>();\n   @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\n   @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n   @ViewChild('templateModel', { static: false }) templateModel: NgModel;\n\n   public disabled: boolean = false; // To check disable\n   public focus: boolean = false;\n   public errorMessage: string = undefined;\n   public selectOptions: StDropDownMenuItem[];\n   public innerValue: any;\n   public errors: StInputError;\n\n   private _schema: { key: string, value: StFormSchema };\n\n   private readonly _defaultErrorMessages: StInputError = {\n      generic: 'Error',\n      required: 'This field is required',\n      minLength: 'The field min length is ',\n      maxLength: 'The field max length is ',\n      min: 'The number has to be higher than ',\n      max: 'The number has to be minor than ',\n      pattern: 'Invalid value'\n   };\n\n   @Input() @StRequired()\n   get schema(): { key: string, value: StFormSchema } {\n      return this._schema;\n   }\n\n   set schema(schema: { key: string, value: StFormSchema }) {\n      this._schema = schema;\n      this.selectOptions = this.getSelectOptions();\n   }\n\n   @HostBinding('class.read-only')\n   get readOnly(): boolean {\n      return this._schema && this._schema.value && this._schema.value.readOnly === true;\n   }\n\n   onChange = (_: any) => {\n   }\n\n   onTouched = () => {\n   }\n\n   setValue(value: any): void {\n      this.onChange(value);\n      this.valueChange.emit(value);\n   }\n\n   validate(control: FormControl): any {\n      if (this.templateModel && this.templateModel.control && this.templateModel.control.validator) {\n         return this.templateModel.control.validator(control);\n      }\n   }\n\n   ngOnInit(): void {\n      if (this._schema.value && this._schema.value.enum) {\n         this.selectOptions = this.getSelectOptions();\n      }\n      this._loadErrorMessages();\n      setTimeout(() => {\n         if (this.default !== undefined && (this.innerValue === undefined || this.innerValue === null)) {\n            this.innerValue = this.default;\n            this.onChange(this.innerValue);\n         }\n         if (this._schema.value.readOnly) {\n            this.setDisabledState(true);\n         }\n      });\n   }\n\n   get type(): string {\n      switch (this._schema.value.type) {\n         case 'string':\n            return this._schema.value.enum ? 'select' : 'text';\n         case 'integer':\n            return this._schema.value.enum ? 'select' : 'number';\n         default:\n            return <JSONSchema4TypeName> this._schema.value.type;\n      }\n   }\n\n   get min(): number {\n      return this._schema.value.exclusiveMinimum ? this._schema.value.minimum + this.getInputStep() : this._schema.value.minimum;\n   }\n\n   get max(): number {\n      return this._schema.value.exclusiveMaximum ? this._schema.value.maximum - this.getInputStep() : this._schema.value.maximum;\n   }\n\n   get label(): string {\n      return this._schema.value.title;\n   }\n\n   get placeholder(): string {\n      return this._schema.value.examples && this._schema.value.examples[0] ? this._schema.value.examples[0] : '';\n   }\n\n   get default(): JSONSchema4Type {\n      return this._schema.value.default;\n   }\n\n   get description(): string {\n      if (this.showTooltip) {\n         return this._schema.value.description;\n      } else {\n         return undefined;\n      }\n   }\n\n   get minLength(): number {\n      return this._schema.value.minLength;\n   }\n\n   get maxLength(): number {\n      return this._schema.value.maxLength;\n   }\n\n   get pattern(): string {\n      return this._schema.value.pattern;\n   }\n\n   hasType(type: string): boolean {\n      switch (type) {\n         case 'input':\n            return this.type === 'text' || this.type === 'number' || this.type === 'integer';\n         case 'switch':\n            return this.type === 'boolean' && this.hasDependencies;\n         case 'checkbox':\n            return this.type === 'boolean' && !this.hasDependencies;\n         default:\n            return this.type === type;\n      }\n   }\n\n   writeValue(value: any): void {\n      this.innerValue = value;\n      this.valueChange.emit(value);\n      this.onChange(value);\n   }\n\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(disable: boolean): void {\n      if (this.templateModel && this.templateModel.control) {\n         if (disable) {\n            this.templateModel.control.disable();\n         } else {\n            this.templateModel.control.enable();\n         }\n      }\n   }\n\n   getInputStep(): number {\n      if (this._schema.value.type === 'number') {\n         return 0.1;\n      } else {\n         return 1;\n      }\n   }\n\n   getSelectOptions(): StDropDownMenuItem[] {\n      let options: StDropDownMenuItem[] = [];\n      if (this._schema.value.enum) {\n         const placeholder: string = (this.translations && this.translations.placeholder) || 'Select one option';\n         options.push(<StDropDownMenuItem> { label: placeholder, value: undefined });\n         let enumValues: any[] = <any[]> this._schema.value.enum;\n         const uiOptions: StDropDownMenuItem[] = (this._schema.value.ui && this._schema.value.ui.options) || [];\n         options.push(...uiOptions);\n         enumValues.forEach((value) => {\n            if (!options.find(_option => _option.value === value)) {\n               options.push(<StDropDownMenuItem> { label: value, value: value });\n            }\n         });\n      }\n      return options;\n   }\n\n   onBlur(): void {\n      this.blur.emit();\n   }\n\n   onClickLink(): void {\n      this.clickLink.emit(this._schema.key);\n   }\n\n   private _loadErrorMessages(): void {\n      this.errors = {\n         required: (this.errorMessages && this.errorMessages.required) || this._defaultErrorMessages.required,\n         pattern: (this.errorMessages && this.errorMessages.pattern) || this._defaultErrorMessages.pattern,\n         generic: (this.errorMessages && this.errorMessages.generic) || this._defaultErrorMessages.generic,\n         minLength: ((this.errorMessages && this.errorMessages.minLength) || this._defaultErrorMessages.minLength) + this._schema.value.minLength,\n         maxLength: ((this.errorMessages && this.errorMessages.maxLength) || this._defaultErrorMessages.maxLength) + this._schema.value.maxLength,\n         min: ((this.errorMessages && this.errorMessages.min) || this._defaultErrorMessages.min) + (this.min - this.getInputStep()),\n         max: ((this.errorMessages && this.errorMessages.max) || this._defaultErrorMessages.max) + (this.max + this.getInputStep())\n      };\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Directive, OnInit, OnDestroy, Input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n\n@Directive({ selector: '[stCheckValidations]' })\nexport class StCheckValidationsDirective implements OnInit, OnDestroy {\n   @Input() errorMessage: string;\n\n   onChange: (_: any) => void;\n\n   private sub: Subscription;\n\n   constructor(private control: NgControl) { }\n\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   ngOnInit(): void {\n      this.sub = this.control.statusChanges.subscribe(() => this.notifyErrorsIfExists());\n   }\n\n   ngOnDestroy(): void {\n      if (this.sub) {\n         this.sub.unsubscribe();\n      }\n   }\n\n   // TODO implement error check and notify correct error\n   private notifyErrorsIfExists(): void {\n      if (this.control.valid && this.onChange) {\n         this.onChange(null);\n      } else if (this.onChange) {\n         this.onChange(this.errorMessage);\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   AfterViewInit,\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   forwardRef,\n   HostBinding,\n   Injector,\n   Input,\n   OnInit,\n   Output,\n   ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cloneDeep as _cloneDeep, flatten as _flatten, has as _has } from 'lodash';\n\nimport { StCheckValidationsDirective } from './st-check-validations';\nimport { StDropDownMenuGroup, StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\n\n@Component({\n   selector: 'st-select',\n   templateUrl: './st-select.html',\n   styleUrls: ['./st-select.scss'],\n   host: {\n      'class': 'st-select'\n   },\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StSelectComponent), multi: true }\n   ]\n})\nexport class StSelectComponent implements AfterViewInit, OnInit, ControlValueAccessor {\n\n   @Input() placeholder: string = '';\n   @Input() name: string = '';\n   @Input() label: string = '';\n   @Input() tooltip: string | null = null;\n   @Input() errorMessage: string;\n   @Input() selected: StDropDownMenuItem = undefined;\n   @Input() default: any;\n   @Input() itemsBeforeScroll: number = 8;\n   @Input() enabledSearcher: boolean = false;\n   @Input() isLoading: boolean = false;\n   @Input() forceValidations: boolean = false;\n\n   @Input() placeholderSearch?: string = 'Search...';\n   @Input() keyBoardMove: boolean = false;\n\n   @Output() expand: EventEmitter<boolean> = new EventEmitter<boolean>();\n   @Output() select: EventEmitter<any> = new EventEmitter<any>();\n   @Output() scrollAtBottom: EventEmitter<any> = new EventEmitter<any>();\n   @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n   @ViewChild('input', {static: false}) inputElement: ElementRef;\n   @ViewChild('button', {static: false}) buttonElement: ElementRef;\n\n   @HostBinding('class.st-select-opened')\n\n   public expandedMenu: boolean = false;\n   public searchInput: FormControl = new FormControl();\n   public inputFormControl: FormControl = new FormControl();\n\n   onChange: (_: any) => void;\n   onTouched: () => void;\n\n   private _inputHTMLElement: HTMLInputElement | undefined = undefined;\n   private _isDisabled: boolean = false;\n   private _options: StDropDownMenuItem[] | StDropDownMenuGroup[] = [];\n\n\n   constructor(private _selectElement: ElementRef,\n               private _injector: Injector,\n               private _cd: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      if (this.selected) {\n         this.inputFormControl.setValue(this.selected.label);\n      }\n   }\n\n   // TODO: MOVE THIS TO FORM-BASE\n   notifyError(errorMessage: string): void {\n      this.errorMessage = errorMessage;\n   }\n\n   /*\n    ****** getters && setters ******\n    */\n   @Input()\n   set disabled(value: boolean) {\n      this._isDisabled = value;\n      this._cd.markForCheck();\n   }\n\n   get disabled(): boolean {\n      return this._isDisabled;\n   }\n\n   @Input()\n   set options(options: StDropDownMenuItem[] | StDropDownMenuGroup[]) {\n      this._options = _cloneDeep(options);\n      const selectedItem: StDropDownMenuItem | undefined = this.findByProperty('selected', true);\n      this.removeAllSelected();\n      if (selectedItem) {\n         this.selected = selectedItem;\n      }\n   }\n\n   get options(): StDropDownMenuItem[] | StDropDownMenuGroup[] {\n      return this._options;\n   }\n\n   get selectedValue(): string {\n      return this.selected && this.selected.label ? this.selected.label : '';\n   }\n\n   get disableValue(): string | null {\n      return this._isDisabled === true ? '' : null;\n   }\n\n   get selectId(): string | null {\n      const select: HTMLElement = this._selectElement.nativeElement;\n      return select.getAttribute('id') !== null ? select.id : null;\n   }\n\n   get inputId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-input` : null;\n   }\n\n   get labelId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-label` : null;\n   }\n\n   get optionsId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-options` : null;\n   }\n\n   get inputName(): string | null {\n      return this.name && this.name.length > 0 ? this.name : null;\n   }\n\n   get hasLabel(): boolean {\n      return this.label !== undefined && this.label !== null && this.label.length > 0;\n   }\n\n   showError(): boolean {\n      return this.errorMessage && this.errorMessage.length && (this.inputFormControl.touched || this.forceValidations) && !this._isDisabled;\n   }\n\n   /*\n    ****** Control value accessor && validate methods ******\n    */\n\n   onSearch(): void {\n      this.search.emit(this.searchInput.value);\n      this._cd.markForCheck();\n   }\n\n   onSearchClick(event: Event): void {\n      event.preventDefault();\n      event.stopPropagation();\n   }\n\n   // Set the function to be called when the control receives a change event.\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   // Set the function to be called when the control receives a touch event.\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(disabled: boolean): void {\n      this._isDisabled = disabled;\n      this._cd.markForCheck();\n   }\n\n   // Write a new value to the element.\n   writeValue(newValue: any): void {\n      if (!this.selected || this.selected.value !== newValue) {\n         this.selected = this.findByProperty('value', newValue);\n         if (this.selected) {\n            this.inputFormControl.setValue(this.selected.label);\n         }\n         this._cd.markForCheck();\n      }\n   }\n\n   /*\n    ****** Component methods ******\n    */\n\n   ngAfterViewInit(): void {\n      this._inputHTMLElement = this.inputElement.nativeElement;\n      const directive: StCheckValidationsDirective = this._injector.get(StCheckValidationsDirective, null);\n      if (directive) {\n         directive.registerOnChange(this.notifyError.bind(this));\n      }\n   }\n\n   onButtonClick(): void {\n      if (!this._isDisabled) {\n         this.toggleButton();\n         this.expandedMenu ? this._inputHTMLElement.focus() : this._inputHTMLElement.blur();\n      }\n   }\n\n   onButtonKeyPress(event: KeyboardEvent): void {\n      if (event.code === 'Enter') {\n         this.toggleButton();\n      }\n   }\n\n   clearSearchInput(): void {\n      this.searchInput.setValue('');\n      this.search.emit('');\n   }\n\n   createResetButton(): boolean {\n      return this.default !== undefined && ((!this.selected && this.inputFormControl.touched) || (this.selected && this.selected.value !== this.default));\n   }\n\n   resetToDefault(): void {\n      this.writeValue(this.default);\n      this.select.emit(this.default);\n      if (this.onChange) {\n         this.onChange(this.default);\n      }\n      this._cd.markForCheck();\n   }\n\n   onClickOutside(): void {\n      this.expandedMenu = false;\n      this.expand.emit(this.expandedMenu); // Notify expand change\n   }\n\n   onChangeOption(option: StDropDownMenuItem): void {\n      this.selected = option && option.value !== undefined ? option : undefined;\n      const value: any = option && option.value !== undefined ? option.value : undefined;\n      if (this.onChange) {\n         this.onChange(value);\n      }\n      if (this.onTouched) {\n         this.onTouched();\n      }\n      this.select.emit(value);\n\n      if (value || (option && option.hasOwnProperty('value') && !option.value)) {\n         this.onClickOutside();\n      }\n      this._cd.markForCheck();\n   }\n\n   onScrollAtBottom(): void {\n      this.scrollAtBottom.emit();\n   }\n\n   /*\n    ****** Util component methods ******\n    */\n\n   // Search element by property in option list\n   private findByProperty(propName: 'value' | 'selected', propValue: any): StDropDownMenuItem | undefined {\n      if (this.isStDropdownItemList(this.options)) {\n         return this.options.find(item => _has(item, propName) && item[propName] === propValue);\n      } else if (this.isStDropdownGroupList(this.options)) {\n         return _flatten(this.options.map(group => group.items)).find(item => _has(item, propName) && item[propName] === propValue);\n      }\n   }\n\n   // Check if options are a instance of StDropDownMenuItem[]\n   private isStDropdownItemList(items: StDropDownMenuItem[] | StDropDownMenuGroup[]): items is StDropDownMenuItem[] {\n      return this.options && this.options.length > 0 && !_has((items as StDropDownMenuGroup[])[0], 'items');\n   }\n\n   // Check if options are a instance of StDropDownMenuGroup[]\n   private isStDropdownGroupList(items: StDropDownMenuItem[] | StDropDownMenuGroup[]): items is StDropDownMenuGroup[] {\n      return this.options && this.options.length > 0 && _has((items as StDropDownMenuGroup[])[0], 'items');\n   }\n\n   private toggleButton(): void {\n      this.expandedMenu = !this.expandedMenu;\n      this.expand.emit(this.expandedMenu); // Notify expand change\n      this._cd.markForCheck();\n   }\n\n   // TODO: Remove when remove from StDropDownMenuItem model the selected property\n   private removeAllSelected(): void {\n      if (this.isStDropdownItemList(this.options)) {\n         return this.options.forEach(item => {\n            if (item.selected) {\n               delete item.selected;\n            }\n         });\n      } else if (this.isStDropdownGroupList(this.options)) {\n         this.options.forEach(group => group.items.forEach(item => {\n            if (item.selected) {\n               delete item.selected;\n            }\n         }));\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StSelectComponent } from './st-select';\nimport { StCheckValidationsDirective } from './st-check-validations';\nimport { StLabelModule } from '../st-label/st-label.module';\nimport { StClickOutsideModule } from '../directives/st-click-outside/st-click-outside.module';\n\n@NgModule({\n   imports: [CommonModule, StDropdownMenuModule, FormsModule, ReactiveFormsModule, StLabelModule, StClickOutsideModule],\n   declarations: [StSelectComponent, StCheckValidationsDirective],\n   exports: [StSelectComponent, StCheckValidationsDirective]\n})\nexport class StSelectModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   Component,\n   Input,\n   ChangeDetectionStrategy,\n   forwardRef,\n   ChangeDetectorRef, Output, EventEmitter\n} from '@angular/core';\nimport {\n   FormControl,\n   ControlValueAccessor,\n   NG_VALUE_ACCESSOR, NG_VALIDATORS\n} from '@angular/forms';\nimport { StEgeo } from '../decorators/require-decorators';\n\n@Component({\n   selector: 'st-switch',\n   host: {class: 'st-switch'},\n   templateUrl: './st-switch.html',\n   styleUrls: ['./st-switch.scss'],\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StSwitchComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StSwitchComponent), multi: true }\n   ],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\n@StEgeo()\nexport class StSwitchComponent implements ControlValueAccessor {\n   @Input() qaTag: string;\n   @Input() label: string;\n   @Input() name: string;\n   @Input() contextualHelp: string;\n   @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   private _value: boolean;\n   private _disabled: boolean;\n   private registeredOnChange: (_: any) => void;\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   @Input()\n   get value(): boolean {\n      return this._value;\n   }\n\n   set value(value: boolean) {\n      this._value = value;\n      this._cd.markForCheck();\n   }\n\n   @Input()\n   get disabled(): boolean {\n      return this._disabled;\n   }\n\n   set disabled(disabled: boolean) {\n      this._disabled = disabled;\n      this._cd.markForCheck();\n   }\n\n   get labelQaTag(): string {\n      return (this.qaTag || this.name) + '-label';\n   }\n\n   get relatedInput(): string {\n      return `${this.name}-input`;\n   }\n\n   validate(control: FormControl): any {}\n\n   // load external change\n   writeValue(value: boolean): void {\n      if (!this._disabled) {\n         this._value = value;\n         this.change.emit(this._value);\n         if (this.registeredOnChange) {\n            this.registeredOnChange(value);\n         }\n      }\n   }\n\n\n   // internal change callback\n   registerOnChange(fn: (_: any) => void): void {\n      this.registeredOnChange = fn;\n   }\n\n   registerOnTouched(fn: () => void): void {\n   }\n\n   setDisabledState(disable: boolean): void {\n      this.disabled = disable;\n   }\n\n   onChange(event: MouseEvent): void {\n      event.stopPropagation();\n      let value: boolean = (<HTMLInputElement>event.target).checked;\n      this._value = value;\n      this.writeValue(value);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StSwitchComponent } from './st-switch.component';\nimport { StLabelModule } from './../st-label/st-label.module';\n\n@NgModule({\n   imports: [CommonModule, FormsModule, ReactiveFormsModule, StLabelModule],\n   declarations: [StSwitchComponent],\n   exports: [StSwitchComponent]\n})\nexport class StSwitchModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Input,\n   OnChanges, OnDestroy, OnInit, ViewChildren, Output, EventEmitter\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { StTextareaError } from './st-textarea.error.model';\n\n/**\n * @description {Component} [Textare]\n *\n * The textarea component is for use normally inside a form, you can use too outside a form like a template driven form.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-textarea\n *    label=\"Components\"\n *    placeholder=\"Number of components\"\n *    [forceValidations]=\"forceValidations\"\n *    [errors]=\"errorsTextarea\"\n *    name=\"components-template\"\n *    qaTag=\"components-textarea-template\"\n *    required\n *    [(ngModel)]=\"model.components\"\n *    contextualHelp=\"This is the contextual help of the components\"\n *    [cols]=\"50\" [rows]=\"10\">\n * </st-textarea>\n * ```\n *\n */\n@Component({\n   selector: 'st-textarea',\n   templateUrl: './st-textarea.component.html',\n   styleUrls: ['./st-textarea.component.scss'],\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StTextareaComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StTextareaComponent), multi: true }\n   ],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StTextareaComponent implements ControlValueAccessor, OnChanges, OnInit, OnDestroy  {\n   /** @Input {string} [placeholder=''] The text that appears as placeholder of the textarea. It is empty by default */\n   @Input() placeholder: string = '';\n\n   /** @Input {string} [name=''] Name of the textarea */\n   @Input() name: string = '';\n\n   /** @Input {string} [label=''] Label to show over the textarea. It is empty by default */\n   @Input() label: string = '';\n\n   /** @Input {StTextareaError} [errors=''] Error to show for each error case, if you don\\'t provide this parameter,\n    * the default behaviour is only to change color without message\n    */\n   @Input() errors: StTextareaError;\n\n   /** @Input {string} [qaTag=''] Id for QA test */\n   @Input() qaTag: string;\n\n   /** @Input {boolean} [forceValidations=false] If you specify it to 'true', the textarea checks the errors before being modified by user */\n   @Input() forceValidations: boolean = false;\n\n   /** @Input {string} [contextualHelp=''] It will be displayed when user clicks on the info button */\n   @Input() contextualHelp: string;\n\n   /** @Input {string} [maxLength=''] Define a max-length for textarea field */\n   @Input() maxLength: number;\n\n   /** @Input {boolean} [isFocused=false] If true, the textarea will be focused on view init. */\n   @Input() isFocused: boolean = false;\n\n   /** @Input {number} [cols=''] Define textarea number of cols */\n   @Input() cols: number;\n\n   /** @Input {number} [rows=''] Define textarea number of rows */\n   @Input() rows: number;\n\n   /** @Input {string} [wrap='soft'] Define type of wrap as html standard */\n   @Input() wrap: string = 'soft';\n\n   /** @Input {string} [default=] Default value of textarea */\n   @Input() default: string;\n\n   /** @Output {} [blur] Notify when user leaves a field */\n   @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n   @ViewChildren('textarea') vc: any;\n\n   public isDisabled: boolean = false; // To check disable\n   public focus: boolean = false;\n   public internalControl: FormControl;\n   public errorMessage: string = undefined;\n   public showErrorValue: boolean = false;\n\n   private sub: Subscription;\n   private valueChangeSub: Subscription;\n   private internalTextareaModel: any = '';\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   onChange = (_: any) => { };\n   onTouched = () => { };\n\n   validate(control: FormControl): any {\n      if (this.sub) {\n         this.sub.unsubscribe();\n      }\n      this.sub = control.statusChanges.subscribe(() => this.checkErrors(control));\n   }\n\n   ngOnChanges(change: any): void {\n      if (this.forceValidations) {\n         this.writeValue(this.internalControl.value);\n      }\n      this._cd.markForCheck();\n   }\n\n   ngOnInit(): void {\n      this.internalControl = new FormControl(this.internalTextareaModel);\n      this.valueChangeSub = this.internalControl.valueChanges.subscribe((value) => this.onChange(value));\n      this.showErrorValue = this.showError();\n\n   }\n\n   ngAfterViewInit(): void {\n      if (this.isFocused) {\n         this.focus = true;\n         this.vc.first.nativeElement.focus();\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.valueChangeSub) {\n         this.valueChangeSub.unsubscribe();\n      }\n      if (this.sub) {\n         this.sub.unsubscribe();\n      }\n   }\n\n   // When value is received from outside\n   writeValue(value: any): void {\n      this.internalControl.setValue(value);\n      this.internalTextareaModel = value;\n   }\n\n   // Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   // Registry the touch function to propagate internal touch events TODO: make this function.\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(disable: boolean): void {\n      this.isDisabled = disable;\n      if (this.isDisabled && this.internalControl && this.internalControl.enabled) {\n         this.internalControl.disable();\n      } else if (!this.isDisabled && this.internalControl && this.internalControl.disabled) {\n         this.internalControl.enable();\n      }\n      this._cd.markForCheck();\n   }\n\n   showError(): boolean {\n      return this.errorMessage !== undefined && (!this.internalControl.pristine || this.forceValidations) && !this.focus && !this.isDisabled;\n   }\n\n   /** Style functions */\n   onFocus(event: Event): void {\n      this.focus = true;\n\n      this.showErrorValue = this.showError();\n   }\n\n   onFocusOut(event: Event, emitEvent: boolean): void {\n      this.focus = false;\n\n      if (emitEvent) {\n         this.blur.emit();\n      }\n\n      this.showErrorValue = this.showError();\n   }\n\n   displayResetButton(): boolean {\n      return this.default !== undefined && this.internalControl.dirty && this.internalControl.value !== this.default;\n   }\n\n   resetToDefault(): void {\n      this.writeValue(this.default);\n\n      this._cd.markForCheck();\n   }\n\n   // When status change call this function to check if have errors\n   private checkErrors(control: FormControl): void {\n      let errors: { [key: string]: any } = control.errors;\n      this.errorMessage = this.getErrorMessage(errors);\n      this.showErrorValue = this.showError();\n      this._cd.markForCheck();\n   }\n\n   // Get error message in function of error list.\n   private getErrorMessage(errors: { [key: string]: any }): string {\n      if (!errors) {\n         return undefined;\n      }\n\n      if (!this.errors) {\n         return '';\n      }\n\n      if (errors.hasOwnProperty('required')) {\n         return this.errors.required || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('minlength')) {\n         return this.errors.minLength || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('maxlength')) {\n         return this.errors.maxLength || this.errors.generic || '';\n      }\n      if (errors.hasOwnProperty('pattern')) {\n         return this.errors.pattern || this.errors.generic || '';\n      }\n\n      return '';\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StTextareaComponent } from './st-textarea.component';\nimport { StLabelModule } from '../st-label/st-label.module';\n\n@NgModule({\n   imports: [CommonModule, FormsModule, ReactiveFormsModule, StLabelModule],\n   declarations: [StTextareaComponent],\n   exports: [StTextareaComponent]\n})\nexport class StTextareaModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StFormFieldComponent } from './st-form-field.component';\nimport { StInputModule } from '../../st-input/st-input.module';\nimport { StFormDirectiveModule } from '../../directives/form/form-directives.module';\nimport { StCheckboxModule } from '../../st-checkbox/st-checkbox.module';\nimport { StSelectModule } from '../../st-select/st-select.module';\nimport { StSwitchModule } from '../../st-switch/st-switch.module';\nimport { StTextareaModule } from '../../st-textarea/st-textarea.module';\n\n@NgModule({\n   imports: [CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      StInputModule,\n      StCheckboxModule,\n      StSelectModule,\n      StSwitchModule,\n      StTextareaModule,\n      StFormDirectiveModule],\n   declarations: [StFormFieldComponent],\n   exports: [StFormFieldComponent]\n})\n\nexport class StFormFieldModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule }  from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { StFormComponent } from './st-form.component';\nimport { PipesModule } from '../pipes/pipes.module';\nimport { StInputModule } from '../st-input/st-input.module';\nimport { StFormDirectiveModule } from '../directives/form/form-directives.module';\nimport { StFormFieldModule } from './st-form-field/st-form-field.module';\nimport { StSelectModule } from '../st-select/st-select.module';\nimport { StSwitchModule } from '../st-switch/st-switch.module';\nimport { StTextareaModule } from '../st-textarea/st-textarea.module';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      StFormFieldModule,\n      ReactiveFormsModule,\n      StInputModule,\n      PipesModule,\n      StSelectModule,\n      StSwitchModule,\n      StFormDirectiveModule,\n      StTextareaModule\n   ],\n   declarations: [StFormComponent],\n   exports: [StFormComponent]\n})\n\nexport class StFormModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   Component,\n   Input,\n   ChangeDetectionStrategy,\n   EventEmitter,\n   Output,\n   forwardRef,\n   ChangeDetectorRef\n} from '@angular/core';\nimport {\n   NG_VALUE_ACCESSOR,\n   ControlValueAccessor,\n   FormControl,\n   NG_VALIDATORS,\n   FormGroup,\n   FormArray\n} from '@angular/forms';\nimport { cloneDeep as _cloneDeep } from 'lodash';\n\n/**\n * @description {Component} [Form list]\n *\n * The form list component allows to create dynamically list of items.\n *\n * @example\n *\n * {html}\n *\n * ```\n *\n * <st-form-list [schema]=\"jsonSchema\" [ngModel]=\"model1\" name=\"list\"\n * (blur)=\"onBlur($event)\" (add)=\"onAddItem($event)\" (remove)=\"onRemoveItem($event)\">\n * </st-form-list>\n *\n * ```\n *\n *\n */\n@Component({\n   selector: 'st-form-list',\n   templateUrl: './st-form-list.html',\n   styleUrls: ['./st-form-list.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StFormListComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StFormListComponent), multi: true }\n   ]\n})\n\nexport class StFormListComponent implements ControlValueAccessor {\n   /** @Input {any} [schema=''] JSON schema of items */\n   @Input() schema: any;\n   /** @Input {string} [buttonLabel='Add one more item'] String displayed in the button to add more items */\n   @Input() buttonLabel: string = 'Add one more item';\n\n   /** @Output {any[]} [valueChange] Notify any value change */\n   @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n   /** @Output {number} [add]  Notify the position of the added item and the modified model */\n   @Output() add: EventEmitter<{position: number, model: any[]}> = new EventEmitter<{position: number, model: any[]}>();\n\n   /** @Output {number} [remove] Notify the position of the removed item and the modified model */\n   @Output() remove:  EventEmitter<{position: number, model: any[]}> = new EventEmitter<{position: number, model: any[]}>();\n\n   /** @Output {any[]} [blur] Notify when user leaves a field */\n   @Output() blur: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n   public formArray: FormArray = new FormArray([]);\n   private _value: any[] = [];\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   @Input() get value(): any {\n      return this._value;\n   }\n\n   set value(value: any) {\n      if (value !== this._value) {\n         this._value = _cloneDeep(value);\n         this.updateForm();\n         this.onChange(value);\n      }\n   }\n\n   // Function to call when the value changes.\n   onChange(_: any): void {\n   }\n\n   onTouched = () => {\n   }\n\n   addItem(): void {\n      this._value.push({});\n      this.formArray.push(this.generateItemFormGroup());\n      this.valueChange.emit(this._value);\n      this.add.emit({ position: this._value.length - 1, model: this._value });\n      this.onChange(this._value);\n   }\n\n   removeItem(position: number): void {\n      this.formArray.removeAt(position);\n      this._value.splice(position, 1);\n      this.valueChange.emit(this._value);\n      this.remove.emit({ position: position, model: this._value });\n      this.onChange(this._value);\n   }\n\n   isRequired(propertyName: string): boolean {\n      return propertyName && this.schema.required && this.schema.required.indexOf(propertyName) !== -1;\n   }\n\n   generateItemFormGroup(position?: number): FormGroup {\n      let formGroup = new FormGroup({});\n      let properties = Object.keys(this.schema.properties);\n      for (let i = 0; i < properties.length; ++i) {\n         let property: string = properties[i];\n         let value: any = this.schema.properties[property].default;\n         if (position !== undefined && this._value[i]) {\n            value = position !== undefined ? this._value[i][property] : null;\n         }\n         formGroup.addControl(properties[i], new FormControl(value));\n      }\n      return formGroup;\n   }\n\n   validate(control: FormControl): any {\n      let errors: any = null;\n\n      if (this.formArray) {\n         for (let i = 0; i < this.formArray.controls.length; ++i) {\n            let rowFormGroup: FormGroup = <FormGroup> this.formArray.controls[i];\n            Object.keys(rowFormGroup.controls).forEach((propertyName) => {\n               if (rowFormGroup.controls[propertyName] && rowFormGroup.controls[propertyName].errors) {\n                  if (!errors) {\n                     errors = [];\n                  }\n                  if (!errors[i]) {\n                     errors[i] = {};\n                  }\n                  errors[i][propertyName] = rowFormGroup.controls[propertyName].errors;\n               }\n            });\n         }\n      }\n      return errors;\n   }\n\n   onChangeProperty(value: any, rowPosition: number, property: string): void {\n      this._value[rowPosition][property] = value;\n      this.valueChange.emit(this._value);\n      setTimeout(() => {\n         this.onChange(this._value);\n      });\n   }\n\n   onBlur(): void {\n      this.blur.emit(this._value);\n   }\n\n// When value is received from outside\n   writeValue(value: any): void {\n      if (value && this._value !== value) {\n         this._value = _cloneDeep(value);\n         this.updateForm();\n         this._cd.markForCheck();\n      }\n   }\n\n// Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n   }\n\n\n// Allows Angular to disable the form.\n   setDisabledState(disable: boolean): void {\n      if (disable) {\n         this.formArray.disable();\n      } else {\n         this.formArray.enable();\n      }\n   }\n\n   private updateForm(): void {\n      this.formArray = new FormArray([]);\n\n      if (this._value) {\n         for (let i = 0; i < this._value.length; ++i) {\n            this.formArray.push(this.generateItemFormGroup(i));\n         }\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PipesModule } from '../pipes/pipes.module';\nimport { StFormDirectiveModule } from '../directives/form/form-directives.module';\nimport { StFormListComponent } from './st-form-list.component';\nimport { StFormFieldModule } from '../st-form/st-form-field/st-form-field.module';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      StFormFieldModule,\n      PipesModule,\n      StFormDirectiveModule\n   ],\n   declarations: [StFormListComponent],\n   exports: [StFormListComponent]\n})\n\nexport class StFormListModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StWindowRefService } from '../utils/window-service';\n\n\n/**\n * @description {Component} [Fullscreen Layout]\n *\n * Component that shows a full screen view with a title and space for buttons and a\n * main content defined by user using ng-content\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-fullscreen-layout [fullWidth]=\"true\">\n *    <p class=\"st-fullscreen-layout-title\">Edition</p>\n *    <div class=\"st-fullscreen-layout-buttons\">\n *       <button class=\"button button-secondary button-separator\" (click)=\"onClickHideButton()\">Cancel</button>\n *       <button class=\"button button-primary\" (click)=\"onClickHideButton()\">Save</button>\n *    </div>\n *    <div class=\"st-fullscreen-layout-content\">\n *       <h1>TEST</h1>\n *    </div>\n * </st-fullscreen-layout>\n * ```\n */\n@Component({\n   selector: 'st-fullscreen-layout',\n   templateUrl: './st-fullscreen-layout.html',\n   styleUrls: ['./st-fullscreen-layout.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StFullscreenLayoutComponent implements OnDestroy {\n   /** @Input {boolean} [fullWidth=false] Enable full width visualization */\n   @Input() fullWidth: boolean;\n   /** @Input {boolean} [showCloseButton=true] Shows header close button */\n   @Input() showCloseButton: boolean = true;\n\n   @Output() close: EventEmitter<void> = new EventEmitter<void>();\n\n   constructor( private windowRef: StWindowRefService) {\n      this.windowRef.nativeWindow.document.body.style.overflow = 'hidden';\n   }\n\n   ngOnDestroy(): void {\n      this.windowRef.nativeWindow.document.body.style.overflow = '';\n}\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StFullscreenLayoutComponent } from './st-fullscreen-layout';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [\n      StFullscreenLayoutComponent\n   ],\n   exports: [StFullscreenLayoutComponent]\n})\nexport class StFullscreenLayoutModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   AfterViewInit,\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   HostListener,\n   Input,\n   Output,\n   ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { StHeaderMenuOption, StHeaderSelection } from './st-header.model';\nimport { StWindowRefService } from '../utils/window-service';\n\n\n/**\n * @description {Component} [Header]\n *\n * The header component is a main component of an application.\n * This component must be on top and scroll with page, when scroll is in a calculated position,\n * the header shrinks and fix to top.\n *\n * @model\n *\n *   [Header menu options] {./st-header.model.ts#StHeaderMenuOption}\n *   [Submenu options] {./st-header.model.ts#StHeaderSubMenuOption}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-header [menu]=\"headerMenuSchema\" id=\"header\">\n *     <div class=\"st-header-logo\">\n *        <!-- Logo as svg, image, etc. -->\n *     </div>\n *     <div class=\"st-header-user-menu\">\n *        <!-- Right header menu, with user menu, notifications, etc -->\n *     </div>\n *\n *  </st-header>\n * ```\n */\n@Component({\n   selector: 'st-header',\n   templateUrl: './st-header.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StHeaderComponent implements AfterViewInit {\n\n   /** @Input {StHeaderMenuOption[]} [menu] Array with menu option to show */\n   @Input() menu: StHeaderMenuOption[] = [];\n   /** @Input {boolean} [navigateByDefault] True if we want menu to manage navigation, false if navigation will be managed from the outside */\n   @Input() navigateByDefault: boolean = true;\n\n   /** @Output {StHeaderSelection} [selectMenu] Notify any menu option selection */\n   @Output() selectMenu: EventEmitter<StHeaderSelection> = new EventEmitter<StHeaderSelection>();\n\n   @ViewChild('headerDivElement', { static: false }) headerDivElement: ElementRef;\n   @ViewChild('headerFixPart', { static: false }) headerFixPart: ElementRef;\n   @ViewChild('userMenuContainerElement', { static: true }) userMenuContainer: ElementRef;\n\n   public showMenuNames: boolean = true;\n\n   private _headerSize: number = 0;\n\n   constructor(\n      private _router: Router,\n      private _windowServiceRef: StWindowRefService,\n      private _el: ElementRef,\n      private _cd: ChangeDetectorRef\n   ) { }\n\n   public ngAfterViewInit(): void {\n      this._headerSize = this.headerFixPart.nativeElement.getBoundingClientRect().width + this.userMenuElementWidth + 20;\n      setTimeout(() => {\n         this.checkMenuLabelVisibility();\n         this._cd.markForCheck();\n      });\n   }\n\n   @HostListener('window:resize', [])\n   onResize(): void {\n      this.checkMenuLabelVisibility();\n      this._cd.markForCheck();\n   }\n\n   public get id(): string {\n      return this._el.nativeElement.id || 'st-header';\n   }\n\n   public onSelectMenu(selected: StHeaderSelection): void {\n      if (this.navigateByDefault) {\n         if (selected.external) {\n            this._windowServiceRef.nativeWindow.open(selected.link, selected.openInNewPage ? '_blank' : '_self');\n         } else {\n            this._router.navigate([selected.link]);\n         }\n      }\n      this.selectMenu.emit(selected);\n   }\n\n   public get menuContainerId(): string {\n      return `${this.id}-menu`;\n   }\n\n   public get userMenuElementWidth(): number {\n      const userMenuContainer: HTMLElement = this.userMenuContainer.nativeElement;\n\n      if (userMenuContainer.children && userMenuContainer.children.length > 0) {\n         return userMenuContainer.children[0].getBoundingClientRect().width;\n      } else {\n         return userMenuContainer.getBoundingClientRect().width;\n      }\n   }\n\n   private checkMenuLabelVisibility(): void {\n      const windowSize: number = this._windowServiceRef.nativeWindow.innerWidth;\n      const canShowMenuNames = this._headerSize <= windowSize;\n      if (this.showMenuNames !== canShowMenuNames) {\n         this.showMenuNames = canShowMenuNames;\n         this._cd.markForCheck();\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {StDropDownMenuItem} from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { TranslateableElement } from '../utils/egeo-resolver/egeo-resolve-model';\n\nexport class StHeaderMenuOption {\n   icon?: string; // Icon to show on left of menu label\n   label: string; // Menu label to show\n   subMenus: StHeaderSubMenuOption[]; // List of submenu options\n   link: string;\n   external?: boolean;\n   openInNewPage?: boolean;\n}\n\nexport class StHeaderSubMenuOption {\n   label: string; // Label to show\n   link: string;\n   external?: boolean;\n   openInNewPage?: boolean;\n}\n\nexport class StHeaderSelection {\n   link: string;\n   external?: boolean;\n   openInNewPage?: boolean;\n}\n\nexport class StHeaderMenuItem extends StDropDownMenuItem {\n   selection: StHeaderSelection;\n}\n\nexport class StHeaderMenuOptionSchema {\n   icon?: string; // Icon to show on left of menu label\n   label: TranslateableElement; // Menu label to show\n   subMenus: StHeaderSubMenuOptionSchema[]; // List of submenu options\n   link: string;\n   external?: boolean;\n   openInNewPage?: boolean;\n}\n\nexport class StHeaderSubMenuOptionSchema {\n   label: TranslateableElement; // Label to show\n   link: string;\n   external?: boolean;\n   openInNewPage?: boolean;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { StHeaderMenuOption } from './st-header.model';\n\nexport class StHeaderUtils {\n\n   public static isRouteActive(option: StHeaderMenuOption, url: string): boolean {\n      return option && url.indexOf(option.link) > -1;\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   HostBinding,\n   HostListener,\n   Input,\n   OnDestroy,\n   Output,\n   ViewChild\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { StHeaderMenuItem, StHeaderMenuOption, StHeaderSelection } from '../st-header.model';\nimport { StDropDownVisualMode } from './../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StHeaderUtils } from '../st-header.utils';\n\n@Component({\n   selector: 'st-header-menu-option',\n   templateUrl: './menu-option.html',\n   styleUrls: ['./menu-option.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StHeaderMenuOptionComponent implements OnDestroy {\n\n   @Input() showMenuName: boolean;\n\n   @Output() selectMenu: EventEmitter<StHeaderSelection> = new EventEmitter<StHeaderSelection>();\n\n   @ViewChild('menu', { static: false }) menu: ElementRef;\n\n   @HostBinding('class.active')\n   public get isCurrentRoute(): boolean {\n      return StHeaderUtils.isRouteActive(this._option, this.router.url);\n   }\n\n   public isActive: boolean;\n   public visualMode: StDropDownVisualMode = StDropDownVisualMode.MENU_LIST;\n   public hasSubmenu: boolean;\n   public qaId: string;\n   public submenuList: StHeaderMenuItem[];\n\n   private _subscription: Subscription;\n   private _actualPath: string = '';\n   private _option: StHeaderMenuOption;\n\n   @Input()\n   get option(): StHeaderMenuOption {\n      return this._option;\n   }\n\n   set option(_option: StHeaderMenuOption) {\n      this._option = _option;\n      this.hasSubmenu = _option.subMenus && _option.subMenus.length > 0;\n      this.qaId = this._getQaId();\n      this.submenuList = this._getSubmenuList();\n      this.cd.markForCheck();\n   }\n\n   constructor(private elementRef: ElementRef, private router: Router, private cd: ChangeDetectorRef) {\n      this._subscription = this.router.events.subscribe((event) => this._onRouterEvent(event));\n      this._actualPath = this.router.url;\n   }\n\n   public ngOnDestroy(): void {\n      this.isActive = false;\n      this._subscription.unsubscribe();\n   }\n\n   public onMenuClick(): void {\n      if (this.hasSubmenu) {\n         this.isActive = !this.isActive;\n         this.cd.markForCheck();\n      } else {\n         this.selectMenu.emit({\n            link: this._option.link,\n            external: this._option.external,\n            openInNewPage: this._option.openInNewPage\n         });\n      }\n   }\n\n   public changeOption(selected: StHeaderMenuItem): void {\n      this.isActive = false;\n      this.cd.markForCheck();\n      this.selectMenu.emit(selected.selection);\n   }\n\n   @HostListener('document:click', ['$event'])\n   onClickOutside(event: Event): void {\n      const isMyComponent: boolean = this.isActive && this.menu.nativeElement.contains(event.target);\n      if (!isMyComponent && this.isActive) {\n         this.isActive = false;\n         this.cd.markForCheck();\n      }\n   }\n\n   private _onRouterEvent(event: any): void {\n      if (event instanceof NavigationEnd) {\n         this._actualPath = event.urlAfterRedirects;\n         this.submenuList = this._getSubmenuList();\n         this.cd.markForCheck();\n      }\n   }\n\n\n   private _getQaId(): string {\n      if (!this._option) {\n         return null;\n      }\n      let id: string = `${this.elementRef.nativeElement.id}-${this._option.label.toLowerCase()}`;\n      id.replace(/\\s+/ig, '_');\n      return id;\n   }\n\n\n   private _getSubmenuList(): StHeaderMenuItem[] {\n      return this._option && this.hasSubmenu ? this._option.subMenus.map(_ => ({\n         label: _.label,\n         value: _.link,\n         selected: this._actualPath === _.link,\n         selection: {\n            link: _.link,\n            external: _.external,\n            openInNewPage: _.openInNewPage\n         } as StHeaderSelection\n      })) : [];\n   }\n\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   Input,\n   ElementRef,\n   Output,\n   EventEmitter\n} from '@angular/core';\n\nimport { StHeaderMenuOption } from '../st-header.model';\n\n@Component({\n   selector: 'st-header-menu',\n   templateUrl: './menu.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StHeaderMenuComponent {\n\n   @Input() menu: StHeaderMenuOption[];\n   @Input() showMenuNames: boolean;\n\n   @Output() selectMenu: EventEmitter<string> = new EventEmitter<string>();\n\n   constructor(public elementRef: ElementRef) { }\n\n   public get qaId(): string {\n      return this.elementRef.nativeElement.id + '-list';\n   }\n\n   public get itemId(): string {\n      return this.elementRef.nativeElement.id + '-item';\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\n\nimport { StHeaderComponent } from './st-header.component';\nimport { StHeaderMenuOptionComponent } from './menu-option/menu-option';\nimport { StHeaderMenuComponent } from './menu/menu';\n\n\n@NgModule({\n   imports: [\n      CommonModule,\n      RouterModule,\n      StDropdownMenuModule\n   ],\n   declarations: [\n      StHeaderComponent,\n      StHeaderMenuOptionComponent,\n      StHeaderMenuComponent\n   ],\n   exports: [StHeaderComponent]\n})\nexport class StHeaderModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n   selector: 'st-info-box',\n   templateUrl: './st-info-box.component.html',\n   styleUrls: ['./st-info-box.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StInfoBoxComponent implements OnInit {\n   @Input() icon: string;\n   @Input() title: string;\n\n   @Input() width: number;\n   @Input() height: number;\n\n   public styleValue: Object;\n\n   constructor() { }\n\n   ngOnInit(): void {\n      if (this.title === undefined) {\n         throw new Error('st-info-box: title is a required field');\n      }\n      this.styleValue = this.getStyles();\n   }\n\n   getStyles(): Object {\n      let result: Object = {};\n      if (this.width !== undefined) {\n         Object.assign(result, {\n            'width': `${this.width}px`,\n            'min-width': `${this.width}px`,\n            'max-width': `${this.width}px`\n         });\n      }\n      if (this.height !== undefined) {\n         Object.assign(result, {\n            'height': `${this.height}px`,\n            'min-height': `${this.height}px`,\n            'max-height': `${this.height}px`\n         });\n      }\n      return result;\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StInfoBoxComponent } from './st-info-box.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StInfoBoxComponent],\n   exports: [StInfoBoxComponent]\n})\nexport class StInfoBoxModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { StEgeo, StRequired } from '../../decorators/require-decorators';\nimport { StItemListElement } from '../st-item-list.model';\n\n@Component({\n   selector: 'item-list-item',\n   templateUrl: './item-list-item.component.html',\n   styleUrls: ['./item-list-item.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n@StEgeo()\nexport class ItemListItemComponent {\n\n   @Input() @StRequired() item: StItemListElement;\n   @Input() qaTag: string = '';\n   @Input() align: 'left' | 'right' = 'left';\n\n   @Output() selectItem: EventEmitter<StItemListElement> = new EventEmitter<StItemListElement>();\n\n   constructor() { }\n\n   get itemName(): string {\n      return this.item.name;\n   }\n\n   get itemIcon(): string {\n      return this.item.icon;\n   }\n\n   get itemSelected(): boolean {\n      return this.item.selected ? true : false;\n   }\n\n   get itemQaTag(): string {\n      return this.qaTag && this.qaTag + '-item-' + this.item.id || '';\n   }\n\n   get itemStyle(): string {\n      let style: string = `sth-item-list__item item-list-item item-list-item--${this.align}`;\n      style += this.itemSelected ? ' sth-item-list__item--selected' : '';\n      return style;\n   }\n\n   emitOnSelect(event: Event): void {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      this.selectItem.emit(this.item);\n   }\n}\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { StDropDownMenuItem } from '../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StEgeo, StRequired } from '../../decorators/require-decorators';\nimport { StItemListElement } from '../st-item-list.model';\n\n@Component({\n   selector: 'item-list-scroll',\n   templateUrl: './item-list-scroll.component.html',\n   styleUrls: ['./item-list-scroll.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ItemListScrollComponent {\n\n   @Input() @StRequired() list: StItemListElement[];\n   @Input() qaTag: string = '';\n   @Input() align: 'left' | 'right' = 'left';\n\n   @Output() selectItem: EventEmitter<StItemListElement> = new EventEmitter<StItemListElement>();\n\n   scrollItems: StItemListElement[] = [];\n\n   get listQaTag(): string {\n      return this.qaTag && this.qaTag + '-scroll-list' || '';\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\nimport { StItemListElement, StItemListConfig, StItemListConfigSchema } from './st-item-list.model';\n\n@Component({\n   selector: 'st-item-list',\n   templateUrl: './st-item-list.component.html',\n   styleUrls: ['./st-item-list.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StItemListComponent {\n\n   @Input() @StRequired() list: StItemListElement[];\n   @Input() config: StItemListConfig;\n   @Input() qaTag: string = '';\n   @Input() hasSearch: boolean = false;\n   @Input() align: 'left' | 'right' = 'left';\n   @Input() theme: string = 'themeA';\n\n   @Output() selectItem: EventEmitter<StItemListElement> = new EventEmitter<StItemListElement>();\n   @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n   get listTitle(): string {\n      return this.config && this.config.title || '';\n   }\n\n   get searchPlaceholder(): string {\n      return this.config && this.config.searchPlaceholder || '';\n   }\n\n   get listQaTag(): string {\n      return this.qaTag || '';\n   }\n\n   get searchQaTag(): string {\n      return this.qaTag && this.qaTag + '-search' || '';\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\n\nexport abstract class EventWindowManager {\n   public isActive: boolean;\n\n   public abstract _eventElementRef: ElementRef;\n   private globalListener: Function;\n   private forceClose: Function;\n\n   constructor(private _renderer: Renderer2, private _cd: ChangeDetectorRef) { }\n\n   abstract ngOnDestroy(): void;\n\n   protected openElement(): void {\n      if (this.isActive) {\n         this.closeElement();\n      } else {\n         this.isActive = !this.isActive;\n         setTimeout(() => {\n            this.globalListener = this._renderer.listen('document', 'click', this.onClickOutside.bind(this));\n            this.forceClose = this._renderer.listen('document', 'stForceClose', this.onForceClose.bind(this));\n         });\n      }\n   }\n\n   protected closeElement(): void {\n      if (this.isActive) {\n         this.isActive = !this.isActive;\n         this._cd.markForCheck();\n         if (this.globalListener !== undefined && typeof (this.globalListener) === 'function') {\n            this.globalListener();\n            this.forceClose();\n         }\n      }\n   }\n\n   private onClickOutside(event: MouseEvent): void {\n      if (!this._eventElementRef.nativeElement.contains(event.target)) {\n         this.closeElement();\n      }\n   }\n\n   private onForceClose(event: MouseEvent): void {\n      this.closeElement();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport enum StSearchEventOrigin { INPUT, LIST, FILTER, ENTER }\n\nexport class StSearchEvent {\n   text: string;\n   filter?: string;\n   origin?: StSearchEventOrigin;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   Input,\n   OnChanges,\n   OnDestroy,\n   OnInit,\n   Output,\n   Renderer2,\n   SimpleChanges,\n   ViewChild\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { EventWindowManager } from '../utils/event-window-manager';\nimport { debounceTime } from 'rxjs/operators';\nimport { StSearchEvent, StSearchEventOrigin } from './st-search.model';\n\n/**\n * @description {Component} [Search]\n *\n * The search component has been designed to allow user to find a specific content according to his needs.\n *\n * @example\n *\n * {html}\n *\n * ```\n * Search without filters\n *  <st-search [placeholder]=\"placeholder\" [qaTag]=\"qaTag\"\n *  [value]=\"searched\" [debounce]=\"debounceTime\" [minLength]=\"minLength\"\n *  (search)=\"onSearchResult($event)\"></st-search>\n *\n *\n * Search with filters\n *  <st-search [placeholder]=\"placeholder\" [qaTag]=\"qaTag\"\n *  [value]=\"searched\" [debounce]=\"debounceTime\" [minLength]=\"minLength\" [filterOptions]=\"[\n *  { label: 'All', value: 1 },\n *  { label: 'Type ', value: 2 },\n *  { label: 'Color', value: 3 }\n *  ]\" (search)=\"onSearchResult($event)\"></st-search>\n * ```\n *\n */\n@Component({\n   selector: 'st-search',\n   templateUrl: './st-search.component.html',\n   styleUrls: ['./st-search.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StSearchComponent extends EventWindowManager implements OnChanges, OnDestroy, OnInit {\n   /** @Input {number} [debounce=0] Time elapsed in milliseconds before displaying the autocomplete list */\n   @Input() debounce: number = 0;\n\n   /** @Input {boolean} [liveSearch=true] Boolean to enable or disable the automatic search while the user is typing */\n   @Input() liveSearch: boolean = true;\n\n   /** @Input {number} [minLength=0] Minimum of characters typed by the user before launching the search */\n   @Input() minLength: number = 0;\n\n   /** @Input {string} [placeholder='Search'] Text displayed in the search input */\n   @Input() placeholder: string = 'Search';\n\n   /** @Input {string} [qaTag=''] Label used as id */\n   @Input() qaTag: string;\n\n   /** @Input {string} [value=''] Initial value of the search text */\n   @Input() value: string;\n\n   /** @Input {boolean} [disabled=false] Boolean to enable or disable the search */\n   @Input() disabled: boolean = false;\n\n   /** @Input {boolean} [withAutocomplete=false] Enable or disable the autocomplete list when user is typing */\n   @Input() withAutocomplete: boolean = false;\n\n   /** @Input {StDropDownMenuItem[]} [autocompleteList=''] List of items displayed in the autocomplete list when user is typing */\n   @Input() autocompleteList: StDropDownMenuItem[] = [];\n\n   /** @Input {boolean} [showIcon=true] Boolean to hide/show the loupe icon */\n   @Input() showIcon: boolean =  true;\n\n   /** @Input {string} [emptyAutocompleteListMessage=''] Message displayed when the autocomplete list is enabled but\n    * there are not any item with the typed text\n    */\n   @Input() emptyAutocompleteListMessage: string = '';\n\n   /** @Input {StDropDownMenuItem[]} [filterOptions=''] Options displayed at the filter select. If it is not introduced,\n    * filter will not be displayed\n    */\n   @Input() filterOptions: StDropDownMenuItem[];\n\n   /** @Output { Object(filter?: string, text: string)} [search=''] Event emitted when search is launched. It contains\n    * the text typed by the user and the filter value selected (only if filter is displayed)\n    */\n   @Output() search: EventEmitter<StSearchEvent> = new EventEmitter<StSearchEvent>();\n\n   /** @Output {any} [value=''] Event emitted when filter is changed. It contains\n    * the filter value selected\n    */\n   @Output() selectFilter: EventEmitter<any> = new EventEmitter<any>();\n\n   /** @Input {boolean} [keyBoardMove=false] It is needed to activate navigation through options using the keyboard\n    */\n   @Input() keyBoardMove: boolean = false;\n\n   public searchBox: FormControl = new FormControl();\n   public showClear: boolean;\n   public filter: string;\n   @ViewChild('buttonId', {static: false}) public _eventElementRef: ElementRef;\n\n   private subscriptionSearch: Subscription | undefined = undefined;\n   private subscriptionSearchClearButton: Subscription | undefined = undefined;\n   private lastEmittedText: string | undefined = undefined;\n\n   constructor(private _render: Renderer2,\n               private cd: ChangeDetectorRef) {\n      super(_render, cd);\n   }\n\n   get menuId(): string {\n      return this.qaTag ? this.qaTag + '-autocomplete-menu' : null;\n   }\n\n   public ngOnInit(): void {\n      if (this.value) {\n         this.searchBox.setValue(this.value);\n      }\n      // Show clear button if have text\n      this.subscriptionSearchClearButton = this.searchBox.valueChanges.subscribe((val) => this.showClear = (val && val.length > 0));\n      this.checkDisabled();\n      this.manageSubscription();\n      if (this.filterOptions) {\n         this.filter = this.filterOptions[0].value;\n      }\n   }\n\n   public ngOnChanges(changes: SimpleChanges): void {\n      this.checkDebounceChange(changes);\n      this.checkValueChange(changes);\n      this.checkDisableChange(changes);\n      this.checkAutoCompleteMenuChange(changes);\n   }\n\n   public onChangeFilter(value: any): void {\n      this.selectFilter.emit(value);\n      this.emitValue(false, StSearchEventOrigin.FILTER);\n   }\n\n   public ngOnDestroy(): void {\n      if (this.subscriptionSearch !== undefined) {\n         this.subscriptionSearch.unsubscribe();\n      }\n      if (this.subscriptionSearchClearButton !== undefined) {\n         this.subscriptionSearchClearButton.unsubscribe();\n      }\n      this.closeElement();\n   }\n\n   public launchSearch(force: boolean, origin: StSearchEventOrigin): void {\n      if (this.canSearch()) {\n         this.showAutoCompleteMenu();\n         this.emitValue(force, origin);\n      } else {\n         this.closeElement();\n      }\n   }\n\n   public onKeyPress(event: KeyboardEvent): void {\n      let key: number = event.keyCode || event.which;\n      if (key === 13) {\n         this.launchSearch(true, StSearchEventOrigin.ENTER);\n      }\n   }\n\n   public changeOption(item: StDropDownMenuItem): void {\n      if (item && item.label) {\n         this.subscriptionSearch.unsubscribe();\n         this.searchBox.setValue(item.value);\n         this.cd.markForCheck();\n         this.closeElement();\n         this.emitValue(true, StSearchEventOrigin.LIST);\n         this.manageSubscription();\n      }\n   }\n\n   public clearInput(): void {\n      this.searchBox.setValue('');\n      this.closeElement();\n      this.emitValue(true, StSearchEventOrigin.INPUT);\n   }\n\n   public showAutoCompleteMenu(): void {\n      if (this.withAutocomplete && !this.isActive) {\n         this.openElement();\n      }\n      if (this.searchBox.value === '') {\n         this.closeElement();\n      }\n      this.cd.markForCheck();\n   }\n\n   private emitValue(force: boolean, origin: StSearchEventOrigin): void {\n      if (this.isEqualPrevious(force)) {\n         this.lastEmittedText = this.searchBox.value;\n         let newSearch: StSearchEvent = {text: this.lastEmittedText || '', origin: origin};\n         if (this.filter) {\n            newSearch.filter = this.filter;\n         }\n         this.search.emit(newSearch);\n      }\n   }\n\n\n\n   private checkDisabled(): void {\n      if (this.disabled) {\n         this.searchBox.disable();\n      } else {\n         this.searchBox.enable();\n      }\n   }\n\n   private canSearch(): boolean {\n      return this.isDefined() && !this.disabled && this.checkMins();\n   }\n\n   private isDefined(): boolean {\n      return this.searchBox && this.searchBox.value !== null && this.searchBox.value !== undefined;\n   }\n\n   private checkMins(): boolean {\n      return this.minLength <= (this.searchBox && this.searchBox.value && this.searchBox.value.length) ||\n         this.searchBox.value.trim().length === 0;\n   }\n\n   private isEqualPrevious(force: boolean): boolean {\n      return this.lastEmittedText !== this.searchBox.value || force;\n   }\n\n   private checkValueChange(changes: SimpleChanges): void {\n      if (changes && changes.value) {\n         if (this.subscriptionSearch) {\n            this.subscriptionSearch.unsubscribe();\n         }\n         this.searchBox.setValue(changes.value.currentValue);\n         this.manageSubscription();\n      }\n   }\n\n   private checkDebounceChange(changes: SimpleChanges): void {\n      if (changes && changes.debounce) {\n         this.manageSubscription();\n      }\n   }\n\n   private checkDisableChange(changes: SimpleChanges): void {\n      if (changes && changes.disabled) {\n         this.checkDisabled();\n      }\n   }\n\n   private checkAutoCompleteMenuChange(changes: SimpleChanges): void {\n      if (changes && changes.autocompleteList) {\n         this.cd.markForCheck();\n      }\n   }\n\n   private manageSubscription(): void {\n      if (this.subscriptionSearch !== undefined) {\n         this.subscriptionSearch.unsubscribe();\n      }\n      if (this.liveSearch) {\n         this.subscriptionSearch = this.searchBox\n            .valueChanges.pipe(\n            debounceTime(this.debounce))\n            .subscribe((event) => this.launchSearch(false,  StSearchEventOrigin.INPUT));\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StSearchComponent } from './st-search.component';\nimport { StSelectModule } from '../st-select/st-select.module';\n\n@NgModule({\n   imports: [CommonModule, FormsModule, ReactiveFormsModule, StDropdownMenuModule, StSelectModule],\n   declarations: [StSearchComponent],\n   exports: [StSearchComponent]\n})\nexport class StSearchModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\n\n// Components\nimport { ItemListItemComponent } from './item-list-item/item-list-item.component';\nimport { ItemListScrollComponent } from './item-list-scroll/item-list-scroll.component';\nimport { StItemListComponent } from './st-item-list.component';\n\n// Search module\nimport { StSearchModule } from '../st-search/st-search.module';\n\n@NgModule({\n   imports: [CommonModule, StSearchModule, VirtualScrollerModule],\n   declarations: [ItemListScrollComponent, ItemListItemComponent, StItemListComponent],\n   exports: [StItemListComponent]\n})\nexport class StItemListModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { TranslateableElement } from '../utils/egeo-resolver/egeo-resolve-model';\n\nexport class StLauncherItem {\n   label: string;\n   url: string;\n}\n\nexport class StLauncherGroup {\n   label: string;\n   items: StLauncherItem[];\n   expanded?: boolean;\n}\n\nexport class StLauncherItemSchema {\n   label: TranslateableElement;\n   url: string;\n}\n\nexport class StLauncherGroupSchema {\n   label: TranslateableElement;\n   items: StLauncherItemSchema[];\n   expanded?: boolean;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { StLauncherGroup, StLauncherItem } from '../st-launcher.model';\n\n@Component({\n   selector: 'st-launcher-item',\n   templateUrl: './st-launcher-item.component.html',\n   styleUrls: ['./st-launcher-item.component.scss']\n})\nexport class StLauncherItemComponent implements OnInit, OnChanges {\n\n   @Input() item: StLauncherGroup;\n   @Input() qaTag: string;\n   @Input() limit: number;\n   @Input() limitLabel: string;\n\n   @Output() toggle: EventEmitter<StLauncherGroup> = new EventEmitter<StLauncherGroup>();\n   @Output() select: EventEmitter<StLauncherItem> = new EventEmitter<StLauncherItem>();\n   @Output() view: EventEmitter<StLauncherGroup> = new EventEmitter<StLauncherGroup>();\n\n   constructor() {\n   }\n\n   ngOnInit(): void {\n      if (this.item && this.item.expanded === undefined) {\n         this.item.expanded = false;\n      }\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if (changes && changes.item && changes.item.currentValue && changes.item.currentValue.expanded === undefined) {\n         changes.item.currentValue.expanded = false;\n      }\n   }\n\n   get itemsFiltered(): StLauncherItem[]  {\n      return this.item.items.slice(0, this.limit);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   EventEmitter,\n   Input,\n   OnInit,\n   Output,\n   SimpleChanges,\n   ChangeDetectorRef\n} from '@angular/core';\nimport { isEqual as _isEqual } from 'lodash';\n\nimport { StLauncherGroup, StLauncherItem } from './st-launcher.model';\n\n/**\n * @description {Component} Launcher\n *\n * This components show a launcher for the instances of an item group\n *\n *  @model\n *\n *   [Launcher group] {./st-launcher.model.ts#StLauncherGroup}\n *   [Launcher item] {./st-launcher.model.ts#StLauncherItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n *    <st-launcher\n *       qaTag=\"launcher-example\"\n *       [items]=\"items\"\n *       [groupLimit]=\"4\"\n *       [groupLimitLabel]=\"'View more'\"\n *       (toggle)=\"onToggle(event)\"\n *       (select)=\"onSelect(event)\"\n *       (viewMore)=\"onViewMore(event)\">\n *    </st-launcher>\n * ```\n */\n@Component({\n   selector: 'st-launcher',\n   templateUrl: './st-launcher.component.html',\n   styleUrls: ['./st-launcher.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StLauncherComponent {\n\n   /** @input {string} [qaTag=''] For set id for tests */\n   @Input() qaTag: string;\n   /** @input {StLauncherGroup[]} items List of groups of items to show */\n   @Input()\n   get items(): StLauncherGroup[] {\n      return this._items;\n   }\n   set items(items: StLauncherGroup[]) {\n      this._items = items;\n   }\n   /** @input {number} [groupLimit=undefined] Limit of items to be displayed per group */\n   @Input() groupLimit: number;\n   /** @input {string} [groupLimitMessage=''] Label when the group items limit is exceeded */\n   @Input() groupLimitLabel: string;\n\n   /** @output {StLauncherItem} [change=''] Notify any item selection */\n   @Output() select: EventEmitter<StLauncherItem> = new EventEmitter<StLauncherItem>();\n   /** @output {StLauncherGroup} [toggle=''] Notify any group expansion or collapsed */\n   @Output() toggle: EventEmitter<StLauncherGroup> = new EventEmitter<StLauncherGroup>();\n   /** @output {StLauncherGroup} [viewMore=''] Notify that wants to see more items in a group */\n   @Output() viewMore: EventEmitter<StLauncherGroup> = new EventEmitter<StLauncherGroup>();\n\n   private _items: StLauncherGroup[] = [];\n\n   constructor(\n      private _cd: ChangeDetectorRef\n   ) { }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if (changes && changes.items && !changes.items.firstChange) {\n         if (!_isEqual(this._items, changes.items.currentValue)) {\n            this._items = changes.items.currentValue;\n            this._cd.markForCheck();\n         }\n      }\n   }\n\n   get listQaTag(): string {\n      return this.qaTag && this.qaTag + '-list' || '';\n   }\n\n   onToggleGroup(groupItem: StLauncherGroup): void {\n      groupItem.expanded = !groupItem.expanded;\n      this.toggle.emit(groupItem);\n   }\n\n   onSelectItem(item: StLauncherItem): void {\n      this.select.emit(item);\n   }\n\n   onViewMore(item: StLauncherGroup): void {\n      this.viewMore.emit(item);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StLauncherItemComponent } from './st-launcher-item/st-launcher-item.component';\nimport { StLauncherComponent } from './st-launcher.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StLauncherComponent, StLauncherItemComponent],\n   exports: [StLauncherComponent]\n})\nexport class StLauncherModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, ChangeDetectionStrategy, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\nimport { StModalButton, StModalResponse, StModalButtonResponse } from '../st-modal.model';\n\n@Component({\n   selector: 'st-modal-buttons',\n   templateUrl: './st-modal-buttons.html',\n   styleUrls: ['./st-modal-buttons.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StModalButtonsComponent implements OnInit {\n\n   @Input() buttonConfig: StModalButton[] = [];\n   @Input() fullscreen: boolean = false;\n   @Output() click: EventEmitter<StModalButtonResponse> = new EventEmitter<StModalButtonResponse>();\n\n   public hasButtonsValue: boolean = false;\n\n   ngOnInit(): void {\n      this.hasButtonsValue = this.hasButtons();\n   }\n\n   hasButtons(): boolean {\n      return this.buttonConfig && this.buttonConfig.length > 0;\n   }\n\n   getButtonClass(button: StModalButton): string {\n      let classes: string = button && button.classes ? button.classes : '';\n      return classes.trim();\n   }\n\n   getButtonId(button: StModalButton): string | null {\n      return button && button.label ? `st-modal-button-${this.getButtonLabelWithoutSpaces(button.label)}` : null;\n   }\n\n   getButtonLabelWithoutSpaces(label: string): string {\n      return label.replace(/\\s+/g, '_');\n   }\n\n   /** INTERACTION WITH MODAL */\n   clickButton(button: StModalButton, event: MouseEvent): void {\n      if (button.response) {\n         button.response(event);\n      } else if (button.responseValue !== undefined) {\n         this.click.emit({ response: button.responseValue, close: button.closeOnClick });\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule } from '@angular/core';\n\nimport { StModalComponent } from './st-modal.component';\nimport { StModalButtonsComponent } from './st-modal-buttons/st-modal-buttons';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StModalComponent, StModalButtonsComponent],\n   exports: [StModalComponent],\n   entryComponents: [StModalComponent],\n   providers: []\n})\nexport class StModalModule {\n   static withComponents(components: any[]): any {\n      return {\n         ngModule: StModalModule,\n         providers: [\n            { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: components, multi: true }\n         ]\n      };\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'st-modal2',\n  templateUrl: './st-modal2.component.html',\n  styleUrls: ['./st-modal2.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StModal2Component {\n\n  @Input() emptyModal: boolean;\n  @Input() width: number = 600;\n  @Input() modalTitle: string = '';\n  @Input() closeOnEscape: boolean;\n  @Input() hideCloseBtn: boolean;\n\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onEnter: EventEmitter<void> = new EventEmitter<void>();\n\n  private ESCAPE_KEYCODE: number = 27;\n  private ENTER_KEYCODE: number = 13;\n\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent): void {\n    if (this.closeOnEscape && event.keyCode === this.ESCAPE_KEYCODE) {\n      this.onClose.emit();\n    }\n\n    if (event.keyCode === this.ENTER_KEYCODE) {\n      this.onEnter.emit();\n    }\n  }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StModal2Component } from './st-modal2.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StModal2Component],\n   exports: [StModal2Component]\n})\nexport class StModal2Module { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ControlValueAccessor,\n   FormGroup,\n   NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   EventEmitter,\n   Input,\n   OnInit,\n   Output,\n   ViewChild,\n   forwardRef\n} from '@angular/core';\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\n\nexport const PAGETITLE_CONTROL_ACCESSOR: any = {\n   provide: NG_VALUE_ACCESSOR,\n   // tslint:disable-next-line:no-use-before-declare\n   useExisting: forwardRef(() => StPageTitleComponent),\n   multi: true\n};\n\n@StEgeo()\n@Component({\n   selector: 'st-page-title',\n   templateUrl: './st-page-title.component.html',\n   styleUrls: ['./st-page-title.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   providers: [PAGETITLE_CONTROL_ACCESSOR]\n})\nexport class StPageTitleComponent implements ControlValueAccessor, OnInit {\n   @Input()\n   get title(): string {\n      return this._title;\n   }\n\n   set title(title: string) {\n      if (this._title !== title) {\n         this._title = title;\n      }\n\n      this._controlValueAccessorChangeFn(this._title);\n   }\n\n   @Input() leftButton: string = '';\n   @Input() qaTag: string;\n   @Input() preTitle: string | undefined;\n   @Input() editable: boolean = false;\n   @Input() placeholder: string;\n   @Input() disabled: boolean;\n   @Input() readOnly: boolean;\n   @Input() maxlength: number;\n   @Input() minlength: number;\n   @Input() error: boolean;\n   @Input() errorMessage: string;\n   @Output() clickButton: EventEmitter<any> = new EventEmitter();\n   @Output() edit: EventEmitter<string> = new EventEmitter();\n\n   @ViewChild('input', {static: false}) input: any;\n\n   public focus: boolean = false;\n   public hasPreTitleValue: boolean = false;\n   private _title: string;\n\n   ngOnInit(): void {\n      this.hasPreTitleValue = this.hasPreTitle();\n   }\n\n   onClickedButton(): void {\n      this.clickButton.emit();\n   }\n\n   _controlValueAccessorChangeFn: (value: any) => void = value => {};\n\n   onTouched: () => any = () => {};\n\n   hasPreTitle(): boolean {\n      return this.preTitle !== undefined;\n   }\n\n   writeValue(value: any): void {\n      this._title = value;\n   }\n\n   onEdit($event: any): void {\n      this.edit.emit(this._title);\n   }\n\n   registerOnChange(fn: (value: any) => void): void {\n      this._controlValueAccessorChangeFn = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n   }\n\n   onClickEdit(): void {\n      this.focus = true;\n      this.input.nativeElement.focus();\n   }\n\n   onFocus(): void {\n      this.focus = true;\n   }\n\n   onBlur(): void {\n      this.focus = false;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   AfterViewInit,\n   Directive,\n   ElementRef,\n   Input\n} from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n   selector: '[st-input-adjustable]'\n})\nexport class StInputAdjustable implements AfterViewInit {\n   @Input() placeholder: string;\n\n   private text: string;\n   private hiddenTitle: HTMLSpanElement;\n\n   constructor(private el: ElementRef,\n               private ngModel: NgModel) {\n   }\n\n   ngAfterViewInit(): void {\n      this.createHiddenTitle();\n      this.ngModel.valueChanges.subscribe(value => {\n         this.text = value || this.placeholder;\n         this.hiddenTitle.innerText = this.text;\n         setTimeout(() => {\n            this.el.nativeElement.parentNode.style.width = this.hiddenTitle.clientWidth + 10 + 'px';\n         });\n      });\n   }\n\n   private createHiddenTitle(): void {\n      if (!this.ngModel.value) {\n         this.el.nativeElement.value = null;\n         this.el.nativeElement.placeholder = this.placeholder;\n      }\n      this.hiddenTitle = this.el.nativeElement.parentNode.querySelector('.hidden-text');\n      if (!this.hiddenTitle) {\n         this.hiddenTitle = document.createElement('span');\n         this.el.nativeElement.parentNode.appendChild(this.hiddenTitle);\n      }\n\n      this.hiddenTitle.className = 'hidden-text';\n      this.hiddenTitle.style.visibility = 'hidden';\n      this.hiddenTitle.style.position = 'absolute';\n      this.hiddenTitle.style.textTransform = 'none';\n      this.hiddenTitle.style.whiteSpace = 'nowrap';\n      this.hiddenTitle.style.width = 'auto';\n      this.hiddenTitle.style.height = 'auto';\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { StPageTitleComponent } from './st-page-title.component';\nimport { StInputAdjustable } from '../directives/st-input-adjustable/st-input-adjustable';\n\n@NgModule({\n   imports: [CommonModule, FormsModule],\n   declarations: [StPageTitleComponent, StInputAdjustable],\n   exports: [StPageTitleComponent]\n})\nexport class StPageTitleModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   Input,\n   OnInit,\n   Output\n} from '@angular/core';\nimport { StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { Paginate, PaginateIconClasses, PaginateOptions, PaginateTexts } from './st-pagination.interface';\n\n/**\n * @description {Component} [Table]\n *\n * The pagination component has been designed to allow content to be displayed per pages. This informs user about the\n * number of the current page, the items displayed per page and the total of items. Moreover, when there are a lot of\n * items, it allows user to customize the number of items displayed per page.\n *\n * It is made by two sub-components:\n * - A range selector, that allows the user provides a dropdown to set how many items he wants to be displayed per page.\n * - A page navigation control, in order to let the user where he is and where he can go to.\n *\n * * @model\n *\n *   [Paginate] {./st-pagination.interface.ts#Paginate}\n *   [PaginateOptions] {./st-pagination.interface.ts#PaginateOptions}\n *   [PaginateTexts] {./st-pagination.interface.ts#PaginateTexts}\n *   [PaginateTextsSchema] {./st-pagination.interface.ts#PaginateTextsSchema}\n *   [PaginateIconClasses] {./st-pagination.interface.ts#PaginateIconClasses}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <div class=\"pagination\">\n *     <st-pagination [total]=\"items.length\" [perPage]=\"perPage\" [currentPage]=\"page\" [id]=\"'pagination-demo'\"\n *     (change)=\"onChangePage($event)\">\n *     </st-pagination>\n *     </div>\n * ```\n *\n */\n@Component({\n   selector: 'st-pagination',\n   templateUrl: './st-pagination.component.html',\n   styleUrls: ['./st-pagination.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StPaginationComponent implements OnInit {\n\n\n   /** @Input {PaginateTexts} [label={element: 'Rows', perPage: 'per page', of: 'of'}] Translated texts displayed at the pagination */\n   @Input() label: PaginateTexts = {\n      element: 'Rows', perPage: 'per page', of: 'of'\n   };\n\n   /** @Input {PaginateOptions[]}\n    * [perPageOptions=Array( Object( value: 20, showFrom: 0 ),Object( value: 50, showFrom: 50 ), Object( value: 200, showFrom: 200 ))]\n    *  List of options displayed at a selector where user can change the number of items displayed per page\n    */\n   @Input() perPageOptions: PaginateOptions[] = [\n      { value: 20, showFrom: 0 }, { value: 50, showFrom: 50 }, { value: 200, showFrom: 200 }\n   ];\n\n   /** @Input {PaginateIconClasses} [iconClasses=Object(previous='', next='')] Icon classes for previous and next page buttons */\n   @Input() iconClasses: PaginateIconClasses = { previous: 'icon-arrow2_left', next: 'icon-arrow2_right' };\n\n   /** @Output {Paginate} [change=''] Event emitted when user interacts with some of the elements in the pagination.\n    *  This sends the new pagination status (current page and items per page)\n    */\n   @Output() change: EventEmitter<Paginate> = new EventEmitter<Paginate>();\n\n   /** @Output {PaginateOptions} [changePerPage='']  Event emitted when user interacts with some of the elements in the selector of items displayed per page.\n    * This sends the current items per page.\n    */\n   @Output() changePerPage: EventEmitter<number> = new EventEmitter<number>();\n\n   /** @Input {number} [currentPage=1] Number of the current page */\n   @Input()\n   get currentPage(): number {\n      return this._currentPage;\n   }\n\n   set currentPage(currentPage: number) {\n      this._currentPage = currentPage;\n      this.updatePages(false);\n   }\n\n   /** @Input {number} [perPage=20] The maximum number of items displayed per page */\n   @Input()\n   get perPage(): number {\n      return this._perPage;\n   }\n\n   set perPage(perPage: number) {\n      this.onChangePerPage(perPage, false);\n   }\n\n   /** @Input {number} [total=''] Total of items */\n   @Input()\n   get total(): number {\n      return this._total;\n   }\n\n   set total(total: number) {\n      this._total = total;\n      this.generateItems();\n      this.updatePages(false);\n   }\n\n   public disableNextButton: boolean = false;\n   public disablePrevButton: boolean = true;\n   public firstItem: number;\n   public lastItem: number;\n   public items: StDropDownMenuItem[] = [];\n   public selectedItem: StDropDownMenuItem;\n\n   private _currentPage: number = 1;\n   private _perPage: number = 20;\n   private _total: number;\n\n   constructor(private _cd: ChangeDetectorRef,\n               private _paginationElement: ElementRef) {\n   }\n\n   get hasOptions(): boolean {\n      return this.items && this.items.length > 1;\n   }\n\n   get paginationId(): string | null {\n      const pagination: HTMLElement = this._paginationElement.nativeElement;\n      return pagination.getAttribute('id') !== null ? pagination.id : null;\n   }\n\n   get selectId(): string {\n      return this.paginationId !== null ? `${this.paginationId}-select` : null;\n   }\n\n   get buttonPrevId(): string {\n      return this.paginationId !== null ? `${this.paginationId}-prev` : null;\n   }\n\n   get buttonNextId(): string {\n      return this.paginationId !== null ? `${this.paginationId}-next` : null;\n   }\n\n   ngOnInit(): void {\n      this.updatePages(false);\n      this.generateItems();\n   }\n\n   generateItems(): void {\n      this.items = [];\n      this.perPageOptions.forEach(this.addPageOption.bind(this));\n\n      if (this.items.length) {\n         this.selectedItem = this.items.find(item => item.value === this._perPage) || this.items[0];\n      }\n\n      this._cd.markForCheck();\n   }\n\n   nextPage(): void {\n      this.currentPage++;\n      this.updatePages();\n   }\n\n   prevPage(): void {\n      this.currentPage--;\n      this.updatePages();\n   }\n\n   onChangePerPage(perPage: number, emit: boolean = true): void {\n      if (perPage && typeof perPage === 'number') {\n         this._currentPage = 1;\n         this._perPage = perPage;\n         this.updatePages(emit);\n         this.selectedItem = this.items.find(item => item.value === this._perPage);\n         if (emit) {\n            this.changePerPage.emit(this._perPage);\n         }\n      }\n   }\n\n   private addPageOption(option: PaginateOptions): void {\n      if (this._total && (!option.showFrom || option.showFrom <= this._total)) {\n         this.items.push({\n            label: `${option.value}`,\n            value: option.value\n         });\n      }\n   }\n\n   private updatePages(emit: boolean = true): void {\n      this.lastItem = this._perPage * this._currentPage;\n\n      if (this._currentPage === 1) {\n         this.firstItem = this._currentPage;\n         this.disablePrevButton = true;\n      } else {\n         this.firstItem = this._perPage * (this._currentPage - 1) + 1;\n         this.disablePrevButton = false;\n      }\n\n      if (this.lastItem >= this._total) {\n         this.lastItem = this._total;\n         this.disableNextButton = true;\n      } else {\n         this.disableNextButton = false;\n      }\n\n      if (emit) {\n         this.change.emit({\n            currentPage: this._currentPage,\n            perPage: this._perPage\n         });\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { StPaginationService } from './st-pagination.service';\n\n@Pipe({\n   name: 'paginate',\n   pure: false\n})\nexport class StPaginationPipe implements PipeTransform {\n   constructor(\n      private service: StPaginationService\n   ) { }\n\n   transform(items: any[], args: any): any {\n      return this.service.newPage(items, args.currentPage, args.perPage);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StPaginationComponent } from './st-pagination.component';\nimport { StPaginationPipe } from './st-pagination.pipe';\nimport { StPaginationService } from './st-pagination.service';\nimport { StSelectModule } from '../st-select/st-select.module';\n\n@NgModule({\n   imports: [ CommonModule, StSelectModule ],\n   exports: [ StPaginationComponent, StPaginationPipe ],\n   declarations: [ StPaginationComponent, StPaginationPipe ],\n   providers: [\n      StPaginationService\n   ]\n})\nexport class StPaginationModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { StPopOffset, StPopPlacement } from '../st-pop/st-pop.model';\n\n/**\n * @description {Component} Pop Over\n *\n * This components pop over a content with a title\n *\n * @example\n *\n * {html}\n *\n * ```\n *    <st-pop-over [qaTag]=\"qaTag\" [title]=\"title\" [hidden]=\"hidden\">\n *       <!-- CONTENT TO POP OVER -->\n *    </st-pop-over>\n * ```\n */\n@Component({\n   selector: 'st-pop-over',\n   styleUrls: ['./st-pop-over.component.scss'],\n   templateUrl: './st-pop-over.component.html'\n})\nexport class StPopOverComponent {\n\n   /** @input {string} [qaTag=''] For set id for tests */\n   @Input() qaTag: string;\n   /** @input {string} [title] Title of the pop over */\n   @Input() title: string;\n   /** @input {boolean} [hidden=false] Show or hide the pop over */\n   @Input() hidden: boolean = false;\n   /** @Input {StPopOffset} [offset={x: 0 , y: 17}] For position with offset in x o y axis */\n   @Input() offset: StPopOffset = { x: 0, y: 17 };\n   /** @Input {boolean} [showSettingBtn=false] when true, settings icon is displayed    */\n   @Input() showSettingBtn?: boolean = false;\n   /** @Input {boolean} [showArrow=true] when true, arrow icon is displayed    */\n   @Input() showArrow?: boolean = true;\n   /** @Input {boolean} [openToLeft=true] when true, modal is placed from left corner of button    */\n   @Input() openToLeft?: boolean = true;\n   /** @Input {StPopPlacement} [placement=StPopPlacement.BOTTOM] Define position of content relative to button */\n   @Input() placement: StPopPlacement = StPopPlacement.BOTTOM;\n\n   /** @Output {Event} [click] Notify event click */\n   @Output() clickConfig: EventEmitter<Event> = new EventEmitter<Event>();\n\n   private defaultOffset: StPopOffset = { x: 21, y: 8 };\n\n   get popOffset(): StPopOffset {\n      return { x:  this.offset.x + (this.defaultOffset.x * (this.openToLeft ? 1 : -1)), y: (this.offset.y + this.defaultOffset.y) };\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StPopOverComponent } from './st-pop-over.component';\nimport { StPopModule } from '../st-pop/st-pop.module';\n\n@NgModule({\n   imports: [CommonModule, StPopModule],\n   declarations: [StPopOverComponent],\n   exports: [StPopOverComponent]\n})\nexport class StPopOverModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n   selector: 'st-progress-bar',\n   templateUrl: 'st-progress-bar.html',\n   styleUrls: ['st-progress-bar.scss']\n})\n/**\n * @description {Component} Launcher\n *\n * This components show a animated bar to be used while loading data\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-progress-bar></st-progress-bar>\n *\n * ```\n */\n\nexport class StProgressBarComponent {\n\n   /** @Input (Boolean) [wider] Option for a bigger progress-bar */\n   @HostBinding('class.wider')\n   @Input() wider: Boolean;\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StProgressBarComponent } from './st-progress-bar';\n\n@NgModule({\n   imports: [\n      CommonModule\n   ],\n   declarations: [\n      StProgressBarComponent\n   ],\n   exports: [StProgressBarComponent]\n})\n\nexport class StProgressBarModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   EventEmitter,\n   Input,\n   Output\n} from '@angular/core';\nimport { StRadioMenuOption } from './st-radio-menu-option.interface';\n\n/**\n * @description {Component} [Radio Menu]\n *\n * The Radio Menu is composed of options with radios. Usually, it is used in forms and when user\n * interacts with the radio menu, certain part of that form changes according to the selected option.\n * Moreover, you can add to the radio menu a specific theme in order to adapt its colors as you need it.\n *\n * @example\n *\n * {html}\n *\n * ```\n *  <st-radio-menu [activeOption]=\"selectedOptionTheme1\" class=\"radio-menu\" [options]=\"options\"\n *    qaTag=\"radio-menu-theme-gray-1\">\n *  </st-radio-menu>\n * ```\n *\n */\n@Component({\n   selector: 'st-radio-menu',\n   templateUrl: './st-radio-menu.component.html',\n   styleUrls: ['./st-radio-menu.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n   host: {\n      '[class]': 'theme'\n   }\n})\nexport class StRadioMenuComponent {\n   /** @Input {StRadioMenuOption} [activeOption=''] Current active option */\n   @Input() activeOption: StRadioMenuOption;\n   /** @Input {StRadioMenuOption[]} [options=''] Array of string with options, option names must be translated */\n   @Input() options: StRadioMenuOption[];\n   /** @Input {string} [qaTag=''] Identifier to generate a qa tag for each option */\n   @Input() qaTag: string;\n   /**\n    * @Input {string} [theme=''] String representing the theme (css class) to be applied to the radio menu component.\n    * If you are using the Stratio theme, the possible values are theme-gray-1 and theme-gray-2\n    */\n   @Input() theme: string;\n   /** @Input {StRadioMenuOption} [changedOption='']  */\n   @Output() changedOption: EventEmitter<StRadioMenuOption> = new EventEmitter<StRadioMenuOption>();\n\n   constructor() {}\n\n   isActive(option: StRadioMenuOption): boolean {\n      return (\n         this.activeOption !== undefined &&\n         this.activeOption.value === option.value\n      );\n   }\n\n   activateOption(option: StRadioMenuOption): void {\n      this.activeOption = option;\n      this.changedOption.emit(option);\n   }\n\n   checkedOption(option: StRadioMenuOption): boolean {\n      return this.activeOption && (this.activeOption.value === option.value);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Injectable } from '@angular/core';\nimport { StRadioComponent } from './st-radio.component';\n\n@Injectable()\nexport class RadioChange {\n   source: StRadioComponent;\n   value: any;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   Component,\n   Input,\n   EventEmitter,\n   Output,\n   OnInit,\n   Optional, forwardRef, Directive, ContentChildren, QueryList\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { RadioChange } from './st-radio.change';\nimport { SelectOneDispatcher } from '../utils/unique-dispatcher';\n\nexport const MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n   provide: NG_VALUE_ACCESSOR,\n   // tslint:disable-next-line:no-use-before-declare\n   useExisting: forwardRef(() => StRadioGroupComponent),\n   multi: true\n};\n\nlet _uniqueIdCounter = 0;\n\n// tslint:disable-next-line:max-classes-per-file\n@Directive({\n   selector: 'st-radio-group',\n   providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n   host: {\n      role: 'radiogroup'\n   }\n})\nexport class StRadioGroupComponent implements ControlValueAccessor {\n\n   @Output()\n   change: EventEmitter<RadioChange> = new EventEmitter<RadioChange>();\n\n   @Input()\n   qaTag: string;\n\n   @Input()\n   get value(): any {\n      return this._value;\n   }\n\n   set value(newValue: any) {\n      if (this._value !== newValue) {\n         this._value = newValue;\n      }\n\n      this.updatedSelectRadioFromValue();\n      this.checkSelectRadio();\n   }\n\n   @Input()\n   get name(): string {\n      return this._name;\n   }\n\n   set name(value: string) {\n      this._name = value;\n      this.updateRadioName();\n   }\n\n   @Input()\n   get selected(): StRadioComponent {\n      return this._selected;\n   }\n   set selected(selected: StRadioComponent) {\n      this._selected = selected;\n      this.value = selected ? selected.value : null;\n      this.checkSelectRadio();\n   }\n\n   @Input()\n   get disabled(): boolean { return this._disabled; }\n   set disabled(value: boolean) {\n      this._disabled = (value != null && value !== false) ? true : null;\n   }\n\n   // tslint:disable-next-line:no-use-before-declare\n   @ContentChildren(forwardRef(() => StRadioComponent))\n   _radios: QueryList<StRadioComponent> = null;\n\n   _value: any = null;\n   _selected: StRadioComponent = null;\n   _disabled: boolean = false;\n   _name: string = `st-radio-group-${_uniqueIdCounter++}`;\n\n   constructor(\n   ) { }\n\n   _controlValueAccessorChangeFn: (value: any) => void = (value) => { };\n\n   onTouched: () => any = () => { };\n\n   writeValue(value: any): void {\n      this.value = value;\n   }\n\n   registerOnChange(fn: (value: any) => void): void {\n      this._controlValueAccessorChangeFn = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n   }\n\n   emitChangeEvent(): void {\n      let event = new RadioChange();\n      event.source = this._selected;\n      event.value = this._value;\n      this.change.emit(event);\n   }\n\n   checkSelectRadio(): void {\n      if (this.selected && !this._selected.checked) {\n         this._selected.checked = true;\n      }\n   }\n\n   touch(): void {\n      if (this.onTouched) {\n         this.onTouched();\n      }\n   }\n\n   setDisabledState(isDisabled: boolean): void {\n      this.disabled = isDisabled;\n   }\n\n   private updateRadioName(): void {\n      if (this._radios) {\n         this._radios.forEach((radio) => {\n            radio.name = this.name;\n         });\n      }\n   }\n\n   private updatedSelectRadioFromValue(): void {\n      let isAlreadySelected = this._selected != null && this._selected.value === this._value;\n\n      if (this._radios != null && !isAlreadySelected) {\n         this._selected = null;\n         this._radios.forEach((radio) => {\n            radio.checked = this.value === radio.value;\n            if (radio.checked) {\n               this._selected = radio;\n            }\n         });\n      }\n   }\n}\n\n\nlet idUnique: number = 0;\n\n/**\n * @description {Component} [Radio]\n *\n * The radio component is used normally in a form acting as the standard html radio input but also user can use it out of a form like a template driven form.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-radio-group class =\"radio-inline\">\n *    <st-radio value=\"1\">Enabled</st-radio>\n *    <st-radio value=\"2\" [disabled]=\"true\">Disabled</st-radio>\n *    <st-radio value=\"2\" [checked]= \"true\" [disabled]=\"true\">Disabled checked</st-radio>\n * </st-radio-group>\n * ```\n *\n */\n@Component({\n   selector: 'st-radio',\n   templateUrl: './st-radio.component.html',\n   styleUrls: ['./st-radio.component.scss'],\n   host: {\n      '[class.sth-radio-checked]': 'checked',\n      '[attr.id]': 'id'\n   }\n})\nexport class StRadioComponent implements OnInit {\n\n   radioGroup: StRadioGroupComponent;\n   /** @Input {string} [id='st-radio-<unique id>'] Input Id value */\n   @Input() id: string = `st-radio-${idUnique++}`;\n   /** @Input {string} [qaTag='st-radio-<unique id>'] Id value for qa test */\n   @Input() qaTag: string = `st-radio-${idUnique++}`;\n   /** @Input {string} [name=''] Input name value */\n   @Input() name: string;\n   /** @Input {boolean} [checked=''] Boolean to check the radio button */\n   @Input()\n   get checked(): boolean {\n      return this._checked;\n   }\n\n   set checked(newCheckedState: boolean) {\n\n      if (this._checked !== newCheckedState) {\n         this._checked = newCheckedState;\n      }\n\n      if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n         this.radioGroup.selected = this;\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n         this.radioGroup.selected = null;\n      }\n\n      if (newCheckedState) {\n         this._radioDispatcher.notify(this.id, this.name);\n      }\n   }\n   /** @Input {boolean} [disabled=''] Boolean to disable the radio button */\n   @Input()\n   get disabled(): boolean {\n      return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n   }\n\n   set disabled(value: boolean) {\n      this._disabled = (value != null && value !== false) ? true : null;\n   }\n   /** @Input {boolean} [value=''] Value of the radio button */\n   @Input()\n   get value(): any {\n      return this._value;\n   }\n\n   set value(value: any) {\n      if (this._value !== value) {\n         this._value = value;\n\n         if (this.radioGroup != null) {\n            if (!this.checked) {\n               this.checked = this.radioGroup.value === value;\n            } else {\n               this.radioGroup.selected = null;\n            }\n         }\n      }\n   }\n\n   /** @Output {boolean} [change=''] Boolean emitted when radio button is changed */\n   @Output() change: EventEmitter<RadioChange> = new EventEmitter<RadioChange>();\n\n   get inputId(): string {\n      return `${this.id}-input`;\n   }\n\n   _value: any = null;\n   _checked: boolean;\n   _disabled: boolean;\n\n   constructor(\n      @Optional() radioGroup: StRadioGroupComponent,\n      private _radioDispatcher: SelectOneDispatcher\n   ) {\n\n      this.radioGroup = radioGroup;\n      _radioDispatcher.listen((id: string, name: string) => {\n         if (id !== this.id && name === this.name) {\n            this.checked = false;\n         }\n      });\n   }\n\n   ngOnInit(): void {\n      if (this.radioGroup && this.radioGroup.value) {\n         this.checked = this.radioGroup.value === this._value;\n      }\n\n      if (this.radioGroup) {\n         this.name = this.radioGroup.name;\n      }\n   }\n\n   onInputBlur(): void {\n      if (this.radioGroup) {\n         this.radioGroup.touch();\n      }\n   }\n\n   onInputClick(event: Event): void {\n      event.stopPropagation();\n   }\n\n   toggleRadio(event: Event): void {\n      event.stopPropagation();\n      let groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n\n      if (!this.disabled) {\n         this.checked = !this.checked;\n         this.emitChangeEvent();\n      }\n\n      if (this.radioGroup) {\n         this.radioGroup._controlValueAccessorChangeFn(this.value);\n\n         if (groupValueChanged) {\n            this.radioGroup.emitChangeEvent();\n         }\n      }\n   }\n\n   private emitChangeEvent(): void {\n      let event = new RadioChange();\n      event.source = this;\n      event.value = this._value;\n      this.change.emit(event);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StRadioComponent, StRadioGroupComponent } from './st-radio.component';\nimport { StLabelModule } from '../st-label/st-label.module';\n\n@NgModule({\n   imports: [\n      CommonModule, StLabelModule\n   ],\n   exports: [\n      StRadioComponent, StRadioGroupComponent\n   ],\n   declarations: [\n      StRadioComponent, StRadioGroupComponent\n   ],\n   providers: []\n})\nexport class StRadioModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StRadioMenuComponent } from './st-radio-menu.component';\nimport { StRadioModule } from '../st-radio/st-radio.module';\nimport { SelectOneDispatcher } from '../utils/unique-dispatcher';\n\n@NgModule({\n   imports: [CommonModule, StRadioModule],\n   declarations: [StRadioMenuComponent],\n   exports: [StRadioMenuComponent],\n   providers: [SelectOneDispatcher]\n})\nexport class StRadioMenuModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport enum StSidebarVisualMode { normal, complex }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { StSidebarItem } from './st-sidebar-item.interface';\nimport { StSidebarVisualMode } from './st-sidebar-visual-mode';\n\n/**\n * @description {Component} [Sidebar]\n *\n * The sidebar component has been designed to navigate through different sections of a web page.\n *\n *  @model\n *\n *   [Sidebar items] {./st-sidebar-item.interface.ts#StSidebarItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-sidebar class=\"sidebar\" title=\"Mesos Manager\" [items]=\"items\" qaTag=\"sidebar-demo\">\n * </st-sidebar>\n * ```\n *\n */\n@Component({\n   selector: 'st-sidebar',\n   templateUrl: './st-sidebar.component.html',\n   styleUrls: ['./st-sidebar.component.scss'],\n   providers: [],\n   host: { class: 'st-sidebar' },\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StSidebarComponent {\n   /** @Input {string} [title=''] Title displayed on the top of menu */\n   @Input() title: string = '';\n   /** @Input {StSidebarItem} [active=''] The current active item */\n   @Input() active: StSidebarItem;\n   /** @Input {StSidebarItem[]} [items=''] List of items displayed on the menu */\n   @Input() items: StSidebarItem[] = [];\n   /** @Input {boolean} [searchMode=''] Boolean to enable or disable the search mode. By default, it is disabled */\n   @Input() searchMode: boolean = false;\n   /** @Input {StSidebarVisualMode} [visualMode='StSidebarVisualMode.normal'] Visual mode used to display the item list */\n   @Input() visualMode: StSidebarVisualMode = StSidebarVisualMode.normal;\n   /** @Output {StSidebarItem} [change=''] Event emitted when the active item is changed. This emits the active item */\n   @Output() change: EventEmitter<StSidebarItem> = new EventEmitter<StSidebarItem>();\n   /** @Output {string} [search=''] Event emitted when search mode is enabled and user interacts with the search input */\n   @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n\n   onChange(item: StSidebarItem): void {\n      if (!this.active || this.active.id !== item.id) {\n         this.change.emit(item);\n      }\n   }\n\n   onSearch(searchData: any): void {\n      if (searchData) {\n         this.search.emit(searchData.text);\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, Input, EventEmitter, Output, OnInit } from '@angular/core';\n\nimport { StSidebarItem } from '../st-sidebar-item.interface';\nimport { StSidebarVisualMode } from '../st-sidebar-visual-mode';\n\n/**\n * @description {Component} [SidebarItemList]\n *\n * The sidebar item list component has been designed to display a list of items in a sidebar.\n *\n *  @model\n *\n *   [Sidebar items] {../st-sidebar-item.interface.ts#StSidebarItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-sidebar-item-list [items]=\"items\" (change)=\"onChange($event)\" [active]=\"active\" [deep]=\"deep\">\n * </st-sidebar-item-list>\n * ```\n *\n */\n@Component({\n   selector: 'st-sidebar-item-list',\n   templateUrl: './st-sidebar-item-list.component.html',\n   styleUrls: ['./st-sidebar-item-list.component.scss'],\n   providers: [],\n   host: { class: 'st-sidebar-item-list' },\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StSidebarItemListComponent implements OnInit {\n   /** @Input {StSidebarItem[]} [items=''] List of items displayed on the menu */\n   @Input() items: StSidebarItem[] = [];\n   /** @Input {number} [deep=0] Deep of the item list in the sidebar */\n   @Input() deep: number = 0;\n   /** @Input {StSidebarVisualMode} [visualMode='StSidebarVisualMode.normal'] Visual mode used to display the item list */\n   @Input() visualMode: StSidebarVisualMode = StSidebarVisualMode.normal;\n   /** @Output {StSidebarItem} [change=''] Event emitted when the active item is changed. This emit the active item */\n   @Output() change: EventEmitter<StSidebarItem> = new EventEmitter<StSidebarItem>();\n\n   public displayAsComplexModeValue: boolean = false;\n   public expanded: boolean[] = [];\n\n   private _active: StSidebarItem;\n\n   /** @Input {string} [active=''] The id of the current active item */\n   @Input() get active(): StSidebarItem {\n      return this._active;\n   }\n\n   ngOnInit(): void {\n      if (!this._active && this.items && this.items.length) {\n         this._active = this.items[0];\n      }\n\n      this._updateStatus();\n      this.displayAsComplexModeValue = this.displayAsComplexMode();\n   }\n\n   set active(active: StSidebarItem) {\n      if (!this._isActive(active)) {\n         this._active = active;\n         this._updateStatus();\n      }\n   }\n\n   getItemClasses(item: StSidebarItem, index: number): any {\n      let classes: any = {};\n      const active: boolean = this._isActive(item);\n      const activeChild: boolean = this.hasActiveChild(item);\n      classes[item.class] = item.class;\n      classes['item--complex'] = item.items && item.items.length;\n      classes['item--active'] = active;\n      classes['item--expanded'] = this.expanded[index];\n      classes['item--has-active'] = activeChild;\n      classes['item--disabled'] = item.disabled;\n\n      return classes;\n   }\n\n   onSelectItem(item: StSidebarItem, position: number): void {\n      if (!item.disabled) {\n         if (item.items && item.items.length) {\n            this.expanded[position] = !this.expanded[position];\n         } else {\n            if (!this._active || this._active.id !== item.id) {\n               this.change.emit(item);\n               this._closeRestOfItems(item.id);\n            }\n         }\n      }\n   }\n\n   hasActiveChild(item: StSidebarItem): boolean {\n      let found = false;\n      let i = 0;\n      if (item.items && item.items.length) {\n         while (!found && i < item.items.length) {\n            if (this._isActive(item.items[i])) {\n               found = true;\n            }\n            ++i;\n         }\n         if (!found && item.items && item.items.length) {\n            return this._hasActiveChildInChildren(item.items);\n         }\n      }\n      return found;\n   }\n\n   onChange(item: StSidebarItem): void {\n      if (!this._isActive(item)) {\n         this._closeRestOfItems(item.id);\n         this.change.emit(item);\n      }\n   }\n\n   displayAsComplexMode(): boolean {\n      return this.visualMode === StSidebarVisualMode.complex;\n   }\n\n   private _isActive(item: StSidebarItem): boolean {\n      return item && this._active && this._active.id === item.id;\n   }\n\n   private _updateStatus(): void {\n      this.items.forEach((item, i) => {\n         if (this.hasActiveChild(item)) {\n            this.expanded[i] = true;\n         }\n      });\n   }\n\n   private _hasActiveChildInChildren(items: StSidebarItem[]): boolean {\n      let found = false;\n      let i = 0;\n      while (!found && i < items.length) {\n         if (this.hasActiveChild(items[i])) {\n            found = true;\n         }\n         ++i;\n      }\n\n      return found;\n   }\n\n   private _closeRestOfItems(itemId: string): void {\n      this.expanded.forEach((open, i) => {\n         if (open && this.items[i].id !== itemId) {\n            this.expanded[i] = false;\n         }\n      });\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StSidebarComponent } from './st-sidebar.component';\nimport { StSidebarItemListComponent } from './st-sidebar-item-list/st-sidebar-item-list.component';\nimport { StSearchModule } from '../st-search/st-search.module';\n\n@NgModule({\n   imports: [CommonModule, StSearchModule],\n   declarations: [StSidebarComponent, StSidebarItemListComponent],\n   exports: [StSidebarComponent]\n})\n\nexport class StSidebarModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n/**\n * @description {Component} [Table Cell]\n *\n * This component is designed to be added to the table row component\n *\n * @example\n *\n * {html}\n *\n * ```\n *  <td st-table-cell st-table-row-content>\n *      <!-- CELL CONTENT WILL BE HERE -->\n *  </td>\n * ```\n *\n */\n\n@Component({\n   selector: '[st-table-cell]',\n   templateUrl: './st-table-cell.component.html',\n   styleUrls: ['./st-table-cell.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StTableCellComponent {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy, Component, HostListener, Input, OnInit, ViewChild, HostBinding,\n   ElementRef, AfterViewInit\n} from '@angular/core';\n\n/**\n * @description {Component} [Table Row]\n *\n * This component is designed to be added to the table component\n *\n * @example\n *\n * {html}\n *\n * ```\n *  <tr st-table-row [selected] =\"true\" [standUpSelected] = \"false\">\n *      <!-- CELL LIST WILL BE HERE -->\n *  </tr>\n * ```\n *\n */\n\n@Component({\n   selector: '[st-table-row]',\n   templateUrl: './st-table-row.component.html',\n   styleUrls: ['./st-table-row.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StTableRowComponent implements AfterViewInit {\n   /** @Input {boolean} [selected=''] It indicates if row is selected or not */\n   @Input() selected: boolean;\n   /** @Input {boolean} [standUpSelected=true] It indicates if when row is selected, it has to be displayed stood up */\n   @Input() standUpSelected: boolean = true;\n\n   @ViewChild('hoverMenu', {static: false}) hoverMenu: any;\n\n   @HostBinding('class.st-table-row') rootClass: boolean = true;\n\n   @HostBinding('class.selected')\n   get hasSelectedClass(): boolean {\n      return this.selected && this.standUpSelected;\n   }\n\n\n   public showHoverMenu: boolean = false;\n\n   constructor(private elementRef: ElementRef) {\n\n   }\n\n   ngAfterViewInit(): void {\n      if (this.hoverMenu && this.hoverMenu.nativeElement.children.length === 0) {\n         this.elementRef.nativeElement.removeChild(this.hoverMenu.nativeElement);\n      }\n   }\n\n   @HostListener('mouseover') onShowHoverMenu(): void {\n      this.showHoverMenu = true;\n   }\n\n   @HostListener('mouseout') onHideHoverMenu(): void {\n      this.showHoverMenu = false;\n   }\n}\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport class StTableFilterIconClasses {\n   selected: string;\n   enabled: string;\n\n   constructor() {\n      this.selected = 'icon-facets-2';\n      this.enabled = 'icon-arrow4_down';\n   }\n}\n\nexport class StTableIconClasses {\n   filter: StTableFilterIconClasses;\n   sort: {\n      asc: string;\n      desc: string;\n   };\n\n   constructor() {\n      this.filter = new StTableFilterIconClasses();\n      this.sort = {\n         asc: 'icon-arrow-up',\n         desc: 'icon-arrow-down'\n      };\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { get as _get } from 'lodash';\n\nimport { StTableHeader } from '../../shared/table-header.interface';\nimport { StTableFilterIconClasses } from '../../st-table.interface';\n\n@Component({\n   selector: 'st-popover-filter',\n   templateUrl: './st-popover-filter.component.html',\n   styleUrls: ['./st-popover-filter.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StPopoverFilterComponent {\n\n   /** @Input {StTableHeader} [field=''] field displayed in the header */\n   @Input() field: StTableHeader;\n\n   /** @Input {number} [index=''] index of field displayed in the header */\n   @Input() index: number;\n\n   /** @Input {boolean} [filtered=''] Status filter by column, needed with templateContentFilter to change filtered icon */\n   @Input() filtered: boolean;\n\n   /** @Input {TemplateRef} [templateContentFilter=undefined] Reference to paint a custom template inside popover content */\n   @Input() templateContentFilter?: TemplateRef<any>;\n\n   /** @Input {{StTableFilterIconClasses} [iconClasses=''] List of icon classes */\n   @Input() iconClasses?: StTableFilterIconClasses = new StTableFilterIconClasses();\n\n   /** @Output [filter=''] Event emitted  when user interacts with filter button without a custom template */\n   @Output() filter: EventEmitter<any> = new EventEmitter();\n\n   public openToLeft: boolean;\n   public offsetX: number;\n\n   private _hidden: boolean;\n\n   constructor(private _elementRef: ElementRef) {\n\n   }\n\n   /** @Input {boolean} [hidden=''] field to show popover */\n   @Input()\n   get hidden(): boolean {\n      return this._hidden;\n   }\n\n   set hidden(hidden: boolean) {\n      if (!hidden) {\n         this.offsetX = (this._elementRef.nativeElement.offsetLeft - this._elementRef.nativeElement.offsetWidth)  * -1;\n      }\n      this._hidden = hidden;\n   }\n\n   public getConfigField(field: StTableHeader, config: string): any {\n      return _get(field, `filters.${config}`);\n   }\n\n   public getFilteredIcon(): string {\n      return this.filtered ? this.iconClasses.selected : this.iconClasses.enabled;\n   }\n\n   public onChangeFilter(indexFilter: number, event: Event): void {\n      this.field.filters.filterConfig[indexFilter].selected = (<any>event).checked;\n   }\n\n   public onFilter(): void {\n      this.filter.emit();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nexport enum ORDER_TYPE { ASC = 'asc', DESC = 'desc' }\n\nexport class Order {\n   constructor(\n      public orderBy: string,\n      public type: ORDER_TYPE\n   ) { }\n}\n\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, TemplateRef, HostBinding, Host } from '@angular/core';\n\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\nimport { Order, ORDER_TYPE } from './shared/order';\nimport { StTableHeader } from './shared/table-header.interface';\nimport { cloneDeep as _cloneDeep, get as _get } from 'lodash';\nimport { StTableIconClasses } from './st-table.interface';\n\n/**\n * @description {Component} [Table]\n *\n * The table component has been designed to display any content like images, text, graphs, etc.\n *\n * * @model\n *\n *   [StTableHeader] {./shared/table-header.interface.ts#StTableHeader}\n *   [StDynamicTableHeader] {./shared/table-header.interface.ts#StFilterElement}\n *   [StFilterHeader] {./shared/table-header.interface.ts#StFilterHeader}\n *   [StTableFilterIconClasses] {./st-table.interface.ts#StTableFilterIconClasses}\n *   [StTableIconClasses] {./st-table.interface.ts#StTableIconClasses}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-table [fields]=\"fields\" [sortable]=\"true\" (changeOrder)=\"yourFunctionToOrder($event)\">\n * <tr st-table-row *ngFor=\"let userData of data\">\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.id}}</label>\n * </td>\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.name}}</label>\n * </td>\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.lastName}}</label>\n * </td>\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.phone}}</label>\n * </td>\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.company}}</label>\n * </td>\n * <td st-table-cell st-table-row-content>\n *    <label >{{userData.completedProfile}}</label>\n * </td>\n * <td st-table-row-hover>\n *    <i class=\"icon icon-arrow2_right\"></i>\n * </td>\n * </tr>\n * </st-table>\n * ```\n *\n */\n@StEgeo()\n@Component({\n   selector: 'st-table',\n   templateUrl: './st-table.component.html',\n   styleUrls: ['./st-table.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StTableComponent implements OnInit {\n   /** @Input {StTableHeader[]} [fields=''] List of field displayed in the header */\n   @Input() @StRequired() fields: StTableHeader[];\n   /** @Input {string} [qaTag=''] Prefix used to generate the id values for qa tests */\n   @Input() qaTag: string;\n   /** @Input {boolean} [header=true] Boolean to show or hide the header */\n   @Input() header: boolean = true;\n   /**\n    * @Input {boolean} [sortable=true] Boolean to make sortable the table, To enable sorting of columns use\n    * the new \"sortable\" field inside stTableHeader model\n    */\n   @Input() sortable: boolean = true;\n   /**\n    * @Input {boolean} [filterable=true] Boolean to make filterable the table, To enable filtering of columns use\n    * the new \"filterable\" field inside stTableHeader model (necesary define filterConfig).\n    */\n   @Input() filterable: boolean = false;\n   /**\n    * @Input {boolean} [selectableAll=false] Boolean to show or hide a checkbox in the header to select or\n    *  deselect all rows\n    */\n   @Input() selectableAll: boolean = false;\n\n   /** @Input {Order} [currentOrder=''] It specifies what is the current order applied to the table */\n   @Input() currentOrder: Order;\n\n   /** @Input {TemplateRef} [templateContentFilter=undefined] Reference to paint a custom template inside popover content */\n   @Input() templateContentFilter?: TemplateRef<any>;\n   /** @Input {boolean[]} [statusFilter=''] List of status filter by column, needed with templateContentFilter */\n   @Input() statusFilter?: boolean[];\n   /** @Input {StTableIconClasses} [iconClasses=''] List of icon classes */\n   @Input() iconClasses?: StTableIconClasses = new StTableIconClasses();\n\n   /** @Input {boolean} [fixedHeader=false] Boolean to fix the table header */\n   @Input()\n   @HostBinding('class.st-custom-scrollbar')\n   @HostBinding('class.fixed-header')\n   get fixedHeader(): boolean {\n      return this._fixedHeader;\n   }\n   set fixedHeader(newValue: boolean) {\n      this._fixedHeader = newValue;\n   }\n\n\n   /** @Input {boolean} [stickyHoverMenu=false] Boolean to fix hover menu always visible */\n   @Input()\n   @HostBinding('class.sticky-hover-menu')\n   get stickyHoverMenu(): boolean {\n      return this._stickyHoverMenu;\n   }\n   set stickyHoverMenu(newValue: boolean) {\n      this._stickyHoverMenu = newValue;\n   }\n\n   /** @Input {string} [customClasses=] Classes for adding styles to table tag from outside. These can be: separated-rows */\n   @Input()\n   get customClasses(): string {\n      return this._customClasses;\n   }\n\n   set customClasses(newValue: string) {\n      this.tableClasses[this._customClasses] = undefined;\n      this._customClasses = newValue;\n      this.tableClasses[this._customClasses] = this._customClasses;\n   }\n\n   /** @Input {boolean} [selectedAll=false] It specifies if all rows are selected */\n   @Input()\n   get selectedAll(): boolean {\n      return this._selectedAll;\n   }\n\n   set selectedAll(newValue: boolean) {\n      this._selectedAll = newValue;\n      this._cd.markForCheck();\n   }\n\n   /** @Input {boolean} [hasHoverMenu=false] It specifies if a menu has to be displayed when user puts the mouse over\n    * the rows. Remember to add a cell with the selector st-table-row-hover for adding content to the menu\n    */\n   @Input()\n   get hasHoverMenu(): boolean {\n      return this._hasHoverMenu;\n   }\n\n   set hasHoverMenu(newValue: boolean) {\n      this._hasHoverMenu = newValue;\n   }\n\n   /** @Output {Order} [changeOrder=''] Event emitted with the new order which has to be applied to the table rows */\n   @Output() changeOrder: EventEmitter<Order> = new EventEmitter();\n   /** @Output {boolean} [selectAll=''] Event emitted when user interacts with the checkbox to select or deselect\n    * all rows\n    */\n   @Output() selectAll: EventEmitter<boolean> = new EventEmitter();\n\n   /** @Output {string} [clickFilter=] Event emitted when clicking on filters icon  */\n   @Output() clickFilter: EventEmitter<StTableHeader> = new EventEmitter();\n\n   /** @Output {StTableHeader[]} [selectFilters=''] Event emitted  when user interacts with filter button without a custom template */\n   @Output() selectFilters: EventEmitter<StTableHeader[]> = new EventEmitter();\n\n   public tableClasses: any = {};\n   public orderTypes: any = ORDER_TYPE;\n   public visibleFilter: number = -1;\n\n   private _fixedHeader: boolean = false;\n   private _stickyHoverMenu: boolean = false;\n   private _selectedAll: boolean;\n   private _hasHoverMenu: boolean = false;\n   private _customClasses: string;\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      if (this.filterable && !this.statusFilter) {\n         this.statusFilter = new Array(this.fields.length);\n         this.statusFilter.fill(false);\n      }\n   }\n\n   public getHeaderItemClass(field: StTableHeader): string {\n      let isOrderAsc = this.isSortedByFieldAndDirection(field, this.orderTypes.ASC);\n      return isOrderAsc ? this.iconClasses.sort.asc : this.iconClasses.sort.desc;\n   }\n\n   public isSortable(field: StTableHeader): boolean {\n      return field && field.sortable !== undefined ? field.sortable : this.sortable;\n   }\n\n   public isSortedByField(field: StTableHeader): boolean {\n      return this.currentOrder && this.currentOrder.orderBy === field.id;\n   }\n\n   public isFilterable(field: StTableHeader): boolean {\n      return this.filterable && (_get(field, 'filters.filterConfig')) ||\n            (this.templateContentFilter && _get(field, 'filters')) ||\n            _get(field, 'filters.templateRef');\n   }\n\n   public onClickPopover(event: MouseEvent, index: number, field: StTableHeader): void {\n      event.stopPropagation();\n      if (this.visibleFilter === index) {\n         this.visibleFilter = -1;\n      } else {\n         this.visibleFilter = index;\n      }\n      this.clickFilter.emit(field);\n      this._cd.markForCheck();\n   }\n\n   public onHidePopover(): void {\n      this.visibleFilter = -1;\n      this._cd.markForCheck();\n   }\n\n   public onChangeOrder(field: StTableHeader): void {\n      let _currentOrder: Order;\n      if (field && this.isSortable(field)) {\n         if (this.currentOrder && this.currentOrder.orderBy === field.id) {\n            _currentOrder = this.changeOrderDirection();\n         } else {\n            _currentOrder = new Order(field.id, ORDER_TYPE.ASC);\n         }\n         this.changeOrder.emit(_currentOrder);\n      }\n   }\n\n   public onSelectAll(event: any): void {\n      this.selectAll.emit(event.checked);\n   }\n\n   public onSelectedFilters(event: Event): void {\n      let selectedFilters = _cloneDeep(this.fields);\n      selectedFilters = selectedFilters.filter((field) => {\n         if (_get(field, 'filters.filterConfig')) {\n            field.filters.filterConfig = field.filters.filterConfig.filter((conf) => conf.selected);\n            if (field.filters.filterConfig.length > 0) {\n               return field;\n            }\n         }\n      });\n      this.selectFilters.emit(selectedFilters);\n   }\n\n   private changeOrderDirection(): Order {\n      let newDirection = this.currentOrder.type === ORDER_TYPE.ASC ? ORDER_TYPE.DESC : ORDER_TYPE.ASC;\n      return new Order(this.currentOrder.orderBy, newDirection);\n   }\n\n   private isSortedByFieldAndDirection(field: StTableHeader, orderType: ORDER_TYPE): boolean {\n      return this.isSortedByField(field) && this.currentOrder.type === orderType;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StTableCellComponent } from './shared/st-table-cell/st-table-cell.component';\nimport { StTableRowComponent } from './shared/st-table-row/st-table-row.component';\nimport { StPopoverFilterComponent } from './shared/st-popover-filter/st-popover-filter.component';\nimport { StTableComponent } from './st-table.component';\nimport { StCheckboxModule } from '../st-checkbox/st-checkbox.module';\nimport { StPopOverModule } from '../st-pop-over/st-pop-over.module';\nimport { StClickOutsideModule } from '../directives/st-click-outside/st-click-outside.module';\n\n@NgModule({\n   imports: [CommonModule, StCheckboxModule, StPopOverModule, StClickOutsideModule],\n   declarations: [StPopoverFilterComponent, StTableCellComponent, StTableComponent, StTableRowComponent],\n   exports: [StPopoverFilterComponent, StTableCellComponent, StTableComponent, StTableRowComponent]\n})\n\nexport class StTableModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   forwardRef,\n   HostBinding,\n   Input,\n   OnChanges,\n   OnInit,\n   SimpleChanges,\n   ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\nimport { StDropDownMenuGroup, StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\n\n/**\n * @description {Component} Tag Input\n *\n * This component is a text input box that automatically creates tags out of a typed text.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-tag-input\n *    class=\"st-form-field\"\n *    name=\"tag-input-reactive\"\n *    formControlName=\"tag-input-reactive\"\n *    [autocompleteList]=\"filteredlist\"\n *    [withAutocomplete]=\"true\"\n *    [disabled]=\"disabled\"\n *    [label]=\"'Tag Input with Reactive Form'\"\n *    [id]=\"'tag-input-reactive'\"\n *    [placeholder]=\"'Add tags separated by commas'\"\n *    [tooltip]=\"'This is a Tag Input component tooltip'\"\n *    [forbiddenValues]=\"['test']\"\n *    (input)=\"onFilterList($event)\">\n * </st-tag-input>\n * <st-tag-input\n *    class=\"st-form-field\"\n *    name=\"tag-input-template-driven\"\n *    [(ngModel)]=\"tags.templateDriven\"\n *    [autocompleteList]=\"filteredlist\"\n *    [withAutocomplete]=\"true\"\n *    [disabled]=\"disabled\"\n *    [label]=\"'Tag Input with Template Driven Form'\"\n *    [id]=\"'tag-input-template-driven'\"\n *    [placeholder]=\"'Add tags separated by commas'\"\n *    [tooltip]=\"'This is a Tag Input component tooltip'\"\n *    [regularExpression]=\"pattern\"\n *    (input)=\"onFilterList($event)\">\n * </st-tag-input>\n * ```\n */\n@Component({\n   selector: 'st-tag-input',\n   templateUrl: './st-tag-input.component.html',\n   styleUrls: ['./st-tag-input.component.scss'],\n   host: {\n      'class': 'st-tag-input'\n   },\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StTagInputComponent), multi: true },\n      { provide: NG_VALIDATORS, useExisting: forwardRef(() => StTagInputComponent), multi: true }],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StTagInputComponent implements ControlValueAccessor, Validator, OnInit, OnChanges {\n\n   /** @input {string | null} [label=null] Label to show over the input. It is empty by default */\n   @Input() label: string | null = null;\n   /** @input {string | null} [tooltip=null] The tooltip to show  over the label. It is empty by default */\n   @Input() tooltip: string | null = null;\n   /** @input {string | null} [placeholder=null] The text that appears as placeholder of the input. It is empty by default */\n   @Input() placeholder: string | null = null;\n   /** @input {string | null} [errorMessage=null] Error message to show. It is empty by default */\n   @Input() errorMessage: string | null = null;\n   /** @input {string | null} [type=null] Type of the items */\n   @Input() type: string | null = 'text';\n\n   /** @input {boolean} [withAutocomplete=false] Enable autocomplete feature. It is false by default */\n   @Input() withAutocomplete: boolean = false;\n   /** @input {(StDropDownMenuItem | StDropDownMenuGroup)[]} [autocompleteList=Array()] List to be used for autocomplete feature. It is empty by default */\n   @Input() autocompleteList: (StDropDownMenuItem | StDropDownMenuGroup)[] = [];\n   /** @input {boolean} [charsToShowAutocompleteList=Array()] List to be used for autocomplete feature. It is empty by default */\n   @Input() charsToShowAutocompleteList: number = 1;\n   /** @input {boolean} [allowFreeText=true] Boolean to allow user to type a free text or not */\n   @Input() allowFreeText: boolean = true;\n   /** @input {string} [infoMessage=] Message used to inform user about what values he has to introduce */\n   @Input() infoMessage: string;\n\n   /** @input {string[]} [forbiddenValues=Array()] A list of values that user can not type and if he types one of them,\n    * tag input will be invalid. It is empty by default\n    */\n   @Input() forbiddenValues: string[] = [];\n   /** @input {string} [regularExpression=] Regular expression to validate values. It is null by default */\n   @Input() regularExpression: any | null = null;\n   /** @Input {boolean} [forceValidations=false] If you specify it to 'true', the tag input checks the errors before being modified by user */\n   @Input() forceValidations: boolean = false;\n\n   @ViewChild('newElement', {static: true}) newElementInput: ElementRef;\n   @ViewChild('inputElement', {static: false}) inputElement: ElementRef;\n\n   public expandedMenu: boolean = false;\n   public items: any[] = [];\n   public innerInputContent: string = '';\n   public isPristine: boolean = true;\n   public showErrorValue: boolean = false;\n\n   private _focus: boolean = false;\n   private _isDisabled: boolean = false;\n   private _newElementInput: HTMLInputElement | null = null;\n   private _selected: number | null = null;\n   private _regularExp: RegExp;\n\n   onChange = (_: any) => {\n   }\n\n   onTouched = () => {\n   }\n\n   constructor(private _selectElement: ElementRef,\n               private _cd: ChangeDetectorRef) {\n   }\n\n   /** @input {boolean} [disabled=false] Disable the component. It is false by default */\n   @Input()\n   get disabled(): boolean {\n      return this._isDisabled;\n   }\n\n   set disabled(value: boolean) {\n      this._isDisabled = value;\n   }\n\n   get hasLabel(): boolean {\n      return this.label !== null && this.label.length > 0;\n   }\n\n   get hasFocus(): boolean {\n      return this._focus;\n   }\n\n   get hasPlaceholder(): boolean {\n      return !this._focus && !this.items.length && this.placeholder && this.placeholder.length > 0;\n   }\n\n   @HostBinding('class.st-tag-input--autocomplete')\n   get hasAutocomplete(): boolean {\n      return this.expandedMenu && this.autocompleteList && this.autocompleteList.length > 0;\n   }\n\n   get disableValue(): string | null {\n      return this._isDisabled === true ? '' : null;\n   }\n\n   get isValidInput(): boolean {\n      const isForbidden = this.forbiddenValues.length && this.forbiddenValues.indexOf(this.innerInputContent) > -1;\n      const isDuplicated = this.items.indexOf(this.innerInputContent) !== -1;\n      const matchedPattern = this.regularExpression ? this._regularExp.test(this.innerInputContent) : true;\n      return this.innerInputContent.length ? !isForbidden && !isDuplicated && matchedPattern : true;\n   }\n\n   get tagSelected(): number | null {\n      return this._selected;\n   }\n\n   get selectId(): string | null {\n      const select: HTMLElement = this._selectElement.nativeElement;\n      return select.getAttribute('id') !== null ? select.id : null;\n   }\n\n   get inputId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-input` : null;\n   }\n\n   get labelId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-label` : null;\n   }\n\n   get tagId(): string | null {\n      return this.selectId !== null ? `${this.selectId}-tag-` : null;\n   }\n\n   get listId(): string {\n      return this.selectId !== null ? `${this.selectId}-autocomplete` : null;\n   }\n\n   ngOnInit(): void {\n      this._newElementInput = this.newElementInput.nativeElement;\n      switch (this.type) {\n         case 'number': {\n            this.regularExpression = '^\\\\d+(\\\\.\\\\d+)?$';\n            break;\n         }\n         case 'integer': {\n            this.regularExpression = '^\\\\d+$';\n            break;\n         }\n         default: {\n            break;\n         }\n      }\n\n      this._regularExp = new RegExp(this.regularExpression);\n      this.showErrorValue = this.showError();\n      this._cd.markForCheck();\n   }\n\n\n   ngOnChanges(changes: SimpleChanges): void {\n      this.checkAutocompleteMenuChange(changes);\n      if (this.forceValidations) {\n         this.writeValue(this.items);\n      }\n      this._cd.markForCheck();\n   }\n\n   writeValue(data: any): void {\n      if (data && Array.isArray(data) && data.length) {\n         this.items = [];\n         for (const value of data) {\n            const parsedValue = this._getParsedTag(value);\n            if (parsedValue || !isNaN(parsedValue)) {\n               this.items.push(parsedValue);\n            }\n         }\n         this.onChange(this.items);\n         this.isPristine = false;\n         this._cd.markForCheck();\n      }\n   }\n\n   setDisabledState(disabled: boolean): void {\n      this.disabled = disabled;\n      this._cd.markForCheck();\n   }\n\n   validate(control: FormControl): any {\n   }\n\n   // Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n   }\n\n   // Input actions\n   onInputText(text: string): void {\n      this.innerInputContent = text;\n      this.showAutocompleteMenu();\n   }\n\n   onInputFocusIn(event: Event): void {\n      if (!this._isDisabled) {\n         this._focus = true;\n         this._newElementInput.focus();\n         this._forceResetAutoCompleteList();\n         this.showAutocompleteMenu();\n      }\n      event.stopPropagation();\n   }\n\n   onInputFocusOut(event: Event): void {\n      if (!this.expandedMenu) {\n         this._focus = false;\n         this.addCurrentTag();\n      }\n      event.stopPropagation();\n   }\n\n   onInputKeyDown(event: any): void {\n      switch (event.keyCode) {\n         case 188: // Comma\n         case 13: // Enter\n            if (this.innerInputContent.length && this.isValidInput) {\n               this.addTag(this.innerInputContent);\n               this._forceResetAutoCompleteList();\n            }\n            event.preventDefault();\n            break;\n         case 9: // Tab\n            if (this.innerInputContent.length && this.isValidInput) {\n               this.addTag(this.innerInputContent);\n               event.preventDefault();\n            } else if (this.innerInputContent.length) {\n               this.clearInput();\n            }\n            break;\n         case 46: // Delete\n            if (this.innerInputContent.length) {\n               this.clearInput();\n            } else if (this.items.length) {\n               event.target.previousElementSibling.focus();\n            }\n            break;\n         case 8: // Backspace\n         case 37: // Left\n            if (this.items.length && !this.innerInputContent.length) {\n               event.target.previousElementSibling.focus();\n            }\n            break;\n         default:\n            break;\n      }\n   }\n\n   // Tag actions\n   onTagKeyDown(event: any, index: number): void {\n      switch (event.keyCode) {\n         case 8: // Backspace\n         case 46: // Delete\n            if (this._selected !== null) {\n               this.deleteTag(this._selected);\n               this._selected = null;\n               this._newElementInput.focus();\n            }\n            break;\n         case 37: // Left\n            if (this._selected > 0) {\n               event.target.previousElementSibling.focus();\n            }\n            break;\n         case 39: // Right\n            if (this._selected < this.items.length) {\n               event.target.nextElementSibling.focus();\n            }\n            break;\n         default:\n            break;\n      }\n   }\n\n   onTagFocusIn(event: Event, index: number): void {\n      if (!this._isDisabled) {\n         this._focus = true;\n         this.addCurrentTag();\n         this.expandedMenu = false;\n         this._selected = index;\n      }\n   }\n\n   onTagFocusOut(event: Event, index: number): void {\n      this._focus = false;\n      this._selected = null;\n   }\n\n   onTagClick(event: Event, index: number): void {\n      event.stopPropagation();\n      event.preventDefault();\n   }\n\n   // Dropdown actions\n   onListSelect(data: StDropDownMenuItem): void {\n      this._focus = false;\n      if (data.value.length && this.items.indexOf(data.value) === -1) {\n         this.addTag(data.value);\n      } else {\n         this.clearInput();\n      }\n   }\n\n   onClickOutside(event: Event): void {\n      if (this.expandedMenu) {\n         this._focus = false;\n         this.addCurrentTag();\n      }\n   }\n\n   showError(): boolean {\n      return typeof this.errorMessage === 'string' && (!this.isPristine || this.forceValidations) && !this._focus && !this.disabled;\n   }\n\n\n   deleteTag(index: number): void {\n      this.items.splice(index, 1);\n      this.onChange(this.items);\n\n      this._newElementInput.value = '';\n      this.innerInputContent = '';\n      this._newElementInput.dispatchEvent(new Event('input'));\n   }\n\n   private addTag(tag: string): void {\n      const parsedValue = this._getParsedTag(tag);\n      if (parsedValue || !isNaN(parsedValue)) {\n         this.items.push(parsedValue);\n         this.clearInput();\n         this.onChange(this.items);\n         this.isPristine = false;\n      }\n      this.showErrorValue = this.showError();\n   }\n\n   private addCurrentTag(): void {\n      if (this.innerInputContent.length && this.isValidInput) {\n         this.addTag(this.innerInputContent);\n      } else {\n         this.clearInput();\n      }\n   }\n\n   private clearInput(): void {\n      if (this.expandedMenu) {\n         this.expandedMenu = false;\n      }\n      this.innerInputContent = '';\n      this._newElementInput.innerText = '';\n   }\n\n   private showAutocompleteMenu(): void {\n      if (this.withAutocomplete && !this.expandedMenu && this.charsToShowAutocompleteList <= this.innerInputContent.length) {\n         this.expandedMenu = true;\n      }\n      if (this.innerInputContent === '' && this.charsToShowAutocompleteList) {\n         this.expandedMenu = false;\n      }\n      this._cd.markForCheck();\n   }\n\n   private checkAutocompleteMenuChange(changes: SimpleChanges): void {\n      if (changes && changes.autocompleteList) {\n         this._cd.markForCheck();\n      }\n   }\n\n   private _getParsedTag(tag: string): any {\n      switch (this.type) {\n         case 'number': {\n            return parseFloat(tag);\n         }\n         case 'integer': {\n            return parseInt(tag, 0);\n         }\n         default:\n            return tag;\n      }\n   }\n\n   private _forceResetAutoCompleteList(): void {\n      if (!this.charsToShowAutocompleteList && this.withAutocomplete) {\n         this._newElementInput.innerText = '';\n         const event: any = new Event('input', {\n            'bubbles': true\n         });\n         event.data = '';\n         this._newElementInput.dispatchEvent(event);\n      }\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StLabelModule } from '../st-label/st-label.module';\nimport { StTagInputComponent } from './st-tag-input.component';\nimport { StClickOutsideModule } from '../directives/st-click-outside/st-click-outside.module';\n\n@NgModule({\n   imports: [CommonModule, FormsModule, ReactiveFormsModule, StLabelModule, StDropdownMenuModule, StClickOutsideModule],\n   declarations: [StTagInputComponent],\n   exports: [StTagInputComponent]\n})\nexport class StTagInputModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StToggleButton, StParsedToggleButton } from './st-toggle-buttons.interface';\n\n@Component({\n   selector: 'st-toggle-buttons',\n   templateUrl: './st-toggle-buttons.component.html',\n   styleUrls: ['./st-toggle-buttons.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StToggleButtonsComponent {\n\n   @Input() description: string;\n   @Input() qaTag: string;\n   @Output() select: EventEmitter<StToggleButton> = new EventEmitter<StToggleButton>();\n\n   public parsedTabs: StParsedToggleButton[];\n\n   @Input() set tabs(tabs: StToggleButton[]) {\n      this.parsedTabs = tabs\n      .map(\n         ({ label, ...props }) => ({ ...props, label, trimLabel: label.replace(/[^a-zA-Z0-9]/g, '') })\n      );\n   }\n\n   onClick(selectedTab: StToggleButton): void {\n      for (let tab of this.parsedTabs) {\n         tab.active = false;\n      }\n      selectedTab.active = true;\n      this.select.emit(selectedTab);\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StToggleButtonsComponent } from './st-toggle-buttons.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StToggleButtonsComponent],\n   exports: [StToggleButtonsComponent]\n})\nexport class StToggleButtonsModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { StEgeo, StRequired } from '../../decorators/require-decorators';\nimport { StTwoListSelectionElement, StTwoListSelectExtraLabelAction } from '../st-two-list-selection.model';\n\nimport { StDropDownMenuItem, StDropDownVisualMode } from '../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StPopPlacement } from '../../st-pop/st-pop.model';\n\n@Component({\n   selector: 'list-item',\n   templateUrl: './list-item.component.html',\n   styleUrls: ['./list-item.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n@StEgeo()\nexport class ListItemComponent {\n\n   @Input() @StRequired() item: StTwoListSelectionElement;\n   @Input() @StRequired() qaTag: string;\n   @Input() editable: boolean = false;\n   @Input() mode: 'compact' | 'normal' = 'normal';\n   @Input() disabled: boolean = false;\n   @Input() menuOptionList?: StDropDownMenuItem[];\n\n   @Output() selectItem: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectItemNonEditable: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectExtraLabel: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n\n\n   public hoverRow: boolean = false;\n   public menuVisualMode: StDropDownVisualMode = StDropDownVisualMode.MENU_LIST;\n   public placement: StPopPlacement = StPopPlacement.BOTTOM_END;\n   public showActionList: boolean;\n\n   constructor() { }\n\n   get itemName(): string {\n      return this.item && this.item.name !== undefined && this.item.name !== null ? this.item.name : '';\n   }\n\n   get itemQaTag(): string {\n      return this.qaTag + '-item-' + this.item.id;\n   }\n\n   get checkQaTag(): string {\n      return this.qaTag + '-check-' + this.item.id;\n   }\n\n   get selected(): boolean {\n      return this.item.selected ? true : false;\n   }\n\n   get itemMode(): string {\n      let style: string = this.getModeStyle();\n      style += this.selected ? ' sth-two-list-selection__selected_item' : '';\n      return style;\n   }\n\n   getModeStyle(): string {\n      return this.mode === 'normal' ? 'item-normal sth-two-list-selection__item-normal' :\n         'item-compact sth-two-list-selection__item-compact';\n   }\n\n   emitOnClickNonEditable(event: Event): void {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      this.selectItemNonEditable.emit(this.item);\n   }\n\n   emitOnSelect(event: Event): void {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      if (!this.item.disabled) {\n         this.selectItem.emit(this.item);\n      }\n   }\n\n   mouseHoverRow(): void {\n      this.hoverRow = true;\n   }\n\n   mouseLeftRow(): void {\n      this.hoverRow = false;\n   }\n\n   onCloseActionMenu(): void {\n      if (this.showActionList) {\n         this.showActionList = false;\n      }\n   }\n\n   onChangeOption(option: StDropDownMenuItem): void {\n      this.emitOnClickNonEditable(new CustomEvent('selectItem', { bubbles: true, cancelable: true, detail: Object.assign(this.item, option)}));\n   }\n\n   onEllipsisClick(): void {\n      this.showActionList = !this.showActionList;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { StDropDownMenuItem } from '../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StRequired } from '../../decorators/require-decorators';\nimport { StTwoListSelectionElement, StTwoListSelectExtraLabelAction } from '../st-two-list-selection.model';\n\n@Component({\n   selector: 'list-selection',\n   templateUrl: './list-selection.component.html',\n   styleUrls: ['./list-selection.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListSelectionComponent {\n\n   @Input() @StRequired() list: StTwoListSelectionElement[];\n   @Input() editable: boolean = false;\n   @Input() @StRequired() title: string;\n   @Input() subtitle?: string;\n   @Input() @StRequired() searchPlaceholder: string;\n   @Input() @StRequired() qaTag: string;\n   @Input() important: boolean = false;\n   @Input() hasAllList?: boolean = false;\n   @Input() hasSearch: boolean = true;\n   @Input() isLoading?: boolean = false;\n   @Input() itemAll?: StTwoListSelectionElement;\n   @Input() menuOptionList?: StDropDownMenuItem[];\n   @Input() orderOptions: StDropDownMenuItem[] = [];\n   @Input() orderPlaceholder?: string;\n   @Input() mode: 'compact' | 'normal' = 'normal';\n   @Input() showSearchNumber?: number;\n   @Input() fetchingDataText: string;\n\n   @Output() scrollBottom: EventEmitter<any> = new EventEmitter<any>();\n   @Output() selectItem: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectItemNonEditable: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectExtraLabel: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() search: EventEmitter<string> = new EventEmitter<string>();\n   @Output() changeOrder: EventEmitter<any> = new EventEmitter<any>();\n\n   scrollItems: StTwoListSelectionElement[] = [];\n\n   get searchQaTag(): string {\n      return this.qaTag + '-search';\n   }\n\n   get listCheckAllQaTag(): string {\n      return this.qaTag + '-all-checkbox';\n   }\n\n   get listQaTag(): string {\n      return this.qaTag + '-list';\n   }\n\n   get hasOrder(): boolean {\n      return this.orderOptions && this.orderOptions.length > 0;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectorRef, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StDropDownMenuItem } from '../../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StEgeo, StRequired } from '../../decorators/require-decorators';\nimport { StTwoListSelectionElement, StTwoListSelectExtraLabelAction } from '../st-two-list-selection.model';\n\n@Component({\n   selector: 'list-scroll',\n   templateUrl: './list-scroll.component.html',\n   styleUrls: ['./list-scroll.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListScrollComponent implements OnInit {\n\n   @Input() @StRequired() list: StTwoListSelectionElement[];\n   @Input() editable: boolean = false;\n   @Input() fetchingDataText: string;\n   @Input() hasAllList?: boolean = false;\n   @Input() isLoading?: boolean = false;\n   @Input() itemAll?: StTwoListSelectionElement;\n   @Input() menuOptionList?: StDropDownMenuItem[];\n   @Input() @StRequired() qaTag: string;\n   @Input() mode: 'compact' | 'normal' = 'normal';\n\n   @Output() scrollBottom: EventEmitter<any> = new EventEmitter<any>();\n   @Output() selectItem: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectItemNonEditable: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectExtraLabel: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n   atBottom: Boolean = false;\n   delay: any = (() => {\n      let timer: any = 0;\n      return (callback: any, ms: any): void => {\n         clearTimeout(timer);\n         timer = setTimeout(callback, ms);\n      };\n   })();\n   firstEl: number = 0;\n   scrollItems: StTwoListSelectionElement[] = [];\n   showLoading: Boolean = false;\n\n   constructor(\n      private cd: ChangeDetectorRef,\n      private elemRef: ElementRef) {\n   }\n\n   ngOnInit(): void {\n      this.showLoading = this.isLoading;\n      this.cd.markForCheck();\n   }\n\n   get listQaTag(): string {\n      return this.qaTag + '-scroll-list';\n   }\n\n   get listCheckAllQaTag(): string {\n      return this.qaTag + '-check-all-scroll-list';\n   }\n\n   onScroll(): void {\n      let element = this.elemRef.nativeElement.querySelector('#virtualScroll');\n      this.showLoading = this.isLoading;\n      this.atBottom = element.scrollHeight - element.scrollTop === element.clientHeight;\n\n      const debounce = _.throttle(() => {\n         if (this.atBottom) {\n            this.scrollBottom.emit();\n            this.showLoading = false;\n         }\n      });\n      this.delay(debounce, 1000);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectorRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StTwoListSelectionElement } from './st-two-list-selection.model';\nimport { StFilterList } from '../pipes/search-filter/search-filter.pipe';\n\nexport type List = StTwoListSelectionElement[];\nexport type IdList = Array<string | number>;\n\nexport class StTwoListSelection {\n\n   // Original Lists\n   public originalAll: List;\n   public originalSelected: List;\n\n   // Work Lists\n   public copyAllElement: List = [];\n   public copySelectedElements: List = [];\n\n   public allSearch: string = '';\n   public hasCheckboxAllList?: boolean = false;\n   public hasCheckboxSelectedList?: boolean = false;\n   public itemAll?: StTwoListSelectionElement;\n   public numItemsSelectedAll: EventEmitter<number> = new EventEmitter<number>();\n   public numItemsSelectedSelected: EventEmitter<number> = new EventEmitter<number>();\n   public searchBy: string = 'name';\n   public searchOverAll: EventEmitter<string> = new EventEmitter<string>();\n   public searchOverSelected: EventEmitter<string> = new EventEmitter<string>();\n   public selectedSearch: string = '';\n\n   private emitter: EventEmitter<List>;\n   private sortLists: 'id' | 'name' | 'notOrder';\n\n   constructor(private _cd: ChangeDetectorRef) { }\n\n   // Check selected element\n   onSelectAllElement(selection: StTwoListSelectionElement): void {\n      if (this.hasCheckboxAllList && selection.itemAll) {\n         this.copyAllElement = this.applySelectAll(this.copyAllElement, this.allSearch, selection.selected);\n         selection.selected = !selection.selected;\n      } else {\n         if (this.canSelect(selection, this.copyAllElement)) {\n            selection.selected = !selection.selected;\n         }\n      }\n      this.copyAllElement = _.cloneDeep(this.copyAllElement);\n      if (this.copyAllElement) {\n         this.numItemsSelectedAll.emit(this.getNumItemsSelected(this.copyAllElement));\n      }\n   }\n\n   // Check selected element\n   onSelectSelectedElement(selection: StTwoListSelectionElement): void {\n      if (this.hasCheckboxSelectedList && selection.itemAll) {\n         this.copySelectedElements =  this.applySelectAll(this.copySelectedElements, this.selectedSearch, selection.selected);\n         selection.selected = !selection.selected;\n      } else {\n         if (this.canSelect(selection, this.copySelectedElements)) {\n            selection.selected = !selection.selected;\n         }\n      }\n      this.copySelectedElements = _.cloneDeep(this.copySelectedElements);\n      if (this.copySelectedElements) {\n         this.numItemsSelectedSelected.emit(this.getNumItemsSelected(this.copySelectedElements));\n      }\n   }\n\n   // Update search filter\n   onSearchOverAll(search: { text: string }): void {\n      this.allSearch = search.text;\n      this.searchOverAll.emit(this.allSearch);\n   }\n\n   // Update search filter\n   onSearchOverSelected(search: { text: string }): void {\n      this.selectedSearch = search.text;\n      this.searchOverSelected.emit(this.selectedSearch);\n   }\n\n   // Move from all to selected\n   onMoveToSelected(event: Event): void {\n      let ids: IdList = this.getIdsToMove(this.copyAllElement);\n      let result: List = this.moveIdsFromAllToSelected(this.originalAll, this.originalSelected, ids);\n      this.emitter.emit(result);\n      if (this.itemAll) this.itemAll.selected = false;\n   }\n\n   // Remove from selected\n   onMoveToAll(event: Event): void {\n      let ids: IdList = this.getIdsToMove(this.copySelectedElements);\n      let result: List = this.removeIdsFromSelected(this.originalSelected, ids);\n      this.emitter.emit(result);\n      if (this.itemAll) this.itemAll.selected = false;\n   }\n\n   // Move all to selected\n   onMoveAllToSelected(event: Event): void {\n      this.emitter.emit(_.cloneDeep(this.originalAll.filter((elem) => !elem.disabled)));\n   }\n\n   // Remove All from selected\n   onMoveAllToAll(event: Event): void {\n      this.emitter.emit([]);\n   }\n\n   init(all: List, selected: List, changeEmitter: EventEmitter<List>, sorted: 'id' | 'name' | 'notOrder',\n      hasCheckboxAllList: boolean = false, hasCheckboxSelectedList: boolean = false, itemAll: StTwoListSelectionElement = <any>null): void {\n      this.emitter = changeEmitter;\n      this.sortLists = sorted;\n      this.originalAll = all;\n      this.originalSelected = selected;\n      this.generateWorkLists();\n      this.hasCheckboxAllList = hasCheckboxAllList;\n      this.hasCheckboxSelectedList = hasCheckboxSelectedList;\n      this.itemAll = itemAll;\n   }\n\n   checkChanges(changes: SimpleChanges, allList: string, selectedList: string): void {\n      if (changes[allList] !== undefined) {\n         this.originalAll = changes[allList].currentValue;\n      }\n      if (changes[selectedList] !== undefined) {\n         this.originalSelected = changes[selectedList].currentValue;\n      }\n      if (changes[allList] !== undefined || changes[selectedList] !== undefined) {\n         this.generateWorkLists();\n      }\n   }\n\n   private applySelectAll(twoList: StTwoListSelectionElement[], elemSearched: string, allSelected: boolean): StTwoListSelectionElement[] {\n      let filterPipe = new StFilterList();\n      let filteredBySearch = filterPipe.transform(twoList, 'name', elemSearched);\n      if (elemSearched) {\n         twoList.forEach((elem) => {\n            if (!elem.disabled) {\n               elem.selected = false;\n               if (filteredBySearch.find(filtered => filtered.name === elem.name) !== undefined) {\n                  elem.selected = !allSelected;\n               }\n            }\n         });\n         this._cd.markForCheck();\n      } else {\n         twoList = _.cloneDeep(this.changeSelectedItemList(twoList, !allSelected));\n      }\n      return twoList;\n   }\n\n   private changeSelectedItemList(list: StTwoListSelectionElement[], selected: boolean): StTwoListSelectionElement[] {\n      return _.cloneDeep(list).map((elem) => {\n         elem.selected = (!elem.disabled) ? selected : elem.selected;\n         return elem;\n      });\n   }\n\n   private getNumItemsSelected(list: List): number {\n      const reducer = (accumulator: number, currentValue: StTwoListSelectionElement) => {\n         return (currentValue.selected) ? accumulator + 1 : accumulator + 0;\n      };\n      return list.reduce(reducer, 0);\n   }\n\n   private generateWorkLists(): void {\n      this.copyAllElement = this.copyLists(this.originalAll, this.copyAllElement, this.originalSelected);\n      this.copySelectedElements = this.copyLists(this.originalSelected, this.copySelectedElements);\n      if (this.sortLists !== undefined && (this.sortLists === 'id' || this.sortLists === 'name')) {\n         this.copyAllElement = this.orderListBy(this.copyAllElement, this.sortLists);\n         this.copySelectedElements = this.orderListBy(this.copySelectedElements, this.sortLists);\n      }\n   }\n\n   private copyLists(newValue: List, prevState: List, without?: List): List {\n      let list: List = _.cloneDeep(newValue);\n      if (without && without.length > 0) {\n         list = _.differenceBy(list, without, 'id');\n      }\n\n      let selected: IdList = this.getIdsToMove(prevState);\n      this.searchAndSelect(list, selected);\n      return list;\n   }\n\n   private searchAndSelect(list: List, selected: IdList): void {\n      let i = 0;\n      let actualIndex = -1;\n      while (selected.length > 0 && i < list.length) {\n         actualIndex = selected.indexOf(list[i].id);\n         if (actualIndex > -1) {\n            list[i].selected = true;\n            selected.splice(actualIndex, 1);\n            actualIndex = -1;\n         }\n         i++;\n      }\n   }\n\n   private getIdsToMove(list: List): IdList {\n      return list.reduce((prev, curr) => {\n         if (curr.selected) {\n            curr.selected = false;\n            prev.push(curr.id);\n         }\n         return prev;\n      }, []);\n   }\n\n   private moveIdsFromAllToSelected(all: List, selected: List, ids: IdList): List {\n      let items: List = all.filter((item) => _.includes(ids, item.id));\n      return _.xorBy(selected, _.cloneDeep(items), 'id');\n   }\n\n   private removeIdsFromSelected(selected: List, ids: IdList): List {\n      return selected.reduce((prev, curr) => {\n         if (!_.includes(ids, curr.id)) {\n            prev.push(_.clone(curr));\n         }\n         return prev;\n      }, []);\n   }\n\n   private orderListBy(list: List, by: string): List {\n      return _.sortBy(list, by);\n   }\n\n   private canSelect(selection: StTwoListSelectionElement, list: List): boolean {\n      return selection && !selection.disabled && list !== undefined && list.length > 0;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   EventEmitter,\n   Input,\n   OnChanges,\n   OnInit,\n   Output,\n   SimpleChanges\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\nimport { StTwoListSelection } from './st-two-list-selection';\nimport { StTwoListSelectionConfig, StTwoListSelectionElement, StTwoListSelectExtraLabelAction, StTwoListSelectionAction } from './st-two-list-selection.model';\n\n@Component({\n   selector: 'st-two-list-selection',\n   template: `\n      <st-two-list-selection-view\n         [allElements]=\"allList | stFilterList:searchBy:allSearch\"\n         [selectedElements]=\"selectedList | stFilterList:searchBy:selectedSearch\"\n         [config]=\"config\"\n         [editable]=\"editable\"\n         [hasAllListAll]=\"hasAllListAll\"\n         [hasAllListSelected]=\"hasAllListSelected\"\n         [itemAll]=\"itemAll\"\n         [qaTag]=\"qaTag\"\n         [isLoading]=\"isLoading\"\n         [hasSearch]=\"hasSearch\"\n         [orderAllOptions]=\"orderAllOptions\"\n         [orderSelectedOptions]=\"orderSelectedOptions\"\n         [mode]=\"mode\"\n         [moveAllToSelectedButton]=\"moveAllToSelectedButton\"\n         [moveAllToAllButton]=\"moveAllToAllButton\"\n         [moveToAllButton]=\"moveToAllButton\"\n         [moveToSelectedButton]=\"moveToSelectedButton\"\n         [showSearchNumber]=\"showSearchNumber\"\n\n         (selectAllElement)=\"onSelectAllElement($event)\"\n         (selectSelectedElement)=\"onSelectSelectedElement($event)\"\n         (searchOverAll)=\"onSearchOverAll($event)\"\n         (searchOverSelected)=\"onSearchOverSelected($event)\"\n         (moveToSelected)=\"onMoveToSelected($event)\"\n         (moveToAll)=\"onMoveToAll($event)\"\n         (moveAllToSelected)=\"onMoveAllToSelected($event)\"\n         (moveAllToAll)=\"onMoveAllToAll($event)\"\n         (numItemsSelectedAll)=\"numItemsSelectedAll.emit($event)\"\n         (numItemsSelectedSelected)=\"numItemsSelectedSelected.emit($event)\"\n         (selectExtraLabelAll)=\"selectExtraLabelAll.emit($event)\"\n         (selectExtraLabelSelected)=\"selectExtraLabelAll.emit($event)\"\n         (selectItemNonEditable)=\"selectItemNonEditable.emit($event)\"\n         (changeOrderAll)=\"changeOrderAll.emit($event)\"\n         (changeOrderSelected)=\"changeOrderSelected.emit($event)\"\n         (scrollBottomAll)=\"scrollBottomAll.emit($event)\"\n      ></st-two-list-selection-view>\n   `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n@StEgeo()\nexport class StTwoListSelectionComponent extends StTwoListSelection implements OnInit, OnChanges {\n\n   @Input() @StRequired('editable') allElements: StTwoListSelectionElement[];\n   @Input() config: StTwoListSelectionConfig;\n   @Input() editable: boolean = false;\n   @Input() hasAllListAll?: boolean = false;\n   @Input() hasAllListSelected?: boolean = false;\n   @Input() hasSearch: boolean = true;\n   @Input() isLoading?: boolean = false;\n   @Input() itemAll?: StTwoListSelectionElement;\n   @Input() mode: 'compact' | 'normal' = 'normal';\n   @Input() moveAllToSelectedButton: boolean = true;\n   @Input() moveAllToAllButton: boolean = true;\n   @Input() moveToSelectedButton: boolean = true;\n   @Input() moveToAllButton: boolean = true;\n   @Input() orderAllOptions: StDropDownMenuItem[] = [];\n   @Input() orderSelectedOptions: StDropDownMenuItem[] = [];\n   @Input() @StRequired() qaTag: string;\n   @Input() @StRequired() selectedElements: StTwoListSelectionElement[];\n   @Input() showSearchNumber: number;\n   @Input() sortBy: 'id' | 'name' | 'notOrder' = 'id';\n\n   @Output() change: EventEmitter<any> = new EventEmitter<any>();\n   @Output() changeOrderAll: EventEmitter<any> = new EventEmitter<any>();\n   @Output() changeOrderSelected: EventEmitter<any> = new EventEmitter<any>();\n   @Output() numItemsSelectedAll: EventEmitter<any> = new EventEmitter<any>();\n   @Output() numItemsSelectedSelected: EventEmitter<any> = new EventEmitter<any>();\n   @Output() scrollBottomAll: EventEmitter<any> = new EventEmitter<any>();\n   @Output() searchOverAll: EventEmitter<string> = new EventEmitter<string>();\n   @Output() searchOverSelected: EventEmitter<string> = new EventEmitter<string>();\n   @Output() selectedElementsChange: EventEmitter<StTwoListSelectionElement[]> = new EventEmitter<StTwoListSelectionElement[]>();\n   @Output() selectExtraLabelAll: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() selectExtraLabelSelected: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() selectItemNonEditable: EventEmitter<StTwoListSelectionElement[]> = new EventEmitter<StTwoListSelectionElement[]>();\n\n   constructor(private cd: ChangeDetectorRef) {\n      super(cd);\n   }\n\n   ngOnInit(): void {\n      this.init(\n         this.allElements,\n         this.selectedElements,\n         this.selectedElementsChange,\n         this.sortBy,\n         this.hasAllListAll,\n         this.hasAllListSelected,\n         this.itemAll\n      );\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      this.checkChanges(changes, 'allElements', 'selectedElements');\n      this.change.emit();\n   }\n\n   get allList(): StTwoListSelectionElement[] {\n      return this.copyAllElement;\n   }\n\n   get selectedList(): StTwoListSelectionElement[] {\n      return this.copySelectedElements;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectorRef, ChangeDetectionStrategy, Component, EventEmitter, Input, Output, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { StDropDownMenuItem } from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\nimport { StTwoListSelectionConfig, StTwoListSelectionElement, StTwoListSelectExtraLabelAction } from './st-two-list-selection.model';\n\n@Component({\n   selector: 'st-two-list-selection-view',\n   templateUrl: './st-two-list-selection.view.component.html',\n   styleUrls: ['./st-two-list-selection.view.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n@StEgeo()\nexport class StTwoListSelectionViewComponent implements OnInit, OnChanges {\n\n   @Input() @StRequired() qaTag: string;\n   @Input() @StRequired() selectedElements: StTwoListSelectionElement[];\n   @Input() allElements: StTwoListSelectionElement[];\n   @Input() config: StTwoListSelectionConfig;\n   @Input() editable: boolean = false;\n   @Input() hasAllListAll?: boolean = false;\n   @Input() hasAllListSelected?: boolean = false;\n   @Input() hasSearch: boolean = true;\n   @Input() isLoading?: boolean = false;\n   @Input() itemAll?: StTwoListSelectionElement;\n   @Input() mode: 'compact' | 'normal' = 'normal';\n   @Input() moveAllToSelectedButton: boolean = false;\n   @Input() moveAllToAllButton: boolean = false;\n   @Input() moveToSelectedButton: boolean = false;\n   @Input() moveToAllButton: boolean = false;\n   @Input() orderSelectedOptions: StDropDownMenuItem[] = [];\n   @Input() orderAllOptions: StDropDownMenuItem[] = [];\n   @Input() showSearchNumber?: number;\n\n   @Output() changeOrderAll: EventEmitter<any> = new EventEmitter<any>();\n   @Output() changeOrderSelected: EventEmitter<any> = new EventEmitter<any>();\n   @Output() moveAllToAll: EventEmitter<Event> = new EventEmitter<Event>();\n   @Output() moveAllToSelected: EventEmitter<Event> = new EventEmitter<Event>();\n   @Output() moveToAll: EventEmitter<Event> = new EventEmitter<Event>();\n   @Output() moveToSelected: EventEmitter<Event> = new EventEmitter<Event>();\n   @Output() scrollBottomAll: EventEmitter<any> = new EventEmitter<any>();\n   @Output() searchOverAll: EventEmitter<string> = new EventEmitter<string>();\n   @Output() searchOverSelected: EventEmitter<string> = new EventEmitter<string>();\n   @Output() selectAllElement: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectExtraLabelAll: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() selectExtraLabelSelected: EventEmitter<StTwoListSelectExtraLabelAction> = new EventEmitter<StTwoListSelectExtraLabelAction>();\n   @Output() selectItemNonEditable: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n   @Output() selectSelectedElement: EventEmitter<StTwoListSelectionElement> = new EventEmitter<StTwoListSelectionElement>();\n\n   public checkMoveToSelectedValue: boolean;\n   public checkMoveToAllValue: boolean;\n\n   constructor(private _cd: ChangeDetectorRef) {}\n\n   ngOnChanges(changes: SimpleChanges): void {\n      if (changes) {\n         this.refreshButtons();\n      }\n   }\n\n   ngOnInit(): void {\n      this.refreshButtons();\n   }\n\n   get allTitle(): string {\n      return this.config && this.config.allElementsListTitle || '';\n   }\n\n   get allSubtitle(): string {\n      return this.config && this.config.allElementsListSubtitle || '';\n   }\n\n   get allPlaceholder(): string {\n      return this.config && this.config.allElementsSearchPlaceholder || '';\n   }\n\n   get fetchingDataText(): string {\n      return this.config && this.config.fetchingDataText || '';\n   }\n\n   get menuOptionList(): StDropDownMenuItem[] {\n      return this.config && this.config.menuOptionList;\n   }\n\n   get orderPlaceholder(): string {\n      return this.config && this.config.orderPlaceholder || '';\n   }\n\n   get selectedTitle(): string {\n      return this.config && this.config.selectedElementsListTitle || '';\n   }\n\n   get selectedSubtitle(): string {\n      return this.config && this.config.selectedElementsListSubtitle || '';\n   }\n\n   get allQaTag(): string {\n      return this.qaTag + '-all-elements';\n   }\n\n   get selectedPlaceholder(): string {\n      return this.config && this.config.selectedElementsSearchPlaceholder || '';\n   }\n\n   get selectedQaTag(): string {\n      return this.qaTag + '-selected-elements';\n   }\n\n   checkMoveToSelected(): void {\n      let existDisabledElements = (this.allElements) ? this.allElements.filter((elem) => elem.disabled) : [];\n      // tslint:disable-next-line:max-line-length\n      this.checkMoveToSelectedValue = (this.allElements) ? (this.allElements.length === 0) || (existDisabledElements && existDisabledElements.length === this.allElements.length) : false;\n      this._cd.markForCheck();\n   }\n\n   checkMoveToAll(): void {\n      let existDisabledElements = (this.selectedElements) ? this.selectedElements.filter((elem) => elem.disabled) : [];\n      // tslint:disable-next-line:max-line-length\n      this.checkMoveToAllValue = (this.selectedElements) ? (this.selectedElements.length === 0) || (existDisabledElements && existDisabledElements.length === this.selectedElements.length) : false;\n      this._cd.markForCheck();\n   }\n\n   refreshButtons(): void {\n      this.checkMoveToSelected();\n      this.checkMoveToAll();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\n\n// Components\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { ListSelectionComponent } from './list-selection/list-selection.component';\nimport { ListScrollComponent } from './list-scroll/list-scroll.component';\nimport { StTwoListSelectionComponent } from './st-two-list-selection.component';\nimport { StTwoListSelectionViewComponent } from './st-two-list-selection.view.component';\n\n// Order modules\nimport { PipesModule } from '../pipes/pipes.module';\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StSearchModule } from '../st-search/st-search.module';\nimport { StSelectModule } from '../st-select/st-select.module';\nimport { StCheckboxModule } from '../st-checkbox/st-checkbox.module';\nimport { StSpinnerModule } from '../st-spinner/st-spinner.module';\n\n@NgModule({\n   imports: [CommonModule, StSearchModule, PipesModule, VirtualScrollerModule, StSelectModule, StCheckboxModule, StDropdownMenuModule, StSpinnerModule],\n   declarations: [StTwoListSelectionViewComponent, StTwoListSelectionComponent, ListSelectionComponent, ListItemComponent, ListScrollComponent],\n   exports: [StTwoListSelectionComponent, StTwoListSelectionViewComponent]\n})\nexport class StTwoListSelectionModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from '@angular/core';\n\n@Component({\n   selector: 'st-vertical-tabs',\n   templateUrl: './st-vertical-tabs.component.html',\n   styleUrls: ['./st-vertical-tabs.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StVerticalTabsComponent implements OnInit {\n   @Input() activeOption: string;\n   @Input() options: string[];\n   @Input() qaTag: string;\n   @Output() changeOption: EventEmitter<string> = new EventEmitter<string>();\n\n   activeOptionIndex: number = 0;\n   arrowMovement: number = 39;\n   arrowMargin: number = 0;\n\n   constructor() { }\n\n   ngOnInit(): void {\n      if (!this.qaTag) {\n         throw new Error('qaTag is a required field');\n      }\n      if (this.options && this.options.length > 0) {\n         if (this.activeOption) {\n            this.changeActive(this.activeOption);\n         } else {\n            this.activeFirstOption();\n         }\n      } else {\n         throw new Error('options is a required field');\n      }\n   }\n\n   ngOnChanges(changes: any): void {\n      if (changes && changes.activeOption) {\n         this.changeActive(changes.activeOption.currentValue);\n      }\n   }\n\n   isActive(optionName: string): boolean {\n      return this.activeOption === optionName;\n   }\n\n   activateOption(optionName: string): void {\n      this.changeActive(optionName);\n      this.changeOption.emit(optionName);\n   }\n\n   private changeActive(optionName: string): void {\n      this.activeOption = optionName;\n      this.activeOptionIndex = this.options.indexOf(optionName);\n      if (this.activeOptionIndex < 0) {\n         this.activeFirstOption();\n      }\n   }\n\n   private activeFirstOption(): void {\n      this.changeActive(this.options[0]);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StVerticalTabsComponent } from './st-vertical-tabs.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [StVerticalTabsComponent],\n   exports: [StVerticalTabsComponent]\n})\nexport class StVerticalTabsModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Component, Input, ElementRef } from '@angular/core';\nimport { StEgeo, StRequired } from './../decorators/require-decorators';\n\n/**\n * @description {Component} [Widget]\n *\n * Widget component is a container box for any type of widgets\n *\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-widget title=\"widget demo\" [loading]=\"isLoading\" overwriteLoadingData=\"Loading...\"></st-widget>\n * ```\n *\n */\n\n@Component({\n   selector: 'st-widget',\n   templateUrl: 'st-widget.component.html',\n   styleUrls: ['st-widget.component.scss']\n})\n\nexport class StWidgetComponent {\n   /** @Input {string} [title] title will be displayed in the widget header */\n   @Input() title: string;\n   /** @Input {bolean} [loading] when true, loading stauts is displayed    */\n   @Input() loading: boolean = false;\n   /** @Input {string} [title] text \"loading data\" will be overwritten with this parameter */\n   @Input() overwriteLoadingData: string = 'Loading data';\n   /** @Input {boolean} [displaySettingsButton] Boolean to display or hide the settings button */\n   @Input() displaySettingsButton: boolean = true;\n\n   private _draggable: boolean = true;\n   private _dragging: boolean = false;\n\n   constructor(private el: ElementRef) {\n   }\n\n   get widgetId(): string | null {\n      return this.el.nativeElement.id ? this.el.nativeElement.id + '-widget' : undefined;\n   }\n\n   /** @Input {boolean} [draggable=true] Boolean to enable or disable dragging of widget */\n   @Input()\n   public get draggable(): boolean {\n      return this._draggable;\n   }\n   public set draggable(draggable: boolean) {\n      this._draggable = draggable;\n   }\n\n   public get dragging(): boolean {\n      return this._dragging;\n   }\n\n   public updateDragging(value: boolean): void {\n      this._dragging = value;\n   }\n\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StProgressBarModule } from '../st-progress-bar/st-progress-bar.module';\nimport { StWidgetComponent } from './st-widget.component';\n\n@NgModule({\n   imports: [CommonModule, StProgressBarModule],\n   exports: [StWidgetComponent],\n   declarations: [StWidgetComponent]\n})\nexport class StWidgetModule { }\n","\nexport interface StNotificationElement {\n   text?: string;\n   html?: string;\n   status?: string;\n   nameEvents?: string [];\n}\n\nexport interface StatusNotification {\n   showMore: boolean;\n   completeText: boolean;\n}\n\nexport class StatusNotification implements StatusNotification {\n   showMore: boolean;\n   completeText: boolean;\n\n   constructor(private _showMore: boolean, private _completeText: boolean) {\n      this.showMore = _showMore;\n      this.completeText = _completeText;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, EventEmitter, Output, ElementRef, OnInit, Renderer2,\n   OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\nimport { StatusNotification, StNotificationElement } from './st-foreground-notifications.model';\n\n@Component({\n   selector: 'st-foreground-notifications',\n   templateUrl: 'st-foreground-notifications.html',\n   styleUrls: ['st-foreground-notifications.scss'],\n   host: {\n      '[class.visible]': '_visible'\n   },\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * @description {Component} [Foreground notifications]\n *\n * Foreground notifications are made to let the user know info about a process she is performing in real time.\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-foreground-notifications [notifications]=\"notifications\" [(visible)]=\"true\" [autoCloseTime]=\"1000\"></st-foreground-notifications>\n *\n * ```\n */\n\n\nexport class StForegroundNotificationsComponent implements AfterViewInit, OnChanges, OnInit {\n\n   /** @Input {boolean} [visible=false] When true the notification is shown */\n   @Input()\n   set visible(value: boolean) {\n      if (value !== undefined) {\n         this._visible = value;\n         this.visibleChange.emit(this._visible);\n      }\n      this.cd.markForCheck();\n   }\n   get visible(): boolean {\n      return this._visible;\n   }\n\n   /** @Input {autoCloseTime} [autoCloseTime='1000'] Defines the time in milliseconds for autoclose the notification.\n    *  The autoclose only applies if only have one notification and status is success\n    */\n   @Input() autoCloseTime: number;\n\n   /** @Input {StNotificationElement []} [notifications='[]'] Array of notifications */\n   @Input() notifications?: StNotificationElement[] = [];\n\n    /** @output {clickLinkTemplate} [click] Event emitted when user click in a href link */\n   @Output() clickLinkTemplate: EventEmitter<any> = new EventEmitter();\n\n   /** @output {visibleChange} [click] Event emitted when set param visible */\n   @Output() visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n   public currentNotification: number = 1;\n   public statusIconValue: string;\n   public statusNotificationsValue: string;\n   public statusValue: string;\n   public showLinkMore: boolean = false;\n   public status: string = 'default';\n\n   public _visible: boolean = false;\n   public listStatusNotifications: Array<StatusNotification> = [];\n\n   constructor(private cd: ChangeDetectorRef, private elemRef: ElementRef, private renderer: Renderer2) { }\n\n   ngOnInit(): void {\n      if (this.autoCloseTime) {\n         if ( this.notifications.length === 1 && this.notifications[0].status === 'success') {\n            setTimeout(() => this.onClose(), this.autoCloseTime);\n         }\n      }\n      this.fillStatusNotifications();\n   }\n\n   ngAfterViewInit(): void {\n      let htmlElement = this.elemRef.nativeElement.querySelector('.foreground-notification__html');\n      if (htmlElement !== null) {\n         this.addStyleLinks(htmlElement);\n      }\n      if ( this.notifications && this.notifications.length > 0) {\n         this.checkOneLine();\n      }\n\n      this.cd.detectChanges();\n   }\n\n   ngOnChanges(): void {\n      if (this.notifications && this.notifications.length < this.currentNotification) {\n         this.currentNotification = this.notifications.length;\n      }\n      this.listStatusNotifications = [];\n      this.fillStatusNotifications();\n   }\n\n   addStyleLinks(htmlElement: any): void {\n      let links = htmlElement.querySelectorAll('a');\n      if (links.constructor !== Array) {\n         links = (<any>Object).values(links);\n      }\n      links.forEach((element: any, index: any) => {\n         let nameEventEmitter = (this.notifications[this.getIndexCurrentNotification()]).nameEvents[index];\n         if (nameEventEmitter) {\n            element.addEventListener('click', this.onClickLinkHtmlTemplate.bind(this, nameEventEmitter));\n            this.renderer.setStyle(element, 'text-decoration', 'underline');\n            this.renderer.setStyle(element, 'cursor', 'pointer');\n         }\n      });\n   }\n\n   checkOneLine(): void {\n      let element = this.elemRef.nativeElement.querySelectorAll('.foreground-notification__content');\n      let currentIndex = this.getIndexCurrentNotification();\n\n      if (this.listStatusNotifications && this.listStatusNotifications.length > 0) {\n         if (element[currentIndex].offsetHeight > 40) {\n            this.listStatusNotifications[currentIndex].showMore = !this.listStatusNotifications[currentIndex].completeText;\n\n            if (this.listStatusNotifications[currentIndex].showMore) {\n               this.listStatusNotifications[currentIndex].completeText = false;\n               this.renderer.addClass(element[currentIndex], 'limit-one-line');\n            }\n         } else {\n            this.listStatusNotifications[currentIndex].completeText = true;\n            if (!this.listStatusNotifications[currentIndex].showMore) {\n               this.removeStyleNotification();\n            }\n         }\n      }\n      this.checkStatus();\n   }\n\n   checkStatus(): void {\n      this.statusValue = this.getStatus();\n      this.statusIconValue = this.getStatusIcon();\n      this.statusNotificationsValue = this.getStatusNotifications();\n\n      this.cd.detectChanges();\n   }\n\n   decrementPage(): void {\n      this.currentNotification = this.getIndexCurrentNotification();\n      setTimeout(() => {\n         this.checkOneLine();\n         this.cd.detectChanges();\n      });\n      this.status = this.notifications[this.getIndexCurrentNotification()].status;\n   }\n\n   fillStatusNotifications(): void {\n      if (this.notifications && this.notifications.length > 0) {\n         this.status = this.notifications[this.getIndexCurrentNotification()].status;\n         this.checkStatus();\n      }\n\n      this.notifications.forEach(() => {\n         this.listStatusNotifications.push(new StatusNotification(false, false));\n      });\n   }\n\n   getIndexCurrentNotification(): number {\n      return this.currentNotification - 1;\n   }\n\n   getStatus(): string {\n      switch (this.status) {\n         case 'success':\n         case 'warning':\n         case 'critical':\n         case 'running':\n            return this.status;\n         default:\n            return 'default';\n      }\n   }\n\n   getStatusIcon(): string {\n      switch (this.status) {\n         case 'success':\n            return 'icon-circle-check';\n         case 'warning':\n            return 'icon-alert';\n         case 'critical':\n            return 'icon-info1';\n         case 'running':\n            return 'icon-info1';\n         default:\n            return 'default';\n      }\n   }\n\n   getStatusNotifications(): string {\n      return (this.notifications.length > 1) ? 'more-lines' : '';\n   }\n\n   incrementPage(): void {\n      this.currentNotification = this.currentNotification + 1;\n      setTimeout(() => {\n         this.checkOneLine();\n         this.cd.detectChanges();\n      });\n      this.status = this.notifications[this.getIndexCurrentNotification()].status;\n   }\n\n   onClickLinkHtmlTemplate(event: string): void {\n      this.clickLinkTemplate.emit(event);\n   }\n\n   onClose(): void {\n      this.visible = false;\n      this.cd.markForCheck();\n   }\n\n   removeStyleNotification(): void {\n      let element = this.elemRef.nativeElement.querySelectorAll('.foreground-notification__content');\n      this.renderer.removeClass(element[this.getIndexCurrentNotification()], 'limit-one-line');\n      this.cd.markForCheck();\n   }\n\n   showTextComplete(): void {\n      let currentIndex = this.getIndexCurrentNotification();\n      if (this.listStatusNotifications && this.listStatusNotifications.length > 0) {\n         this.listStatusNotifications[currentIndex].showMore = false;\n         this.listStatusNotifications[currentIndex].completeText = true;\n      }\n      this.removeStyleNotification();\n      this.cd.markForCheck();\n   }\n}\n\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StForegroundNotificationsComponent } from './st-foreground-notifications';\n\n@NgModule({\n   imports: [\n      CommonModule\n   ],\n   declarations: [\n      StForegroundNotificationsComponent\n   ],\n   exports: [StForegroundNotificationsComponent]\n})\n\nexport class StForegroundNotificationsModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Component, Input } from '@angular/core';\n\n/**\n * @description {Component} [Zero Page]\n *\n * Zero page is displayed when there are no results to show in a table\n *\n * @example\n *\n * {html}\n *\n * ```\n *      <st-zero-page class=\"zero-page-example\"\n *      title=\"There are no Variables created yet \"\n *      info=\"Variables help you to have consistent values through your Quality Rules, Attributesâ¦\"\n *      imageSource=\"assets/images/variable-icon.svg\">\n *      </st-zero-page>\n * ```\n */\n@Component({\n   selector: 'st-zero-page',\n   templateUrl: 'st-zero-page.template.html',\n   styleUrls: ['st-zero-page.style.scss']\n})\n\nexport class StZeroPageComponent {\n   /** @Input {string} [title=''] Title message */\n   @Input() title: string;\n   /** @Input {string} [info=''] Info message */\n   @Input() info: string;\n   /** @Input {string} [imageSource=''] Image source path */\n   @Input() imageSource: string;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StZeroPageComponent } from './st-zero-page.component';\n\n@NgModule({\n   imports: [\n      CommonModule\n   ],\n   declarations: [\n      StZeroPageComponent\n   ],\n   exports: [StZeroPageComponent]\n})\n\nexport class StZeroPageModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @description {Component} [Color picker]\n *\n * The color picker allows user to choose between several colors\n *\n * @example\n *\n * {html}\n *\n * ```\n *   <st-color-picker label=\"Choose a Status color\" [selected]=\"selectedColor\" [palette]=\"palette\"\n *     (change)=\"onSelectColor($event)\">\n *   </st-color-picker>\n * ```\n *\n */\n\n@Component({\n   selector: 'st-color-picker',\n   templateUrl: './st-color-picker.component.html',\n   styleUrls: ['./st-color-picker.component.scss'],\n   providers: [\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => StColorPickerComponent), multi: true }\n   ]\n})\n\nexport class StColorPickerComponent implements ControlValueAccessor {\n   /** @Input {string} [label=] Optional label displayed on the top of the color picker */\n   @Input() label: string;\n   /** @Input {string[]} [palette=] List of colors to be selected */\n   @Input() palette: string[];\n   /** @Output {string} [change=] Event emitted when a color is selected */\n   @Output() change: EventEmitter<string> = new EventEmitter<string>();\n\n   private _selected: string;\n   private _disabled: boolean;\n   private registeredOnChange: (_: any) => void;\n\n   onChange = (_: string) => {\n      this._selected = _;\n      this.change.emit(this._selected);\n   }\n\n   onTouched = () => {\n   }\n\n   @Input()\n   get selected(): string {\n      return this._selected;\n   }\n\n   set selected(color: string) {\n      this._selected = color;\n   }\n\n   onSelectColor(color: string): void {\n      this.change.emit(color);\n      this.onChange(color);\n   }\n\n   isSelected(color: string): boolean {\n      return this.selected === color;\n   }\n\n   // load external change\n   writeValue(value: string): void {\n      if (!this._disabled) {\n         this._selected = value;\n         this.change.emit(this._selected);\n         if (this.registeredOnChange) {\n            this.registeredOnChange(value);\n         }\n      }\n   }\n\n   // Registry the change function to propagate internal model changes\n   registerOnChange(fn: (_: any) => void): void {\n      this.onChange = fn;\n   }\n\n   // Registry the touch function to propagate internal touch events\n   registerOnTouched(fn: () => void): void {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(disable: boolean): void {\n      this._disabled = disable;\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StColorPickerComponent } from './st-color-picker.component';\nimport { StLabelModule } from '../st-label/st-label.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n   imports: [CommonModule, StLabelModule, FormsModule, ReactiveFormsModule],\n   declarations: [StColorPickerComponent],\n   exports: [StColorPickerComponent]\n})\nexport class StColorPickerModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { JSONSchema4 } from 'json-schema';\nimport { StDynamicTableHeader, StDynamicTableUISpecification, StDynamicTableUserInterface } from '../st-dynamic-table.model';\nimport { StFilterHeader } from '../../st-table/shared/table-header.interface';\n\nexport class StDynamicTableUtils {\n\n   public static getHeaderFieldsFromJsonSchema(jsonSchema: JSONSchema4, uiDefinitions?: StDynamicTableUserInterface): StDynamicTableHeader[] {\n      const fields: StDynamicTableHeader[] = [];\n\n      if (jsonSchema && jsonSchema.properties) {\n         const properties = Object.keys(jsonSchema.properties);\n         if (properties) {\n            properties.forEach(_propertyKey => {\n               const _property = jsonSchema.properties[_propertyKey];\n               if (_property && _property.type !== 'object') {\n                  const uiDefinition: StDynamicTableUISpecification = uiDefinitions && uiDefinitions[_propertyKey];\n                  const visible: boolean = !uiDefinition || uiDefinition.visible !== false;\n                  if (visible) {\n                     const filters: StFilterHeader = StDynamicTableUtils.getHeaderFiltersFromJsonSchema(_property, uiDefinition);\n                     const isSortable = uiDefinition && uiDefinitions[_propertyKey].sortable;\n\n                     fields.push({\n                        id: _propertyKey,\n                        label: _property.title || _propertyKey,\n                        reference: _property.$ref,\n                        fk: uiDefinition && uiDefinition.fk,\n                        group: uiDefinition && uiDefinition.group_field ? uiDefinition.group_field.view : null,\n                        filters: filters,\n                        filterable: filters && (filters.templateRef !== undefined || (filters.filterConfig && filters.filterConfig.length > 0)),\n                        sortable: isSortable,\n                        sortedByDefault: uiDefinition && uiDefinition.sort ? uiDefinition.sort.toUpperCase() : null,\n                        type: _property.type ? this._getTypes(_propertyKey, _property.type.toString(), jsonSchema, uiDefinition) : null\n                     });\n                  }\n               }\n            });\n         }\n      }\n      return fields;\n   }\n\n   public static getHeaderFiltersFromJsonSchema(propertyDefinition: JSONSchema4, uiDefinition: StDynamicTableUISpecification): StFilterHeader {\n      let filters: StFilterHeader;\n      if (propertyDefinition.enum && propertyDefinition.enum.length) {\n         filters = {\n            title: propertyDefinition.title,\n            filterConfig: []\n         };\n         propertyDefinition.enum.forEach(_value => {\n            filters.filterConfig.push({\n               id: <any> _value,\n               name: <any> _value\n            });\n         });\n      } else if (uiDefinition && uiDefinition.templateRef) {\n         filters = {\n            title: propertyDefinition.title,\n            templateRef: uiDefinition.templateRef\n         };\n      }\n\n      return filters;\n   }\n\n   private static _getTypes(key: string, type: string, jsonSchema: JSONSchema4,\n                            uiDefinition: StDynamicTableUISpecification): { field: string; type: string }[] {\n      if (uiDefinition && uiDefinition.group_field && uiDefinition.group_field.view) {\n         const fields = uiDefinition.group_field.view.split(' - ');\n         return fields.map(field => (\n            {\n               field: field,\n               type: jsonSchema.properties[field] ? String(jsonSchema.properties[field].type) : ''\n            }\n         ));\n      }\n      return [{ field: key, type: type }];\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { JSONSchema4 } from 'json-schema';\n\nimport { StEgeo, StRequired } from '../decorators/require-decorators';\nimport { Order, ORDER_TYPE } from '../st-table/shared/order';\nimport { StTableHeader } from '../st-table/shared/table-header.interface';\nimport { StDynamicTableUtils } from './utils/st-dynamic-table.utils';\nimport { StDynamicTableHeader, StDynamicTableUserInterface, StDynamicTableFkEvent } from './st-dynamic-table.model';\nimport { StTableIconClasses } from '../st-table/st-table.interface';\n\n/**\n * @description {Component} [Dynamic Table]\n *\n * The table component has been designed to be able to create a table deducing its columns using a json schema\n *\n * * @model\n *\n *   [StDynamicTableHeader] {./st-dynamic-table.model.ts#StDynamicTableHeader}\n *   [StDynamicTableUISpecification] {./st-dynamic-table.model.ts#StDynamicTableUISpecification}\n *   [StDynamicTableUserInterface] {./st-dynamic-table.model.ts#StDynamicTableUserInterface}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-dynamic-table [jsonSchema]=\"jsonSchema\"\n *    [items]=\"sortedUsers\"\n *    [sortable]=\"true\"\n *    [filterable]=\"true\"\n *    [hasHoverMenu]=\"true\"\n *    [currentOrder]=\"currentOrder\"\n *    [activeHoverMenu]=\"activeHoverMenuPosition\"\n *    [templateContentFilter]=\"filterContent\"\n *    (changeOrder)=\"onSortTable($event)\"\n *    (showHoverMenu)=\"onShowHoverMenu($event)\">\n *        <st-dropdown-menu st-dynamic-table-hover-menu\n *          class=\"hover-menu\"\n *          [items]=\"rowActions\"\n *          [active]=\"activeHoverMenuPosition[3] !== undefined\"\n *          [visualMode]=\"1\">\n *       </st-dropdown-menu>\n * </st-dynamic-table>\n * ```\n *\n */\n@StEgeo()\n@Component({\n   selector: 'st-dynamic-table',\n   templateUrl: './st-dynamic-table.component.html',\n   styleUrls: ['./st-dynamic-table.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StDynamicTableComponent {\n   /** @Input {Object([key: string]: any)[]} [items=''] Item list displayed as table rows */\n   @Input() @StRequired() items: { [key: string]: any }[];\n\n   /** @Input {string} [qaTag=''] Prefix used to generate the id values for qa tests */\n   @Input() qaTag: string;\n   /** @Input {boolean} [header=true] Boolean to show or hide the header */\n   @Input() header: boolean = true;\n   /**\n    * @Input {boolean} [sortable=true] Boolean to make sortable the table, To enable sorting of columns use\n    * the new \"sortable\" field inside stTableHeader model\n    */\n   @Input() sortable: boolean = true;\n   /**\n    * @Input {boolean} [filterable=false] Boolean to make filterable the table, To enable filtering of columns use\n    * the new \"filterable\" field inside stTableHeader model (necesary define filterConfig).\n    */\n   @Input() filterable: boolean = false;\n   /**\n    * @Input {boolean} [selectable=false] Boolean to show or hide a checkboxes in the first cell of rows\n    */\n   @Input() selectable: boolean = false;\n   /**\n    * @Input {boolean} [selectableAll=false] Boolean to show or hide a checkbox in the header to select or\n    *  deselect all rows\n    */\n   @Input() selectableAll: boolean = false;\n\n   /** @Input {boolean[]} [selected=''] Boolean list to indicate if a row is selected */\n   @Input() selected?: boolean[] = [];\n\n   /** @Input {Order} [currentOrder=''] It specifies what is the current order applied to the table */\n   @Input() currentOrder: Order;\n\n   /** @Input {string} [customClasses=] Classes for adding styles to table tag from outside. These can be: separated-rows */\n   @Input() customClasses: string;\n\n   /** @Input {boolean} [fixedHeader=false] Boolean to fix the table header */\n   @Input() fixedHeader: boolean = false;\n   /** @Input {boolean} [stickyHoverMenu=false] Boolean to fix hover menu always visible */\n   @Input() stickyHoverMenu: boolean = false;\n   /** @Input {StTableIconClasses} [iconClasses=''] List of icon classes */\n   @Input() iconClasses?: StTableIconClasses = new StTableIconClasses();\n\n   /** @Input {TemplateRef} [templateContentFilter=undefined] Reference to paint a custom template inside popover content */\n   @Input()\n   get templateContentFilter(): TemplateRef<any> {\n      return this._templateContentFilter;\n   }\n\n   set templateContentFilter(_templateRef: TemplateRef<any>) {\n      this._templateContentFilter = _templateRef;\n   }\n\n   /** @Input {boolean[]} [statusFilter=] List of status filter by column, needed with templateContentFilter */\n   @Input() statusFilter?: boolean[] = [];\n\n   /** @Input {number} [activeHoverMenu=] Position of the current active hover menu */\n   @Input() activeHoverMenu?: number;\n\n   /** @Input {boolean} [hasHoverMenu=] It specifies if a menu has to be displayed when user puts the mouse over\n    * the rows. Remember to add a cell with the selector st-table-row-hover for adding content to the menu\n    */\n   @Input() hasHoverMenu?: boolean;\n   /** @Input {string} [hoverButton='icon-ellipsis'] It specifies the icon class of the hover button displayed when user puts mouse over a row\n    */\n   @Input() hoverButton: string = 'icon-ellipsis';\n\n   /** @Input {boolean} [selectedAll=] It specifies if all rows are selected */\n   @Input() selectedAll?: boolean;\n\n   /** @Output {Order} [changeOrder=''] Event emitted with the new order which has to be applied to the table rows */\n   @Output() changeOrder: EventEmitter<Order> = new EventEmitter<Order>();\n   /** @Output {boolean} [selectAll=''] Event emitted  when user interacts with the checkbox to select or deselect\n    * all rows\n    */\n   @Output() selectAll: EventEmitter<boolean> = new EventEmitter<boolean>();\n   /** @Output {EventEmitter<StTableHeader[]>} [fields=] Event emitted when header fields are being loaded */\n   @Output() updateFields: EventEmitter<StTableHeader[]> = new EventEmitter<StTableHeader[]>();\n\n   /** @Output {string} [clickFilter=] Event emitted when using filters custom template  */\n   @Output() clickFilter: EventEmitter<StTableHeader> = new EventEmitter();\n\n   /** @Output {StTableHeader[]} [selectFilters=] Event emitted  when user interacts with filter button without a custom template */\n   @Output() selectFilters: EventEmitter<StTableHeader[]> = new EventEmitter<StTableHeader[]>();\n   /** @Output {EventEmitter<number} [showHoverMenu=] Event emitted when user clicks on hover button of a row */\n   @Output() showHoverMenu: EventEmitter<number> = new EventEmitter<number>();\n   /** @Output {Object(checked: boolean, row: number)} [selectRow=] Event emitted when user clicks on checkbox of a row */\n   @Output() selectRow: EventEmitter<{ checked: boolean, row: number }> = new EventEmitter<{ checked: boolean, row: number }>();\n   /** @Output {Object(checked: boolean, row: number)} [clickCell=] Event emitted when user clicks on checkbox of a row */\n   @Output() clickCell: EventEmitter<{ row: number, fieldId: string, label: string }> = new EventEmitter<{ row: number, fieldId: string, label: string }>();\n   /** @Output {StDynamicTableFkEvent} [clickFk=] Event emitted when user clicks on Fk cell */\n   @Output() clickFk: EventEmitter<StDynamicTableFkEvent> = new EventEmitter<StDynamicTableFkEvent>();\n\n   public fields: StDynamicTableHeader[] = [];\n\n   private _jsonSchema: JSONSchema4;\n   private _uiDefinitions: StDynamicTableUserInterface;\n\n   private _templateContentFilter: TemplateRef<any>;\n   private _fkSeparator: string = ' - ';\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   /** @Input {JSONSchema4} [jsonSchema=] Json schema to define its structure */\n   @Input() @StRequired()\n   get jsonSchema(): JSONSchema4 {\n      return this._jsonSchema;\n   }\n\n   set jsonSchema(_jsonSchema: JSONSchema4) {\n      this._jsonSchema = _jsonSchema;\n      this._manageFieldsUpdate();\n   }\n\n   /** @Input {StDynamicTableUserInterface} [uiDefinitions=''] UI definition for each field */\n   @Input()\n   get uiDefinitions(): StDynamicTableUserInterface {\n      return this._uiDefinitions;\n   }\n\n   set uiDefinitions(_uiDefinitions: StDynamicTableUserInterface) {\n      this._uiDefinitions = _uiDefinitions;\n      this._manageFieldsUpdate();\n   }\n\n   public onFilterClick(selectedFilter: any): void {\n      this.clickFilter.emit(selectedFilter);\n   }\n\n   public onChangeOrder(order: Order): void {\n      if (order) {\n         this.changeOrder.emit(order);\n      }\n   }\n\n   public onSelectAll(checked: boolean): void {\n      this.selectAll.emit(checked);\n   }\n\n   public onSelectedFilters(selectedFilters: StTableHeader[]): void {\n      this.selectFilters.emit(selectedFilters);\n   }\n\n   public onShowHoverMenu(row: number): void {\n      this.showHoverMenu.emit(row);\n   }\n\n   public onLeaveRow(): void {\n      this.showHoverMenu.emit(undefined);\n   }\n\n   public onClickFk(item: any, field: StDynamicTableHeader): void {\n      this.clickFk.emit({\n         fk: field.fk,\n         value: item[field.id]\n      });\n   }\n\n   public getCellContent(item: { [key: string]: any}, field: StDynamicTableHeader): string {\n      if (field.group) {\n         const groupLabel = field.group.split(this._fkSeparator)\n            .map(_groupKey => item[_groupKey])\n            .join(this._fkSeparator);\n         return groupLabel.length > this._fkSeparator.length ? groupLabel : item[field.id];\n      }\n      return item[field.id];\n   }\n\n   public getCellClasses(field: StDynamicTableHeader): { clickable?: boolean } {\n      let classes: { clickable?: boolean } = {};\n\n      if (field.reference) {\n         classes.clickable = true;\n      }\n\n      return classes;\n   }\n\n   public getCellStyles(field: StDynamicTableHeader): any {\n      const uiDefinition = this.uiDefinitions && this.uiDefinitions[field.id];\n      return uiDefinition && uiDefinition.styles;\n   }\n\n   public onSelectRow(checkboxEvent: { checked: boolean, value: any }, row: number): void {\n      this.selectRow.emit({ checked: checkboxEvent.checked, row: row });\n   }\n\n   public onClickCellLabel(row: number, fieldId: string, label: string): void {\n      this.clickCell.emit({ row, fieldId, label });\n   }\n\n   private _manageFieldsUpdate(): void {\n      this.fields = StDynamicTableUtils.getHeaderFieldsFromJsonSchema(this._jsonSchema, this._uiDefinitions);\n      this.updateFields.emit(this.fields);\n      this._cd.markForCheck();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StTableModule } from '../st-table/st-table.module';\nimport { StDynamicTableComponent } from './st-dynamic-table.component';\nimport { StCheckboxModule } from '../st-checkbox/st-checkbox.module';\n\n@NgModule({\n   imports: [CommonModule, StTableModule, StCheckboxModule],\n   declarations: [StDynamicTableComponent],\n   exports: [StDynamicTableComponent]\n})\n\nexport class StDynamicTableModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { StIconTab } from './st-icon-tabs.model';\n\n/**\n * @description {Component} [Vertical Icon Tabs]\n *\n * The vertical icon tabs component has been designed to display content in different sections.\n *\n * @model\n *\n *   [Icon tab] {./st-icon-tabs.model.ts#StIconTab}\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-vertical-icon-tabs class=\"vertical-icon-tabs\"\n * [options]=\"options\"\n * [activeOption]=\"active\"\n * (changeOption)=\"onChangeOption($event)\">\n * </st-vertical-icon-tabs>\n * ```\n *\n */\n@Component({\n   selector: 'st-vertical-icon-tabs',\n   templateUrl: './st-vertical-icon-tabs.component.html',\n   styleUrls: ['./st-vertical-icon-tabs.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StVerticalIconTabsComponent implements OnInit {\n   /** @Input {StIconTab} [activeOption=] Active option */\n   @Input() activeOption: StIconTab;\n   /** @Input {StIconTab[]} [options=] Option list */\n   @Input() options: StIconTab[];\n   /** @Output {StIconTab} [changeOption=] Event emitted when user clicks on an option */\n   @Output() changeOption: EventEmitter<StIconTab> = new EventEmitter<StIconTab>();\n\n   ngOnInit(): void {\n      if (this.options && this.options.length > 0) {\n         this.activateOption(this.options[0]);\n      }\n   }\n\n   isActive(option: StIconTab): boolean {\n      return this.activeOption === option;\n   }\n\n   activateOption(option: StIconTab): void {\n      this.changeOption.emit(option);\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StVerticalIconTabsComponent } from './st-vertical-icon-tabs.component';\n\n\n@NgModule({\n  declarations: [StVerticalIconTabsComponent],\n  exports: [StVerticalIconTabsComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class StVerticalIconTabsModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { PipesModule } from './pipes/pipes.module';\nimport { StAlertsModule } from './st-alerts/st-alerts.module';\nimport { StBubbleModule } from './st-bubble/st-bubble.module';\nimport { StBreadcrumbsModule } from './st-breadcrumbs/st-breadcrumbs.module';\nimport { StCheckboxModule } from './st-checkbox/st-checkbox.module';\nimport { StDocsModule } from './st-docs/st-docs.module';\nimport { StDraggableCardModule } from './st-draggable-card/st-draggable-card.module';\nimport { StDropdownMenuModule } from './st-dropdown-menu/st-dropdown-menu.module';\nimport { StFileButtonModule } from './st-file-button/st-file-button.module';\nimport { StFooterModule } from './st-footer/st-footer.module';\nimport { StFormDirectiveModule } from './directives/form/form-directives.module';\nimport { StFormModule } from './st-form/st-form.module';\nimport { StFormListModule } from './st-form-list/st-form-list.module';\nimport { StFullscreenLayoutModule } from './st-fullscreen-layout/st-fullscreen-layout.module';\nimport { StHeaderModule } from './st-header/st-header.module';\nimport { StHorizontalTabsModule } from './st-horizontal-tabs/st-horizontal-tabs.module';\nimport { StInfoBoxModule } from './st-info-box/st-info-box.module';\nimport { StInputModule } from './st-input/st-input.module';\nimport { StItemListModule } from './st-item-list/st-item-list.module';\nimport { StLabelModule } from './st-label/index';\nimport { StLauncherModule } from './st-launcher/st-launcher.module';\nimport { StModalModule } from './st-modal/st-modal.module';\nimport { StModal2Module } from './st-modal2/st-modal2.module';\nimport { StPageTitleModule } from './st-page-title/st-page-title.module';\nimport { StPaginationModule } from './st-pagination/st-pagination.module';\nimport { StPopModule } from './st-pop/st-pop.module';\nimport { StPopOverModule } from './st-pop-over/st-pop-over.module';\nimport { StPrismModule } from './st-docs/st-prism/st-prism.module';\nimport { StProgressBarModule } from './st-progress-bar/st-progress-bar.module';\nimport { StRadioMenuModule } from './st-radio-menu/st-radio-menu.module';\nimport { StRadioModule } from './st-radio/st-radio.module';\nimport { StSearchModule } from './st-search/st-search.module';\nimport { StSelectModule } from './st-select/st-select.module';\nimport { StSidebarModule } from './st-sidebar/st-sidebar.module';\nimport { StSpinnerModule } from './st-spinner/st-spinner.module';\nimport { StSwitchModule } from './st-switch/st-switch.module';\nimport { StTableModule } from './st-table/st-table.module';\nimport { StTagInputModule } from './st-tag-input/st-tag-input.module';\nimport { StTextareaModule } from './st-textarea/st-textarea.module';\nimport { StToggleButtonsModule } from './st-toggle-buttons/st-toggle-buttons.module';\nimport { StTooltipModule } from './st-tooltip/st-tooltip.module';\nimport { StTwoListSelectionModule } from './st-two-list-selection/st-two-list-selection.module';\nimport { StVerticalTabsModule } from './st-vertical-tabs/st-vertical-tabs.module';\nimport { StWidgetModule } from './st-widget/st-widget.module';\nimport { StFormFieldModule } from './st-form/st-form-field/st-form-field.module';\nimport { StForegroundNotificationsModule } from './st-foreground-notifications/st-foreground-notifications.module';\nimport { StZeroPageModule } from './st-zero-page/st-zero-page.module';\nimport { StColorPickerModule } from './st-color-picker/st-color-picker.module';\nimport { StDynamicTableModule } from './st-dynamic-table/st-dynamic-table.module';\nimport { StVerticalIconTabsModule } from './st-vertical-icon-tabs/st-vertical-icon-tabs.module';\n\nexport const DECLARATIONS: any[] = [\n   PipesModule,\n   StAlertsModule,\n   StBreadcrumbsModule,\n   StBubbleModule,\n   StCheckboxModule,\n   StColorPickerModule,\n   StDocsModule,\n   StDraggableCardModule,\n   StDropdownMenuModule,\n   StFileButtonModule,\n   StFooterModule,\n   StForegroundNotificationsModule,\n   StFormDirectiveModule,\n   StFormModule,\n   StFormFieldModule,\n   StFormListModule,\n   StFullscreenLayoutModule,\n   StHeaderModule,\n   StHorizontalTabsModule,\n   StInfoBoxModule,\n   StInputModule,\n   StItemListModule,\n   StLabelModule,\n   StLauncherModule,\n   StModalModule,\n   StModal2Module,\n   StPageTitleModule,\n   StPaginationModule,\n   StPopModule,\n   StPrismModule,\n   StProgressBarModule,\n   StPopOverModule,\n   StRadioMenuModule,\n   StRadioModule,\n   StSearchModule,\n   StSelectModule,\n   StSidebarModule,\n   StSpinnerModule,\n   StSwitchModule,\n   StDynamicTableModule,\n   StTableModule,\n   StTagInputModule,\n   StTextareaModule,\n   StToggleButtonsModule,\n   StTooltipModule,\n   StTwoListSelectionModule,\n   StVerticalIconTabsModule,\n   StVerticalTabsModule,\n   StWidgetModule,\n   StZeroPageModule\n];\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StAlertsService } from './st-alerts/st-alerts.service';\nimport { StModalService } from './st-modal/st-modal.service';\nimport { StPaginationService } from './st-pagination/st-pagination.service';\nimport { EgeoResolveService } from './utils/egeo-resolver/egeo-resolve.service';\nimport { SelectOneDispatcher } from './utils/unique-dispatcher';\nimport { StWindowRefService } from './utils/window-service';\n\nimport { DECLARATIONS } from './barrels';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ...DECLARATIONS\n   ],\n   declarations: [],\n   exports: [\n      ...DECLARATIONS\n   ]\n})\nexport class EgeoModule {\n   static forRoot(): ModuleWithProviders {\n      return {\n         ngModule: EgeoModule,\n         providers: [\n            StModalService,\n            StPaginationService,\n            EgeoResolveService,\n            SelectOneDispatcher,\n            StAlertsService,\n            StWindowRefService\n         ]\n      };\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n// tslint:disable-next-line:no-namespace\nexport namespace StRegEx {\n    'use strict';\n\n    export const EMAIL = '[_a-z0-9-]+(\\\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\\\.[a-z0-9-]+)*(\\\\.[a-z]{2,})';\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { get as _get } from 'lodash';\n\n\nimport { StPopOffset } from '../st-pop/st-pop.model';\n\n/**\n * @description {Component} [StBubbleOnEllipsis]\n *\n * This component displays a bubble below a content if its width is longer than container\n *\n * @example\n *\n * {html}\n *\n * ```\n *      <st-bubble-on-ellipsis\n *         [text]=\"'Text for bubble'\"\n *         [openToLeft]=\"true\"\n *         [maxWidth]=\"'40%'\">\n *          Any text\n *      </st-bubble-on-ellipsis>\n * ```\n */\n@Component({\n   selector: 'st-bubble-on-ellipsis',\n   styleUrls: ['./st-bubble-on-ellipsis.component.scss'],\n   templateUrl: './st-bubble-on-ellipsis.component.html',\n   host: {\n      '[class.multi-line]': 'lines > 1',\n      '[style.-webkit-line-clamp]': 'lines'\n   }\n})\nexport class StBubbleOnEllipsisComponent {\n\n   /** @Input {string} [text=] Text of the bubble */\n   @Input() text: string;\n   /** @Input {string} [minWidth=] min width for bubble  */\n   @Input() minWidth?: string;\n   /** @Input {string} [maxWidth=] max width for bubble  */\n   @Input() maxWidth?: string;\n   /** @Input {string} [lines=1] number of lines where ellipsis is placed  */\n   @Input() lines?: number = 1;\n\n   @ViewChild('bubbleTrigger', { static: false }) bubbleTrigger: ElementRef;\n\n   offset: StPopOffset;\n   visible: boolean;\n\n   private _openToLeft: boolean;\n\n   constructor(private _cd: ChangeDetectorRef) {\n   }\n\n   /** @Input {boolean} [openToLeft=true] when true, bubble is displayed with the arrow to the right  */\n   @Input()\n   get openToLeft(): boolean {\n      return this._openToLeft;\n   }\n\n   set openToLeft(_openToLeft: boolean) {\n      this._openToLeft = _openToLeft;\n      this.offset = this._openToLeft ? { x: 38, y: 7 } : { x: 0, y: 7 };\n      this._cd.markForCheck();\n   }\n\n   onShowBubble(): void {\n      if (_get(this.bubbleTrigger, 'nativeElement.parentElement.offsetWidth') < _get(this.bubbleTrigger, 'nativeElement.parentElement.scrollWidth')\n         || _get(this.bubbleTrigger, 'nativeElement.parentElement.offsetHeight') < _get(this.bubbleTrigger, 'nativeElement.parentElement.scrollHeight')) {\n         this.visible = true;\n      }\n   }\n\n   onHideBubble(): void {\n      this.visible = false;\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StBubbleOnEllipsisComponent } from './st-bubble-on-ellipsis.component';\nimport { StBubbleModule } from './../st-bubble/st-bubble.module';\n\n@NgModule({\n   imports: [CommonModule, StBubbleModule],\n   declarations: [StBubbleOnEllipsisComponent],\n   exports: [StBubbleOnEllipsisComponent]\n})\nexport class StBubbleOnEllipsisModule {}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a. All rights reserved.\n *\n * This software â including all its source code â contains proprietary\n * information of Stratio Big Data Inc., Sucursal en EspaÃ±a and\n * may not be revealed, sold, transferred, modified, distributed or\n * otherwise made available, licensed or sublicensed to third parties;\n * nor reverse engineered, disassembled or decompiled, without express\n * written authorization from Stratio Big Data Inc., Sucursal en EspaÃ±a.\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { StDropDownMenuItem, StDropDownVisualMode } from '../st-dropdown-menu/st-dropdown-menu.interface';\nimport { StPopPlacement } from '../st-pop/st-pop.model';\n\n/**\n * @description {Component} [Filter selector]\n *\n * The filter selector allows display a filter with a list of options\n *\n * @example\n *\n * {html}\n *\n * ```\n * <st-filter-selector\n *    [filterList]=\"filter\"\n *    [openFilter]=\"openFilter\"\n *    [selected]=\"selectedFilter\"\n *    (clickFilter)=\"onFilter($event)\"\n *    (changeFilterVisibility)=\"onChangeFilterVisibility()\"\n *    (closeFilter)=\"onCloseFilter()\">\n * </st-filter-selector>\n * ```\n *\n */\n@Component({\n   selector: 'st-filter-selector',\n   templateUrl: './st-filter-selector.template.html',\n   styleUrls: ['./st-filter-selector.style.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class StFilterSelectorComponent implements OnInit {\n   /** @Input {boolean} [openFilter=false] This boolean is needed to specify the status of the filter (open or closed) */\n   @Input() openFilter: boolean = false;\n   /** @Input {StDropDownMenuItem[]} [filterList=] List of options */\n   @Input() filterList: StDropDownMenuItem[];\n   /** @Input {StDropDownMenuItem} [selected=] Selected option */\n   @Input() selected: StDropDownMenuItem;\n   /** @Input {boolean} [menuAlignedToRight=false] Boolean to indicate if menu has to be displayed aligned to the right */\n   @Input() menuAlignedToRight: boolean = false;\n   /** @Output {StDropDownMenuItem} [clickFilter=] Event emitted when an option is selected */\n   @Output() clickFilter: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n   /** @Output {boolean} [changeFilterVisibility=] Event emitted when visibility of options changes */\n   @Output() changeFilterVisibility: EventEmitter<boolean> = new EventEmitter<boolean>();\n   /** @Output {boolean} [closeFilter=] Event emitted when option menu is closed */\n   @Output() closeFilter: EventEmitter<boolean> = new EventEmitter<boolean>();\n   /** @output {StDropDownMenuItem} [itemMouseEnter] Event emitted when mouse is over an item */\n   @Output() itemMouseEnter: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n   /** @output {StDropDownMenuItem} [itemMouseLeave] Event emitted when mouse leaves an item */\n   @Output() itemMouseLeave: EventEmitter<StDropDownMenuItem> = new EventEmitter<StDropDownMenuItem>();\n\n   public readonly sectionMenuVisualMode: StDropDownVisualMode = StDropDownVisualMode.MENU_LIST;\n   public menuPlacement: StPopPlacement;\n\n   ngOnInit(): void {\n      this.menuPlacement = this.menuAlignedToRight ? StPopPlacement.BOTTOM_END : StPopPlacement.BOTTOM_START;\n      setTimeout(() => {\n         if (!this.selected && this.filterList && this.filterList.length) {\n            this.clickFilter.emit(this.filterList[0]);\n         }\n      });\n   }\n\n   onClickFilter(selectedFilter: StDropDownMenuItem): void {\n      this.clickFilter.emit(selectedFilter);\n   }\n\n   onChangeFilterVisibility(): void {\n      this.changeFilterVisibility.emit(!this.openFilter);\n   }\n\n   onCloseFilter(): void {\n      this.closeFilter.emit(true);\n   }\n\n   onItemMouseEnter(item: StDropDownMenuItem): void {\n      this.itemMouseEnter.emit(item);\n   }\n\n   onItemMouseLeave(item: StDropDownMenuItem): void {\n      this.itemMouseLeave.emit(item);\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StFilterSelectorComponent } from './st-filter-selector.component';\nimport { StDropdownMenuModule } from '../st-dropdown-menu/st-dropdown-menu.module';\nimport { StClickOutsideModule } from '../directives/st-click-outside/st-click-outside.module';\n\n@NgModule({\n   imports: [CommonModule, StDropdownMenuModule, StClickOutsideModule],\n   declarations: [StFilterSelectorComponent],\n   exports: [StFilterSelectorComponent]\n})\nexport class StFilterSelectorModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport interface StMenuModel<T> {\n  name: string;\n  value: T;\n  icon?: string;\n  subMenus?: Array<StMenuModel<T>>;\n  separator?: boolean;\n  status?: StMenuStatus;\n  disabled?: boolean;\n}\n\n\nexport enum StMenuStatus {\n   success = 'success',\n   warning = 'warning',\n   critical = 'critical'\n}\n\nexport enum StMenuPosition {\n   left = 'left',\n   right = 'right'\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {\n   Component, OnInit, Output, EventEmitter, Input, ElementRef,\n   ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { StMenuModel, StMenuPosition } from './st-menu.model';\n\n/**\n * @description {Component} Menu\n *\n * This components shows a dropdown menu with nested submenus\n *\n *  @model\n *\n *   [Menu model] {./st-menu.model.ts#StMenuModel}\n *   [Menu status] {./st-menu.model.ts#StMenuStatus}\n *   [Menu position] {./st-menu.model.ts#StMenuPosition}\n *\n * @example\n *\n * {html}\n *\n * ```\n *    <st-menu\n *       qaTag=\"menu-example\"\n *       [menuOptions]=\"options\"\n *       [dynamicHeight]=\"true\"\n *       (selectedOption)=\"onSelectMenuOption(event)\">\n *    </st-menu>\n * ```\n */\n@Component({\n   selector: 'st-menu',\n   templateUrl: './st-menu.component.html',\n   styleUrls: ['./st-menu.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StMenuComponent<T> implements OnDestroy, OnInit {\n\n   /** @input {string} [qaTag=''] For set id for tests */\n   @Input() qaTag: string;\n   /** @input {StMenuModel<T>[]} list of menu items to show */\n   @Input() menuOptions: StMenuModel<T>[];\n   /** @input {any} current selected option */\n   @Input() activeOption: any;\n   /** @input {StMenuPosition} current menu position: left | right */\n   @Input() position: StMenuPosition = StMenuPosition.right;\n   /** @input {boolean} show search input */\n   @Input() search: boolean;\n   /** @input {string} search input custom label */\n   @Input() searchLabel: string = 'Search';\n   /** @input {boolean} Show menu in full height mode */\n   @Input() dynamicHeight: boolean;\n   /** @input {number} adjust menu options position */\n   @Input() marginTop: number;\n   /** @input {boolean} shows menu dropdown animation */\n   @Input() animate: boolean = true;\n   /** @input {boolean} disable menu toggle */\n   @Input() disabled: boolean = false;\n\n   /** @output {StMenuModel<T>} [selectedOption=''] Notify the selected menu option */\n   @Output() selectedOption: EventEmitter<StMenuModel<T>> = new EventEmitter<StMenuModel<T>>();\n   /** @output {string} [searchChange=''] Notify when the search input value changes */\n   @Output() searchChange: EventEmitter<string> = new EventEmitter<string>();\n\n   public showMenu: boolean = false;\n   public searchFormControl: FormControl;\n\n   private _formControlSubscription: Subscription;\n\n   constructor(private _cd: ChangeDetectorRef) { }\n\n   ngOnInit(): void {\n      if (this.search) {\n         this.searchFormControl = new FormControl('');\n         this._formControlSubscription = this.searchFormControl.valueChanges.subscribe(value => {\n            this.searchChange.emit(value);\n         });\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this._formControlSubscription) {\n         this._formControlSubscription.unsubscribe();\n      }\n   }\n\n   /**\n    * Toggle menu activation\n    * @param event\n    */\n   public activateMenu(event: Event): void {\n      if (this.showMenu) {\n         this.hideMenu();\n      } else {\n         setTimeout(() => {\n            this.showMenu = true;\n            this._cd.markForCheck();\n         });\n      }\n   }\n\n   /**\n    * Emits the selected menu option from childs\n    * @param event: StMenuModel<T>\n    */\n   public selectedMenuOption(event: StMenuModel<T>): void {\n      this.selectedOption.emit(event);\n      this.hideMenu();\n   }\n\n   /**\n    * Hides the menu and reset the search input value if it's enabled\n    */\n   public hideMenu(): void {\n      this.showMenu = false;\n      if (this.searchFormControl) {\n         this.searchFormControl.setValue('');\n      }\n      this._cd.markForCheck();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {\n   AfterViewInit,\n   ChangeDetectionStrategy,\n   ChangeDetectorRef,\n   Component,\n   ElementRef,\n   EventEmitter,\n   Input,\n   Output,\n   ViewChild,\n   OnDestroy\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { StMenuModel, StMenuPosition } from './../st-menu.model';\n\n@Component({\n   selector: 'st-menu-options',\n   templateUrl: './st-menu-options.component.html',\n   styleUrls: ['./st-menu-options.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StMenuOptionsComponent<T> implements AfterViewInit, OnDestroy {\n\n   @Input() maxHeight: number;\n   @Input() dynamicHeight: boolean;\n   @Input() activeOption: any;\n   @Input() menuOptions: Array<StMenuModel<T>>;\n   @Input() position: StMenuPosition = StMenuPosition.right;\n   @Input() searchFormControl: FormControl;\n   @Input() searchLabel: string;\n   @Input() level: number = 0;\n   @Input() marginTop: number;\n   @Input() animate: boolean = true;\n   @Input() qaTag: string;\n\n   @Output() searchBox: EventEmitter<string> = new EventEmitter<string>();\n   @Output() selectedOption: EventEmitter<StMenuModel<T>> = new EventEmitter<StMenuModel<T>>();\n\n   @ViewChild('childList', {static: false}) childListElement: ElementRef<HTMLElement>;\n\n   public openedItem: StMenuModel<T>;\n   public menuPosition: number;\n   public maxHeightChild: number;\n   public scrollTopEnabled: boolean;\n   public scrollBottomEnabled: boolean;\n   public initialized: boolean = false;\n   public scrollTop: number = 0;\n\n   private _scrollAnimationHandler: number;\n\n   private _scrollSubject: Subject<void> = new Subject();\n   private _scrollSubscription: Subscription;\n\n   private readonly _SCROLL_SPEED: number = 120;                                // px per second\n   private readonly _SCROLL_SPEED_MILLIS: number = this._SCROLL_SPEED / 1000;   // px per millisecond\n\n   constructor(private _cd: ChangeDetectorRef) { }\n\n   ngAfterViewInit(): void {\n      if (this.dynamicHeight) {\n         this._checkScrollButtons();\n      }\n      this.initialized = true;\n      this._cd.detectChanges();\n      this._scrollSubscription = this._scrollSubject\n         .pipe(debounceTime(50))\n         .subscribe(() => this._checkScrollButtons());\n   }\n\n   ngOnDestroy(): void {\n      cancelAnimationFrame(this._scrollAnimationHandler);\n      if (this._scrollSubscription) {\n         this._scrollSubscription.unsubscribe();\n      }\n   }\n\n   /**\n    * Set the submenu position when an option is hovered\n    *\n    * @param event MouseEnter event when an option is hovered\n    * @param item Hovered item of the list\n    */\n   public showMenu(event: MouseEvent, item: StMenuModel<T>): void {\n      if (this.openedItem !== item && (!this.activeOption || this.activeOption.value !== item)) {\n         this.openedItem = item;\n         if (item.subMenus) {\n            const target: HTMLElement = event.target as HTMLElement;\n            this.menuPosition = target.offsetTop;\n            if (this.dynamicHeight) {\n               this.maxHeightChild = window.innerHeight - target.getBoundingClientRect().top - 30;\n            }\n         }\n      }\n   }\n\n   /**\n    * Saves current scroll position and check the scroll buttons state\n    */\n   public onScroll(): void {\n      this.scrollTop = this.childListElement.nativeElement.scrollTop;\n      if (this.dynamicHeight) {\n         this._scrollSubject.next();\n      }\n   }\n\n   /**\n    * Generates a ngFor trackBy id from StMenuModel name and icon values\n    * @param index\n    * @param item\n    */\n   public trackByFn(index: number, item: StMenuModel<T>): string {\n      return item.name + (item.icon || '');\n   }\n\n   /**\n    * Starts a scroll animation frame\n    * @param reverse\n    */\n   public scrollTo(reverse: boolean): void {\n      const startScrollAnimationTime = new Date().getTime(); // initial animation time in milliseconds\n      const startScrollAnimationPosition = this.childListElement.nativeElement.scrollTop; // initial animation position\n      this.openedItem = null;\n      this._scrollAnimationHandler = requestAnimationFrame(() => this._scrollAnimation(reverse, startScrollAnimationTime,  startScrollAnimationPosition));\n   }\n\n   /**\n    * Stop current scroll animation frame\n    */\n   public stopScroll(): void {\n     cancelAnimationFrame(this._scrollAnimationHandler);\n   }\n\n   /**\n    * Clear the search input value\n    */\n   public removeSearch(): void {\n      this.searchFormControl.setValue('');\n   }\n\n   /**\n    * Check the selected option and emits if it's valid\n    * @param event\n    * @param item\n    */\n   public onSelectOption(event: Event, item: StMenuModel<T>): void {\n      if ((!item.subMenus || !item.subMenus.length) && (!this.activeOption || this.activeOption !== item.value)) {\n         this.selectedOption.emit(item);\n      } else {\n         // Prevents close menu\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Generates menu item id\n    * @param item\n    */\n   public getItemId(item: StMenuModel<T>): string {\n      return (item.icon || '') + item.name.replace(/\\W/g, '_') + '-option';\n   }\n\n   /**\n    * Recursive scroll animation frame method\n    * @param reverse sense of the scroll animation\n    */\n   private _scrollAnimation(reverse: boolean,  startScrollAnimationTime: number, startScrollAnimationPosition: number): void {\n      const current: number = new Date().getTime();\n      const runtime: number = current - startScrollAnimationTime;\n      // initialPosition in px + (reverse: negative or positive sense * millis from animation start * px per millis)\n      const position: number = startScrollAnimationPosition + ((reverse ? 1 : -1) * runtime * this._SCROLL_SPEED_MILLIS);\n      this.childListElement.nativeElement.scrollTo(0, position);\n      this._scrollAnimationHandler = requestAnimationFrame(() => this._scrollAnimation(reverse, startScrollAnimationTime, startScrollAnimationPosition));\n   }\n\n   /**\n    * Enable or disable the top and bottom scroll buttons depending of the scrollList position\n    */\n   private _checkScrollButtons(): void {\n      const scrollList: HTMLElement = this.childListElement.nativeElement;\n      this.scrollTopEnabled = scrollList.scrollTop > 0;\n      this.scrollBottomEnabled = scrollList.getBoundingClientRect().height + scrollList.scrollTop < scrollList.scrollHeight - 1;\n      this._cd.markForCheck();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StMenuComponent } from './st-menu.component';\nimport { StMenuOptionsComponent } from './st-menu-options/st-menu-options.component';\nimport { StClickOutsideModule } from './../directives/st-click-outside/st-click-outside.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    StClickOutsideModule\n  ],\n  declarations: [\n    StMenuComponent,\n    StMenuOptionsComponent\n  ],\n  exports: [\n    StMenuComponent\n  ]\n})\nexport class StMenuModule { }\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nexport class StTagItem {\n   id: any;\n   text: string;\n   icon?: string;\n   bubble?: string;\n   [key: string]: any;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\nimport { StTagItem } from './st-tag.model';\n\n/**\n * @description {Component} [Tag]\n *\n * The tag component allows to display small texts.\n *\n * @model\n *\n *   [StTagItem] {./st-tag.model.ts#StTagItem}\n *\n * @example\n *\n * {html}\n *\n * ```\n *  <st-tag [tag]=\"simpleTag\" class=\"small\" [removable]=\"true\"></st-tag>\n *\n * ```\n *\n */\n@Component({\n   selector: 'st-tag',\n   templateUrl: 'st-tag.component.template.html',\n   styleUrls: ['st-tag.component.scss'],\n   host: { 'class': 'st-tag' }\n})\n\nexport class StTagComponent {\n   /** @Input {StTagItem} [tag=] Item that contains the tag info  */\n   @Input() tag: StTagItem;\n   /** @Input {boolean} [removable=] Boolean to display or not the cross icon to remove tag */\n   @HostBinding('class.st-tag--removable')\n   @Input() removable: boolean;\n   /** @Input {boolean} [clickable=true] Boolean to set tag as clicklable or not */\n   @HostBinding('class.st-tag--clickable')\n   @Input() clickable: boolean = true;\n   /** @Output {StTagItem} [remove=] Even emitted when cross icon is clicked  */\n   @Output() remove: EventEmitter<StTagItem> = new EventEmitter<StTagItem>();\n   /** @Output {StTagItem} [click=] Event emitted when tag is clicked */\n   @Output() click: EventEmitter<StTagItem> = new EventEmitter<StTagItem>();\n\n   showBubble: boolean;\n\n   constructor(private _cd: ChangeDetectorRef) {\n\n   }\n\n   onRemove(): void {\n      this.remove.emit(this.tag);\n   }\n\n   onClick(filter: StTagItem): void {\n      this.click.emit(filter);\n   }\n\n   onChangeBubbleVisibility(visible: boolean): void {\n      this.showBubble = visible;\n      this._cd.markForCheck();\n   }\n\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StTagComponent } from './st-tag.component';\nimport { StBubbleModule } from '../st-bubble/st-bubble.module';\n\n\n@NgModule({\n   imports: [\n      CommonModule,\n      StBubbleModule\n   ],\n   declarations: [\n      StTagComponent\n   ],\n   exports: [StTagComponent]\n})\n\nexport class StTagModule {\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Type } from '@angular/core';\n\nexport class DemoGeneratorProviders {\n   components: Type<any>[];\n   inputs?: Object;\n   outputs?: Object;\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport {\n   ChangeDetectionStrategy,\n   Component,\n   ComponentFactoryResolver,\n   ComponentRef,\n   OnDestroy,\n   AfterViewInit,\n   ViewChild,\n   ViewContainerRef,\n   Type\n} from '@angular/core';\n\nimport { DemoGeneratorProviders } from './demo-generator.interface';\n\n@Component({\n   selector: 'st-demo-body',\n   template: '<div #stDemoBody></div>',\n   styles: [`\n      :host {\n         width: 100%;\n         display: block;\n      }\n   `],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StDemoGenerator implements OnDestroy, AfterViewInit {\n   @ViewChild('stDemoBody', { read: ViewContainerRef, static: false }) target: ViewContainerRef;\n\n   inputs: Object;\n   outputs: Object;\n   component: Type<any>;\n\n   private componentRef: ComponentRef<any>;\n\n   constructor(\n      private cfr: ComponentFactoryResolver,\n      private config: DemoGeneratorProviders\n   ) {\n      this.inputs = config.inputs;\n      this.outputs = config.outputs;\n      this.component = config.components[0];\n   }\n\n   /** DYNAMIC BODY DEMO COMPONENT LOAD */\n   ngOnDestroy(): void {\n      if (this.componentRef) {\n         this.componentRef.destroy();\n      }\n   }\n\n   ngAfterViewInit(): void {\n      if (this.component) {\n         this.loadDemo();\n      }\n   }\n\n   private loadDemo(): void {\n      if (!this.componentRef) {\n         this.target.clear();\n         let compFactory = this.cfr.resolveComponentFactory(this.component);\n         this.componentRef = this.target.createComponent(compFactory);\n         this.bindDemoInputsAndOutputs();\n      }\n   }\n\n   // tslint:disable:\n   private bindDemoInputsAndOutputs(): void {\n      // Inputs its not necessary to be defined\n      if (this.inputs) {\n         Object.keys(this.inputs).map(key => this.componentRef.instance[key] = (<any>this.inputs)[key]);\n      }\n\n      // Inputs must be defined for subscribe to them\n      if (this.outputs) {\n         Object.keys(this.outputs).map(key => {\n            if ((this.componentRef.instance as Object).hasOwnProperty(key)) {\n               this.componentRef.instance[key].subscribe((<any>this.outputs)[key]);\n            }\n         });\n      }\n\n      this.componentRef.changeDetectorRef.detectChanges();\n   }\n}\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\n\nimport { StDemoGenerator } from './demo-generator';\n\nexport const routes: Routes = [\n   { path: '', component: StDemoGenerator }\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n\n","/*\n * Â© 2017 Stratio Big Data Inc., Sucursal en EspaÃ±a.\n *\n * This software is licensed under the Apache License, Version 2.0.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the terms of the License for more details.\n *\n * SPDX-License-Identifier: Apache-2.0.\n */\nimport { CommonModule } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule } from '@angular/core';\n\nimport { StDemoGenerator } from './demo-generator';\nimport { DemoGeneratorProviders } from './demo-generator.interface';\nimport { routing } from './demo-generator.routing';\n\n@NgModule({\n   id: 'Demo-factory',\n   imports: [CommonModule, routing],\n   exports: [StDemoGenerator],\n   declarations: [StDemoGenerator],\n   entryComponents: [StDemoGenerator],\n   providers: []\n})\nexport class StDemoGeneratorModule {\n   static withComponents(config: DemoGeneratorProviders): any {\n      return {\n         ngModule: StDemoGeneratorModule,\n         providers: [\n            { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config.components, multi: true },\n            { provide: DemoGeneratorProviders, useValue: config }\n         ]\n      };\n   }\n}\n"]}